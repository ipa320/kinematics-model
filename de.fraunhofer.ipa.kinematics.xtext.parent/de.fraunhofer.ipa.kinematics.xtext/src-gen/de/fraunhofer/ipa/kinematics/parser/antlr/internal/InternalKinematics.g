/*
 * generated by Xtext 2.25.0
 */
grammar InternalKinematics;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package de.fraunhofer.ipa.kinematics.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package de.fraunhofer.ipa.kinematics.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import de.fraunhofer.ipa.kinematics.services.KinematicsGrammarAccess;

}

@parser::members {

 	private KinematicsGrammarAccess grammarAccess;

    public InternalKinematicsParser(TokenStream input, KinematicsGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "Robot";
   	}

   	@Override
   	protected KinematicsGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleRobot
entryRuleRobot returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRobotRule()); }
	iv_ruleRobot=ruleRobot
	{ $current=$iv_ruleRobot.current; }
	EOF;

// Rule Robot
ruleRobot returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getRobotAccess().getRobotAction_0(),
					$current);
			}
		)
		otherlv_1='Robot'
		{
			newLeafNode(otherlv_1, grammarAccess.getRobotAccess().getRobotKeyword_1());
		}
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getRobotAccess().getLeftCurlyBracketKeyword_2());
		}
		otherlv_3='name'
		{
			newLeafNode(otherlv_3, grammarAccess.getRobotAccess().getNameKeyword_3());
		}
		(
			(
				lv_name_4_0=RULE_ID
				{
					newLeafNode(lv_name_4_0, grammarAccess.getRobotAccess().getNameIDTerminalRuleCall_4_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getRobotRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_4_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			otherlv_5='version'
			{
				newLeafNode(otherlv_5, grammarAccess.getRobotAccess().getVersionKeyword_5_0());
			}
			(
				(
					lv_version_6_0=RULE_STRING
					{
						newLeafNode(lv_version_6_0, grammarAccess.getRobotAccess().getVersionSTRINGTerminalRuleCall_5_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getRobotRule());
						}
						setWithLastConsumed(
							$current,
							"version",
							lv_version_6_0,
							"org.eclipse.xtext.common.Terminals.STRING");
					}
				)
			)
		)?
		(
			otherlv_7='macro'
			{
				newLeafNode(otherlv_7, grammarAccess.getRobotAccess().getMacroKeyword_6_0());
			}
			otherlv_8='{'
			{
				newLeafNode(otherlv_8, grammarAccess.getRobotAccess().getLeftCurlyBracketKeyword_6_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getRobotAccess().getMacroMacroParserRuleCall_6_2_0());
					}
					lv_macro_9_0=ruleMacro
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getRobotRule());
						}
						add(
							$current,
							"macro",
							lv_macro_9_0,
							"de.fraunhofer.ipa.kinematics.Kinematics.Macro");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_10=','
				{
					newLeafNode(otherlv_10, grammarAccess.getRobotAccess().getCommaKeyword_6_3_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getRobotAccess().getMacroMacroParserRuleCall_6_3_1_0());
						}
						lv_macro_11_0=ruleMacro
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getRobotRule());
							}
							add(
								$current,
								"macro",
								lv_macro_11_0,
								"de.fraunhofer.ipa.kinematics.Kinematics.Macro");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_12='}'
			{
				newLeafNode(otherlv_12, grammarAccess.getRobotAccess().getRightCurlyBracketKeyword_6_4());
			}
		)?
		(
			otherlv_13='macroCall'
			{
				newLeafNode(otherlv_13, grammarAccess.getRobotAccess().getMacroCallKeyword_7_0());
			}
			otherlv_14='{'
			{
				newLeafNode(otherlv_14, grammarAccess.getRobotAccess().getLeftCurlyBracketKeyword_7_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getRobotAccess().getMacroCallMacroCallParserRuleCall_7_2_0());
					}
					lv_macroCall_15_0=ruleMacroCall
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getRobotRule());
						}
						add(
							$current,
							"macroCall",
							lv_macroCall_15_0,
							"de.fraunhofer.ipa.kinematics.Kinematics.MacroCall");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_16=','
				{
					newLeafNode(otherlv_16, grammarAccess.getRobotAccess().getCommaKeyword_7_3_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getRobotAccess().getMacroCallMacroCallParserRuleCall_7_3_1_0());
						}
						lv_macroCall_17_0=ruleMacroCall
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getRobotRule());
							}
							add(
								$current,
								"macroCall",
								lv_macroCall_17_0,
								"de.fraunhofer.ipa.kinematics.Kinematics.MacroCall");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_18='}'
			{
				newLeafNode(otherlv_18, grammarAccess.getRobotAccess().getRightCurlyBracketKeyword_7_4());
			}
		)?
		(
			otherlv_19='body'
			{
				newLeafNode(otherlv_19, grammarAccess.getRobotAccess().getBodyKeyword_8_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getRobotAccess().getBodyBodyParserRuleCall_8_1_0());
					}
					lv_body_20_0=ruleBody
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getRobotRule());
						}
						set(
							$current,
							"body",
							lv_body_20_0,
							"de.fraunhofer.ipa.kinematics.Kinematics.Body");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_21='}'
		{
			newLeafNode(otherlv_21, grammarAccess.getRobotAccess().getRightCurlyBracketKeyword_9());
		}
	)
;

// Entry rule entryRuleMacro
entryRuleMacro returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMacroRule()); }
	iv_ruleMacro=ruleMacro
	{ $current=$iv_ruleMacro.current; }
	EOF;

// Rule Macro
ruleMacro returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Macro'
		{
			newLeafNode(otherlv_0, grammarAccess.getMacroAccess().getMacroKeyword_0());
		}
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getMacroAccess().getLeftCurlyBracketKeyword_1());
		}
		otherlv_2='name'
		{
			newLeafNode(otherlv_2, grammarAccess.getMacroAccess().getNameKeyword_2());
		}
		(
			(
				lv_name_3_0=RULE_ID
				{
					newLeafNode(lv_name_3_0, grammarAccess.getMacroAccess().getNameIDTerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getMacroRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_3_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			otherlv_4='parameter'
			{
				newLeafNode(otherlv_4, grammarAccess.getMacroAccess().getParameterKeyword_4_0());
			}
			otherlv_5='{'
			{
				newLeafNode(otherlv_5, grammarAccess.getMacroAccess().getLeftCurlyBracketKeyword_4_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getMacroAccess().getParameterParameterParserRuleCall_4_2_0());
					}
					lv_parameter_6_0=ruleParameter
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getMacroRule());
						}
						add(
							$current,
							"parameter",
							lv_parameter_6_0,
							"de.fraunhofer.ipa.kinematics.Kinematics.Parameter");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_7=','
				{
					newLeafNode(otherlv_7, grammarAccess.getMacroAccess().getCommaKeyword_4_3_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getMacroAccess().getParameterParameterParserRuleCall_4_3_1_0());
						}
						lv_parameter_8_0=ruleParameter
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getMacroRule());
							}
							add(
								$current,
								"parameter",
								lv_parameter_8_0,
								"de.fraunhofer.ipa.kinematics.Kinematics.Parameter");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_9='}'
			{
				newLeafNode(otherlv_9, grammarAccess.getMacroAccess().getRightCurlyBracketKeyword_4_4());
			}
		)?
		(
			otherlv_10='body'
			{
				newLeafNode(otherlv_10, grammarAccess.getMacroAccess().getBodyKeyword_5_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getMacroAccess().getBodyBodyParserRuleCall_5_1_0());
					}
					lv_body_11_0=ruleBody
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getMacroRule());
						}
						set(
							$current,
							"body",
							lv_body_11_0,
							"de.fraunhofer.ipa.kinematics.Kinematics.Body");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_12='}'
		{
			newLeafNode(otherlv_12, grammarAccess.getMacroAccess().getRightCurlyBracketKeyword_6());
		}
	)
;

// Entry rule entryRuleParameter
entryRuleParameter returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getParameterRule()); }
	iv_ruleParameter=ruleParameter
	{ $current=$iv_ruleParameter.current; }
	EOF;

// Rule Parameter
ruleParameter returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getParameterAccess().getParameterAction_0(),
					$current);
			}
		)
		otherlv_1='Parameter'
		{
			newLeafNode(otherlv_1, grammarAccess.getParameterAccess().getParameterKeyword_1());
		}
		(
			(
				lv_name_2_0=RULE_ID
				{
					newLeafNode(lv_name_2_0, grammarAccess.getParameterAccess().getNameIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getParameterRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_2_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_3='{'
		{
			newLeafNode(otherlv_3, grammarAccess.getParameterAccess().getLeftCurlyBracketKeyword_3());
		}
		otherlv_4='type'
		{
			newLeafNode(otherlv_4, grammarAccess.getParameterAccess().getTypeKeyword_4());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getParameterAccess().getTypeParameterTypeParserRuleCall_5_0());
				}
				lv_type_5_0=ruleParameterType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getParameterRule());
					}
					set(
						$current,
						"type",
						lv_type_5_0,
						"de.fraunhofer.ipa.kinematics.Kinematics.ParameterType");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_6='value'
			{
				newLeafNode(otherlv_6, grammarAccess.getParameterAccess().getValueKeyword_6_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getParameterAccess().getValueParameterValueParserRuleCall_6_1_0());
					}
					lv_value_7_0=ruleParameterValue
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getParameterRule());
						}
						set(
							$current,
							"value",
							lv_value_7_0,
							"de.fraunhofer.ipa.kinematics.Kinematics.ParameterValue");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_8='}'
		{
			newLeafNode(otherlv_8, grammarAccess.getParameterAccess().getRightCurlyBracketKeyword_7());
		}
	)
;

// Entry rule entryRuleParameterValue
entryRuleParameterValue returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getParameterValueRule()); }
	iv_ruleParameterValue=ruleParameterValue
	{ $current=$iv_ruleParameterValue.current; }
	EOF;

// Rule ParameterValue
ruleParameterValue returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_value_0_0=RULE_ID
				{
					newLeafNode(lv_value_0_0, grammarAccess.getParameterValueAccess().getValueIDTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getParameterValueRule());
					}
					setWithLastConsumed(
						$current,
						"value",
						lv_value_0_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		    |
		{
			newCompositeNode(grammarAccess.getParameterValueAccess().getPoseParserRuleCall_1());
		}
		this_Pose_1=rulePose
		{
			$current = $this_Pose_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getParameterValueAccess().getLinkRefParserRuleCall_2());
		}
		this_LinkRef_2=ruleLinkRef
		{
			$current = $this_LinkRef_2.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleLinkRef
entryRuleLinkRef returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLinkRefRule()); }
	iv_ruleLinkRef=ruleLinkRef
	{ $current=$iv_ruleLinkRef.current; }
	EOF;

// Rule LinkRef
ruleLinkRef returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getLinkRefRule());
				}
			}
			otherlv_0=RULE_STRING
			{
				newLeafNode(otherlv_0, grammarAccess.getLinkRefAccess().getRefLinkCrossReference_0());
			}
		)
	)
;

// Entry rule entryRuleParameterString
entryRuleParameterString returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getParameterStringRule()); }
	iv_ruleParameterString=ruleParameterString
	{ $current=$iv_ruleParameterString.current; }
	EOF;

// Rule ParameterString
ruleParameterString returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getParameterStringAccess().getParameterStringAction_0(),
					$current);
			}
		)
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getParameterStringRule());
					}
				}
				otherlv_1=RULE_STRING
				{
					newLeafNode(otherlv_1, grammarAccess.getParameterStringAccess().getRefParameterCrossReference_1_0());
				}
			)
		)?
		(
			(
				lv_value_2_0=RULE_ID
				{
					newLeafNode(lv_value_2_0, grammarAccess.getParameterStringAccess().getValueIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getParameterStringRule());
					}
					setWithLastConsumed(
						$current,
						"value",
						lv_value_2_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)?
	)
;

// Entry rule entryRuleParameterPose
entryRuleParameterPose returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getParameterPoseRule()); }
	iv_ruleParameterPose=ruleParameterPose
	{ $current=$iv_ruleParameterPose.current; }
	EOF;

// Rule ParameterPose
ruleParameterPose returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getParameterPoseRule());
					}
				}
				otherlv_0=RULE_STRING
				{
					newLeafNode(otherlv_0, grammarAccess.getParameterPoseAccess().getRefParameterCrossReference_0_0());
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getParameterPoseAccess().getValuePoseParserRuleCall_1_0());
				}
				lv_value_1_0=rulePose
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getParameterPoseRule());
					}
					set(
						$current,
						"value",
						lv_value_1_0,
						"de.fraunhofer.ipa.kinematics.Kinematics.Pose");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleParameterLink
entryRuleParameterLink returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getParameterLinkRule()); }
	iv_ruleParameterLink=ruleParameterLink
	{ $current=$iv_ruleParameterLink.current; }
	EOF;

// Rule ParameterLink
ruleParameterLink returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getParameterLinkRule());
					}
				}
				otherlv_0=RULE_ID
				{
					newLeafNode(otherlv_0, grammarAccess.getParameterLinkAccess().getParamParameterCrossReference_0_0());
				}
			)
		)
		    |
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getParameterLinkRule());
					}
				}
				otherlv_1=RULE_STRING
				{
					newLeafNode(otherlv_1, grammarAccess.getParameterLinkAccess().getLinkLinkCrossReference_1_0());
				}
			)
		)
	)
;

// Entry rule entryRuleParameterType
entryRuleParameterType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getParameterTypeRule()); }
	iv_ruleParameterType=ruleParameterType
	{ $current=$iv_ruleParameterType.current; }
	EOF;

// Rule ParameterType
ruleParameterType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getParameterTypeAccess().getParameterStringTypeParserRuleCall_0());
		}
		this_ParameterStringType_0=ruleParameterStringType
		{
			$current = $this_ParameterStringType_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getParameterTypeAccess().getParameterLinkRefTypeParserRuleCall_1());
		}
		this_ParameterLinkRefType_1=ruleParameterLinkRefType
		{
			$current = $this_ParameterLinkRefType_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getParameterTypeAccess().getParameterPoseTypeParserRuleCall_2());
		}
		this_ParameterPoseType_2=ruleParameterPoseType
		{
			$current = $this_ParameterPoseType_2.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleParameterStringType
entryRuleParameterStringType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getParameterStringTypeRule()); }
	iv_ruleParameterStringType=ruleParameterStringType
	{ $current=$iv_ruleParameterStringType.current; }
	EOF;

// Rule ParameterStringType
ruleParameterStringType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getParameterStringTypeAccess().getParameterStringTypeAction_0(),
					$current);
			}
		)
		otherlv_1='String'
		{
			newLeafNode(otherlv_1, grammarAccess.getParameterStringTypeAccess().getStringKeyword_1());
		}
	)
;

// Entry rule entryRuleParameterLinkRefType
entryRuleParameterLinkRefType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getParameterLinkRefTypeRule()); }
	iv_ruleParameterLinkRefType=ruleParameterLinkRefType
	{ $current=$iv_ruleParameterLinkRefType.current; }
	EOF;

// Rule ParameterLinkRefType
ruleParameterLinkRefType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getParameterLinkRefTypeAccess().getParameterLinkRefTypeAction_0(),
					$current);
			}
		)
		otherlv_1='LinkRef'
		{
			newLeafNode(otherlv_1, grammarAccess.getParameterLinkRefTypeAccess().getLinkRefKeyword_1());
		}
	)
;

// Entry rule entryRuleParameterPoseType
entryRuleParameterPoseType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getParameterPoseTypeRule()); }
	iv_ruleParameterPoseType=ruleParameterPoseType
	{ $current=$iv_ruleParameterPoseType.current; }
	EOF;

// Rule ParameterPoseType
ruleParameterPoseType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getParameterPoseTypeAccess().getParameterPoseTypeAction_0(),
					$current);
			}
		)
		otherlv_1='Pose'
		{
			newLeafNode(otherlv_1, grammarAccess.getParameterPoseTypeAccess().getPoseKeyword_1());
		}
	)
;

// Entry rule entryRuleBody
entryRuleBody returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBodyRule()); }
	iv_ruleBody=ruleBody
	{ $current=$iv_ruleBody.current; }
	EOF;

// Rule Body
ruleBody returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getBodyAccess().getBodyAction_0(),
					$current);
			}
		)
		otherlv_1='Body'
		{
			newLeafNode(otherlv_1, grammarAccess.getBodyAccess().getBodyKeyword_1());
		}
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getBodyAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			otherlv_3='link'
			{
				newLeafNode(otherlv_3, grammarAccess.getBodyAccess().getLinkKeyword_3_0());
			}
			otherlv_4='{'
			{
				newLeafNode(otherlv_4, grammarAccess.getBodyAccess().getLeftCurlyBracketKeyword_3_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getBodyAccess().getLinkLinkParserRuleCall_3_2_0());
					}
					lv_link_5_0=ruleLink
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getBodyRule());
						}
						add(
							$current,
							"link",
							lv_link_5_0,
							"de.fraunhofer.ipa.kinematics.Kinematics.Link");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_6=','
				{
					newLeafNode(otherlv_6, grammarAccess.getBodyAccess().getCommaKeyword_3_3_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getBodyAccess().getLinkLinkParserRuleCall_3_3_1_0());
						}
						lv_link_7_0=ruleLink
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getBodyRule());
							}
							add(
								$current,
								"link",
								lv_link_7_0,
								"de.fraunhofer.ipa.kinematics.Kinematics.Link");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_8='}'
			{
				newLeafNode(otherlv_8, grammarAccess.getBodyAccess().getRightCurlyBracketKeyword_3_4());
			}
		)?
		(
			otherlv_9='joint'
			{
				newLeafNode(otherlv_9, grammarAccess.getBodyAccess().getJointKeyword_4_0());
			}
			otherlv_10='{'
			{
				newLeafNode(otherlv_10, grammarAccess.getBodyAccess().getLeftCurlyBracketKeyword_4_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getBodyAccess().getJointJointParserRuleCall_4_2_0());
					}
					lv_joint_11_0=ruleJoint
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getBodyRule());
						}
						add(
							$current,
							"joint",
							lv_joint_11_0,
							"de.fraunhofer.ipa.kinematics.Kinematics.Joint");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_12=','
				{
					newLeafNode(otherlv_12, grammarAccess.getBodyAccess().getCommaKeyword_4_3_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getBodyAccess().getJointJointParserRuleCall_4_3_1_0());
						}
						lv_joint_13_0=ruleJoint
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getBodyRule());
							}
							add(
								$current,
								"joint",
								lv_joint_13_0,
								"de.fraunhofer.ipa.kinematics.Kinematics.Joint");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_14='}'
			{
				newLeafNode(otherlv_14, grammarAccess.getBodyAccess().getRightCurlyBracketKeyword_4_4());
			}
		)?
		otherlv_15='}'
		{
			newLeafNode(otherlv_15, grammarAccess.getBodyAccess().getRightCurlyBracketKeyword_5());
		}
	)
;

// Entry rule entryRuleMacroCall
entryRuleMacroCall returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMacroCallRule()); }
	iv_ruleMacroCall=ruleMacroCall
	{ $current=$iv_ruleMacroCall.current; }
	EOF;

// Rule MacroCall
ruleMacroCall returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getMacroCallAccess().getMacroCallAction_0(),
					$current);
			}
		)
		otherlv_1='MacroCall'
		{
			newLeafNode(otherlv_1, grammarAccess.getMacroCallAccess().getMacroCallKeyword_1());
		}
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getMacroCallAccess().getLeftCurlyBracketKeyword_2());
		}
		otherlv_3='macro'
		{
			newLeafNode(otherlv_3, grammarAccess.getMacroCallAccess().getMacroKeyword_3());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getMacroCallRule());
					}
				}
				otherlv_4=RULE_STRING
				{
					newLeafNode(otherlv_4, grammarAccess.getMacroCallAccess().getMacroMacroCrossReference_4_0());
				}
			)
		)
		(
			otherlv_5='parameter'
			{
				newLeafNode(otherlv_5, grammarAccess.getMacroCallAccess().getParameterKeyword_5_0());
			}
			otherlv_6='{'
			{
				newLeafNode(otherlv_6, grammarAccess.getMacroCallAccess().getLeftCurlyBracketKeyword_5_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getMacroCallAccess().getParameterCallParameterCallParserRuleCall_5_2_0());
					}
					lv_parameterCall_7_0=ruleParameterCall
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getMacroCallRule());
						}
						add(
							$current,
							"parameterCall",
							lv_parameterCall_7_0,
							"de.fraunhofer.ipa.kinematics.Kinematics.ParameterCall");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_8=','
				{
					newLeafNode(otherlv_8, grammarAccess.getMacroCallAccess().getCommaKeyword_5_3_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getMacroCallAccess().getParameterCallParameterCallParserRuleCall_5_3_1_0());
						}
						lv_parameterCall_9_0=ruleParameterCall
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getMacroCallRule());
							}
							add(
								$current,
								"parameterCall",
								lv_parameterCall_9_0,
								"de.fraunhofer.ipa.kinematics.Kinematics.ParameterCall");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_10='}'
			{
				newLeafNode(otherlv_10, grammarAccess.getMacroCallAccess().getRightCurlyBracketKeyword_5_4());
			}
		)?
		otherlv_11='}'
		{
			newLeafNode(otherlv_11, grammarAccess.getMacroCallAccess().getRightCurlyBracketKeyword_6());
		}
	)
;

// Entry rule entryRuleParameterCall
entryRuleParameterCall returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getParameterCallRule()); }
	iv_ruleParameterCall=ruleParameterCall
	{ $current=$iv_ruleParameterCall.current; }
	EOF;

// Rule ParameterCall
ruleParameterCall returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getParameterCallAccess().getParameterCallAction_0(),
					$current);
			}
		)
		otherlv_1='ParameterCall'
		{
			newLeafNode(otherlv_1, grammarAccess.getParameterCallAccess().getParameterCallKeyword_1());
		}
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getParameterCallAccess().getLeftCurlyBracketKeyword_2());
		}
		otherlv_3='parameter'
		{
			newLeafNode(otherlv_3, grammarAccess.getParameterCallAccess().getParameterKeyword_3());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getParameterCallRule());
					}
				}
				otherlv_4=RULE_STRING
				{
					newLeafNode(otherlv_4, grammarAccess.getParameterCallAccess().getParameterParameterCrossReference_4_0());
				}
			)
		)
		otherlv_5='value'
		{
			newLeafNode(otherlv_5, grammarAccess.getParameterCallAccess().getValueKeyword_5());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getParameterCallAccess().getValueParameterValueParserRuleCall_6_0());
				}
				lv_value_6_0=ruleParameterValue
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getParameterCallRule());
					}
					set(
						$current,
						"value",
						lv_value_6_0,
						"de.fraunhofer.ipa.kinematics.Kinematics.ParameterValue");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_7='}'
		{
			newLeafNode(otherlv_7, grammarAccess.getParameterCallAccess().getRightCurlyBracketKeyword_7());
		}
	)
;

// Entry rule entryRuleJoint
entryRuleJoint returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getJointRule()); }
	iv_ruleJoint=ruleJoint
	{ $current=$iv_ruleJoint.current; }
	EOF;

// Rule Joint
ruleJoint returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Joint'
		{
			newLeafNode(otherlv_0, grammarAccess.getJointAccess().getJointKeyword_0());
		}
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getJointAccess().getLeftCurlyBracketKeyword_1());
		}
		otherlv_2='name'
		{
			newLeafNode(otherlv_2, grammarAccess.getJointAccess().getNameKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getJointAccess().getNameParameterStringParserRuleCall_3_0());
				}
				lv_name_3_0=ruleParameterString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getJointRule());
					}
					set(
						$current,
						"name",
						lv_name_3_0,
						"de.fraunhofer.ipa.kinematics.Kinematics.ParameterString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4='type'
		{
			newLeafNode(otherlv_4, grammarAccess.getJointAccess().getTypeKeyword_4());
		}
		(
			(
				lv_type_5_0=RULE_JOINTTYPE
				{
					newLeafNode(lv_type_5_0, grammarAccess.getJointAccess().getTypeJOINTTYPETerminalRuleCall_5_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getJointRule());
					}
					setWithLastConsumed(
						$current,
						"type",
						lv_type_5_0,
						"de.fraunhofer.ipa.kinematics.Kinematics.JOINTTYPE");
				}
			)
		)
		otherlv_6='parent'
		{
			newLeafNode(otherlv_6, grammarAccess.getJointAccess().getParentKeyword_6());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getJointAccess().getParentParameterLinkParserRuleCall_7_0());
				}
				lv_parent_7_0=ruleParameterLink
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getJointRule());
					}
					set(
						$current,
						"parent",
						lv_parent_7_0,
						"de.fraunhofer.ipa.kinematics.Kinematics.ParameterLink");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_8='child'
		{
			newLeafNode(otherlv_8, grammarAccess.getJointAccess().getChildKeyword_8());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getJointAccess().getChildParameterLinkParserRuleCall_9_0());
				}
				lv_child_9_0=ruleParameterLink
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getJointRule());
					}
					set(
						$current,
						"child",
						lv_child_9_0,
						"de.fraunhofer.ipa.kinematics.Kinematics.ParameterLink");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_10='origin'
			{
				newLeafNode(otherlv_10, grammarAccess.getJointAccess().getOriginKeyword_10_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getJointAccess().getOriginParameterPoseParserRuleCall_10_1_0());
					}
					lv_origin_11_0=ruleParameterPose
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getJointRule());
						}
						set(
							$current,
							"origin",
							lv_origin_11_0,
							"de.fraunhofer.ipa.kinematics.Kinematics.ParameterPose");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_12='axis'
			{
				newLeafNode(otherlv_12, grammarAccess.getJointAccess().getAxisKeyword_11_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getJointAccess().getAxisVector3ParserRuleCall_11_1_0());
					}
					lv_axis_13_0=ruleVector3
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getJointRule());
						}
						set(
							$current,
							"axis",
							lv_axis_13_0,
							"de.fraunhofer.ipa.kinematics.Kinematics.Vector3");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_14='limit'
			{
				newLeafNode(otherlv_14, grammarAccess.getJointAccess().getLimitKeyword_12_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getJointAccess().getLimitLimitParserRuleCall_12_1_0());
					}
					lv_limit_15_0=ruleLimit
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getJointRule());
						}
						set(
							$current,
							"limit",
							lv_limit_15_0,
							"de.fraunhofer.ipa.kinematics.Kinematics.Limit");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_16='}'
		{
			newLeafNode(otherlv_16, grammarAccess.getJointAccess().getRightCurlyBracketKeyword_13());
		}
	)
;

// Entry rule entryRuleLink
entryRuleLink returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLinkRule()); }
	iv_ruleLink=ruleLink
	{ $current=$iv_ruleLink.current; }
	EOF;

// Rule Link
ruleLink returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Link'
		{
			newLeafNode(otherlv_0, grammarAccess.getLinkAccess().getLinkKeyword_0());
		}
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getLinkAccess().getLeftCurlyBracketKeyword_1());
		}
		otherlv_2='name'
		{
			newLeafNode(otherlv_2, grammarAccess.getLinkAccess().getNameKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getLinkAccess().getNameParameterStringParserRuleCall_3_0());
				}
				lv_name_3_0=ruleParameterString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLinkRule());
					}
					set(
						$current,
						"name",
						lv_name_3_0,
						"de.fraunhofer.ipa.kinematics.Kinematics.ParameterString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_4='inertial'
			{
				newLeafNode(otherlv_4, grammarAccess.getLinkAccess().getInertialKeyword_4_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getLinkAccess().getInertialInertialParserRuleCall_4_1_0());
					}
					lv_inertial_5_0=ruleInertial
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getLinkRule());
						}
						set(
							$current,
							"inertial",
							lv_inertial_5_0,
							"de.fraunhofer.ipa.kinematics.Kinematics.Inertial");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_6='visual'
			{
				newLeafNode(otherlv_6, grammarAccess.getLinkAccess().getVisualKeyword_5_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getLinkAccess().getVisualVisualParserRuleCall_5_1_0());
					}
					lv_visual_7_0=ruleVisual
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getLinkRule());
						}
						set(
							$current,
							"visual",
							lv_visual_7_0,
							"de.fraunhofer.ipa.kinematics.Kinematics.Visual");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_8='collision'
			{
				newLeafNode(otherlv_8, grammarAccess.getLinkAccess().getCollisionKeyword_6_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getLinkAccess().getCollisionCollisionParserRuleCall_6_1_0());
					}
					lv_collision_9_0=ruleCollision
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getLinkRule());
						}
						set(
							$current,
							"collision",
							lv_collision_9_0,
							"de.fraunhofer.ipa.kinematics.Kinematics.Collision");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_10='}'
		{
			newLeafNode(otherlv_10, grammarAccess.getLinkAccess().getRightCurlyBracketKeyword_7());
		}
	)
;

// Entry rule entryRulePose
entryRulePose returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPoseRule()); }
	iv_rulePose=rulePose
	{ $current=$iv_rulePose.current; }
	EOF;

// Rule Pose
rulePose returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getPoseAccess().getPoseAction_0(),
					$current);
			}
		)
		otherlv_1='Pose'
		{
			newLeafNode(otherlv_1, grammarAccess.getPoseAccess().getPoseKeyword_1());
		}
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getPoseAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			otherlv_3='rpy'
			{
				newLeafNode(otherlv_3, grammarAccess.getPoseAccess().getRpyKeyword_3_0());
			}
			(
				(
					lv_rpy_4_0=RULE_STRING
					{
						newLeafNode(lv_rpy_4_0, grammarAccess.getPoseAccess().getRpySTRINGTerminalRuleCall_3_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getPoseRule());
						}
						setWithLastConsumed(
							$current,
							"rpy",
							lv_rpy_4_0,
							"org.eclipse.xtext.common.Terminals.STRING");
					}
				)
			)
		)?
		(
			otherlv_5='xyz'
			{
				newLeafNode(otherlv_5, grammarAccess.getPoseAccess().getXyzKeyword_4_0());
			}
			(
				(
					lv_xyz_6_0=RULE_STRING
					{
						newLeafNode(lv_xyz_6_0, grammarAccess.getPoseAccess().getXyzSTRINGTerminalRuleCall_4_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getPoseRule());
						}
						setWithLastConsumed(
							$current,
							"xyz",
							lv_xyz_6_0,
							"org.eclipse.xtext.common.Terminals.STRING");
					}
				)
			)
		)?
		otherlv_7='}'
		{
			newLeafNode(otherlv_7, grammarAccess.getPoseAccess().getRightCurlyBracketKeyword_5());
		}
	)
;

// Entry rule entryRuleVector3
entryRuleVector3 returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getVector3Rule()); }
	iv_ruleVector3=ruleVector3
	{ $current=$iv_ruleVector3.current; }
	EOF;

// Rule Vector3
ruleVector3 returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getVector3Access().getVector3Action_0(),
					$current);
			}
		)
		otherlv_1='Vector3'
		{
			newLeafNode(otherlv_1, grammarAccess.getVector3Access().getVector3Keyword_1());
		}
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getVector3Access().getLeftCurlyBracketKeyword_2());
		}
		(
			otherlv_3='xyz'
			{
				newLeafNode(otherlv_3, grammarAccess.getVector3Access().getXyzKeyword_3_0());
			}
			(
				(
					lv_xyz_4_0=RULE_STRING
					{
						newLeafNode(lv_xyz_4_0, grammarAccess.getVector3Access().getXyzSTRINGTerminalRuleCall_3_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getVector3Rule());
						}
						setWithLastConsumed(
							$current,
							"xyz",
							lv_xyz_4_0,
							"org.eclipse.xtext.common.Terminals.STRING");
					}
				)
			)
		)?
		otherlv_5='}'
		{
			newLeafNode(otherlv_5, grammarAccess.getVector3Access().getRightCurlyBracketKeyword_4());
		}
	)
;

// Entry rule entryRuleLimit
entryRuleLimit returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLimitRule()); }
	iv_ruleLimit=ruleLimit
	{ $current=$iv_ruleLimit.current; }
	EOF;

// Rule Limit
ruleLimit returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getLimitAccess().getLimitAction_0(),
					$current);
			}
		)
		otherlv_1='Limit'
		{
			newLeafNode(otherlv_1, grammarAccess.getLimitAccess().getLimitKeyword_1());
		}
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getLimitAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			otherlv_3='effort'
			{
				newLeafNode(otherlv_3, grammarAccess.getLimitAccess().getEffortKeyword_3_0());
			}
			(
				(
					lv_effort_4_0=RULE_STRING
					{
						newLeafNode(lv_effort_4_0, grammarAccess.getLimitAccess().getEffortSTRINGTerminalRuleCall_3_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getLimitRule());
						}
						setWithLastConsumed(
							$current,
							"effort",
							lv_effort_4_0,
							"org.eclipse.xtext.common.Terminals.STRING");
					}
				)
			)
		)?
		(
			otherlv_5='lower'
			{
				newLeafNode(otherlv_5, grammarAccess.getLimitAccess().getLowerKeyword_4_0());
			}
			(
				(
					lv_lower_6_0=RULE_STRING
					{
						newLeafNode(lv_lower_6_0, grammarAccess.getLimitAccess().getLowerSTRINGTerminalRuleCall_4_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getLimitRule());
						}
						setWithLastConsumed(
							$current,
							"lower",
							lv_lower_6_0,
							"org.eclipse.xtext.common.Terminals.STRING");
					}
				)
			)
		)?
		(
			otherlv_7='upper'
			{
				newLeafNode(otherlv_7, grammarAccess.getLimitAccess().getUpperKeyword_5_0());
			}
			(
				(
					lv_upper_8_0=RULE_STRING
					{
						newLeafNode(lv_upper_8_0, grammarAccess.getLimitAccess().getUpperSTRINGTerminalRuleCall_5_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getLimitRule());
						}
						setWithLastConsumed(
							$current,
							"upper",
							lv_upper_8_0,
							"org.eclipse.xtext.common.Terminals.STRING");
					}
				)
			)
		)?
		(
			otherlv_9='velocity'
			{
				newLeafNode(otherlv_9, grammarAccess.getLimitAccess().getVelocityKeyword_6_0());
			}
			(
				(
					lv_velocity_10_0=RULE_STRING
					{
						newLeafNode(lv_velocity_10_0, grammarAccess.getLimitAccess().getVelocitySTRINGTerminalRuleCall_6_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getLimitRule());
						}
						setWithLastConsumed(
							$current,
							"velocity",
							lv_velocity_10_0,
							"org.eclipse.xtext.common.Terminals.STRING");
					}
				)
			)
		)?
		otherlv_11='}'
		{
			newLeafNode(otherlv_11, grammarAccess.getLimitAccess().getRightCurlyBracketKeyword_7());
		}
	)
;

// Entry rule entryRuleInertial
entryRuleInertial returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getInertialRule()); }
	iv_ruleInertial=ruleInertial
	{ $current=$iv_ruleInertial.current; }
	EOF;

// Rule Inertial
ruleInertial returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getInertialAccess().getInertialAction_0(),
					$current);
			}
		)
		otherlv_1='Inertial'
		{
			newLeafNode(otherlv_1, grammarAccess.getInertialAccess().getInertialKeyword_1());
		}
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getInertialAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			otherlv_3='origin'
			{
				newLeafNode(otherlv_3, grammarAccess.getInertialAccess().getOriginKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getInertialAccess().getOriginPoseParserRuleCall_3_1_0());
					}
					lv_origin_4_0=rulePose
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getInertialRule());
						}
						set(
							$current,
							"origin",
							lv_origin_4_0,
							"de.fraunhofer.ipa.kinematics.Kinematics.Pose");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_5='mass'
			{
				newLeafNode(otherlv_5, grammarAccess.getInertialAccess().getMassKeyword_4_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getInertialAccess().getMassMassParserRuleCall_4_1_0());
					}
					lv_mass_6_0=ruleMass
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getInertialRule());
						}
						set(
							$current,
							"mass",
							lv_mass_6_0,
							"de.fraunhofer.ipa.kinematics.Kinematics.Mass");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_7='inertia'
			{
				newLeafNode(otherlv_7, grammarAccess.getInertialAccess().getInertiaKeyword_5_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getInertialAccess().getInertiaInertiaParserRuleCall_5_1_0());
					}
					lv_inertia_8_0=ruleInertia
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getInertialRule());
						}
						set(
							$current,
							"inertia",
							lv_inertia_8_0,
							"de.fraunhofer.ipa.kinematics.Kinematics.Inertia");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_9='}'
		{
			newLeafNode(otherlv_9, grammarAccess.getInertialAccess().getRightCurlyBracketKeyword_6());
		}
	)
;

// Entry rule entryRuleVisual
entryRuleVisual returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getVisualRule()); }
	iv_ruleVisual=ruleVisual
	{ $current=$iv_ruleVisual.current; }
	EOF;

// Rule Visual
ruleVisual returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Visual'
		{
			newLeafNode(otherlv_0, grammarAccess.getVisualAccess().getVisualKeyword_0());
		}
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getVisualAccess().getLeftCurlyBracketKeyword_1());
		}
		(
			otherlv_2='origin'
			{
				newLeafNode(otherlv_2, grammarAccess.getVisualAccess().getOriginKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getVisualAccess().getOriginPoseParserRuleCall_2_1_0());
					}
					lv_origin_3_0=rulePose
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getVisualRule());
						}
						set(
							$current,
							"origin",
							lv_origin_3_0,
							"de.fraunhofer.ipa.kinematics.Kinematics.Pose");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_4='geometry'
		{
			newLeafNode(otherlv_4, grammarAccess.getVisualAccess().getGeometryKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getVisualAccess().getGeometryGeometryParserRuleCall_4_0());
				}
				lv_geometry_5_0=ruleGeometry
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getVisualRule());
					}
					set(
						$current,
						"geometry",
						lv_geometry_5_0,
						"de.fraunhofer.ipa.kinematics.Kinematics.Geometry");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_6='}'
		{
			newLeafNode(otherlv_6, grammarAccess.getVisualAccess().getRightCurlyBracketKeyword_5());
		}
	)
;

// Entry rule entryRuleCollision
entryRuleCollision returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCollisionRule()); }
	iv_ruleCollision=ruleCollision
	{ $current=$iv_ruleCollision.current; }
	EOF;

// Rule Collision
ruleCollision returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Collision'
		{
			newLeafNode(otherlv_0, grammarAccess.getCollisionAccess().getCollisionKeyword_0());
		}
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getCollisionAccess().getLeftCurlyBracketKeyword_1());
		}
		(
			otherlv_2='origin'
			{
				newLeafNode(otherlv_2, grammarAccess.getCollisionAccess().getOriginKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getCollisionAccess().getOriginPoseParserRuleCall_2_1_0());
					}
					lv_origin_3_0=rulePose
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getCollisionRule());
						}
						set(
							$current,
							"origin",
							lv_origin_3_0,
							"de.fraunhofer.ipa.kinematics.Kinematics.Pose");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_4='geometry'
		{
			newLeafNode(otherlv_4, grammarAccess.getCollisionAccess().getGeometryKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getCollisionAccess().getGeometryGeometryParserRuleCall_4_0());
				}
				lv_geometry_5_0=ruleGeometry
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCollisionRule());
					}
					set(
						$current,
						"geometry",
						lv_geometry_5_0,
						"de.fraunhofer.ipa.kinematics.Kinematics.Geometry");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_6='}'
		{
			newLeafNode(otherlv_6, grammarAccess.getCollisionAccess().getRightCurlyBracketKeyword_5());
		}
	)
;

// Entry rule entryRuleMass
entryRuleMass returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMassRule()); }
	iv_ruleMass=ruleMass
	{ $current=$iv_ruleMass.current; }
	EOF;

// Rule Mass
ruleMass returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getMassAccess().getMassAction_0(),
					$current);
			}
		)
		otherlv_1='Mass'
		{
			newLeafNode(otherlv_1, grammarAccess.getMassAccess().getMassKeyword_1());
		}
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getMassAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			otherlv_3='value'
			{
				newLeafNode(otherlv_3, grammarAccess.getMassAccess().getValueKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getMassAccess().getValueDouble0ParserRuleCall_3_1_0());
					}
					lv_value_4_0=ruleDouble0
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getMassRule());
						}
						set(
							$current,
							"value",
							lv_value_4_0,
							"de.fraunhofer.ipa.kinematics.Kinematics.Double0");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_5='}'
		{
			newLeafNode(otherlv_5, grammarAccess.getMassAccess().getRightCurlyBracketKeyword_4());
		}
	)
;

// Entry rule entryRuleInertia
entryRuleInertia returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getInertiaRule()); }
	iv_ruleInertia=ruleInertia
	{ $current=$iv_ruleInertia.current; }
	EOF;

// Rule Inertia
ruleInertia returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getInertiaAccess().getInertiaAction_0(),
					$current);
			}
		)
		otherlv_1='Inertia'
		{
			newLeafNode(otherlv_1, grammarAccess.getInertiaAccess().getInertiaKeyword_1());
		}
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getInertiaAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			otherlv_3='ixx'
			{
				newLeafNode(otherlv_3, grammarAccess.getInertiaAccess().getIxxKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getInertiaAccess().getIxxDouble0ParserRuleCall_3_1_0());
					}
					lv_ixx_4_0=ruleDouble0
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getInertiaRule());
						}
						set(
							$current,
							"ixx",
							lv_ixx_4_0,
							"de.fraunhofer.ipa.kinematics.Kinematics.Double0");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_5='ixy'
			{
				newLeafNode(otherlv_5, grammarAccess.getInertiaAccess().getIxyKeyword_4_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getInertiaAccess().getIxyDouble0ParserRuleCall_4_1_0());
					}
					lv_ixy_6_0=ruleDouble0
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getInertiaRule());
						}
						set(
							$current,
							"ixy",
							lv_ixy_6_0,
							"de.fraunhofer.ipa.kinematics.Kinematics.Double0");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_7='ixz'
			{
				newLeafNode(otherlv_7, grammarAccess.getInertiaAccess().getIxzKeyword_5_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getInertiaAccess().getIxzDouble0ParserRuleCall_5_1_0());
					}
					lv_ixz_8_0=ruleDouble0
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getInertiaRule());
						}
						set(
							$current,
							"ixz",
							lv_ixz_8_0,
							"de.fraunhofer.ipa.kinematics.Kinematics.Double0");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_9='iyy'
			{
				newLeafNode(otherlv_9, grammarAccess.getInertiaAccess().getIyyKeyword_6_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getInertiaAccess().getIyyDouble0ParserRuleCall_6_1_0());
					}
					lv_iyy_10_0=ruleDouble0
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getInertiaRule());
						}
						set(
							$current,
							"iyy",
							lv_iyy_10_0,
							"de.fraunhofer.ipa.kinematics.Kinematics.Double0");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_11='iyz'
			{
				newLeafNode(otherlv_11, grammarAccess.getInertiaAccess().getIyzKeyword_7_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getInertiaAccess().getIyzDouble0ParserRuleCall_7_1_0());
					}
					lv_iyz_12_0=ruleDouble0
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getInertiaRule());
						}
						set(
							$current,
							"iyz",
							lv_iyz_12_0,
							"de.fraunhofer.ipa.kinematics.Kinematics.Double0");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_13='izz'
			{
				newLeafNode(otherlv_13, grammarAccess.getInertiaAccess().getIzzKeyword_8_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getInertiaAccess().getIzzDouble0ParserRuleCall_8_1_0());
					}
					lv_izz_14_0=ruleDouble0
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getInertiaRule());
						}
						set(
							$current,
							"izz",
							lv_izz_14_0,
							"de.fraunhofer.ipa.kinematics.Kinematics.Double0");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_15='}'
		{
			newLeafNode(otherlv_15, grammarAccess.getInertiaAccess().getRightCurlyBracketKeyword_9());
		}
	)
;

// Entry rule entryRuleGeometry
entryRuleGeometry returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getGeometryRule()); }
	iv_ruleGeometry=ruleGeometry
	{ $current=$iv_ruleGeometry.current; }
	EOF;

// Rule Geometry
ruleGeometry returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getGeometryAccess().getGeometryAction_0(),
					$current);
			}
		)
		otherlv_1='Geometry'
		{
			newLeafNode(otherlv_1, grammarAccess.getGeometryAccess().getGeometryKeyword_1());
		}
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getGeometryAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			otherlv_3='box'
			{
				newLeafNode(otherlv_3, grammarAccess.getGeometryAccess().getBoxKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getGeometryAccess().getBoxBoxParserRuleCall_3_1_0());
					}
					lv_box_4_0=ruleBox
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getGeometryRule());
						}
						set(
							$current,
							"box",
							lv_box_4_0,
							"de.fraunhofer.ipa.kinematics.Kinematics.Box");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_5='cylinder'
			{
				newLeafNode(otherlv_5, grammarAccess.getGeometryAccess().getCylinderKeyword_4_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getGeometryAccess().getCylinderCylinderParserRuleCall_4_1_0());
					}
					lv_cylinder_6_0=ruleCylinder
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getGeometryRule());
						}
						set(
							$current,
							"cylinder",
							lv_cylinder_6_0,
							"de.fraunhofer.ipa.kinematics.Kinematics.Cylinder");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_7='sphere'
			{
				newLeafNode(otherlv_7, grammarAccess.getGeometryAccess().getSphereKeyword_5_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getGeometryAccess().getSphereSphereParserRuleCall_5_1_0());
					}
					lv_sphere_8_0=ruleSphere
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getGeometryRule());
						}
						set(
							$current,
							"sphere",
							lv_sphere_8_0,
							"de.fraunhofer.ipa.kinematics.Kinematics.Sphere");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_9='mesh'
			{
				newLeafNode(otherlv_9, grammarAccess.getGeometryAccess().getMeshKeyword_6_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getGeometryAccess().getMeshMeshParserRuleCall_6_1_0());
					}
					lv_mesh_10_0=ruleMesh
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getGeometryRule());
						}
						set(
							$current,
							"mesh",
							lv_mesh_10_0,
							"de.fraunhofer.ipa.kinematics.Kinematics.Mesh");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_11='}'
		{
			newLeafNode(otherlv_11, grammarAccess.getGeometryAccess().getRightCurlyBracketKeyword_7());
		}
	)
;

// Entry rule entryRuleBox
entryRuleBox returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBoxRule()); }
	iv_ruleBox=ruleBox
	{ $current=$iv_ruleBox.current; }
	EOF;

// Rule Box
ruleBox returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getBoxAccess().getBoxAction_0(),
					$current);
			}
		)
		otherlv_1='Box'
		{
			newLeafNode(otherlv_1, grammarAccess.getBoxAccess().getBoxKeyword_1());
		}
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getBoxAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			otherlv_3='size'
			{
				newLeafNode(otherlv_3, grammarAccess.getBoxAccess().getSizeKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getBoxAccess().getSizeParameterStringParserRuleCall_3_1_0());
					}
					lv_size_4_0=ruleParameterString
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getBoxRule());
						}
						set(
							$current,
							"size",
							lv_size_4_0,
							"de.fraunhofer.ipa.kinematics.Kinematics.ParameterString");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_5='}'
		{
			newLeafNode(otherlv_5, grammarAccess.getBoxAccess().getRightCurlyBracketKeyword_4());
		}
	)
;

// Entry rule entryRuleCylinder
entryRuleCylinder returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCylinderRule()); }
	iv_ruleCylinder=ruleCylinder
	{ $current=$iv_ruleCylinder.current; }
	EOF;

// Rule Cylinder
ruleCylinder returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Cylinder'
		{
			newLeafNode(otherlv_0, grammarAccess.getCylinderAccess().getCylinderKeyword_0());
		}
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getCylinderAccess().getLeftCurlyBracketKeyword_1());
		}
		otherlv_2='length'
		{
			newLeafNode(otherlv_2, grammarAccess.getCylinderAccess().getLengthKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getCylinderAccess().getLengthDouble0ParserRuleCall_3_0());
				}
				lv_length_3_0=ruleDouble0
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCylinderRule());
					}
					set(
						$current,
						"length",
						lv_length_3_0,
						"de.fraunhofer.ipa.kinematics.Kinematics.Double0");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4='radius'
		{
			newLeafNode(otherlv_4, grammarAccess.getCylinderAccess().getRadiusKeyword_4());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getCylinderAccess().getRadiusDouble0ParserRuleCall_5_0());
				}
				lv_radius_5_0=ruleDouble0
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCylinderRule());
					}
					set(
						$current,
						"radius",
						lv_radius_5_0,
						"de.fraunhofer.ipa.kinematics.Kinematics.Double0");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_6='}'
		{
			newLeafNode(otherlv_6, grammarAccess.getCylinderAccess().getRightCurlyBracketKeyword_6());
		}
	)
;

// Entry rule entryRuleSphere
entryRuleSphere returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSphereRule()); }
	iv_ruleSphere=ruleSphere
	{ $current=$iv_ruleSphere.current; }
	EOF;

// Rule Sphere
ruleSphere returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Sphere'
		{
			newLeafNode(otherlv_0, grammarAccess.getSphereAccess().getSphereKeyword_0());
		}
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getSphereAccess().getLeftCurlyBracketKeyword_1());
		}
		otherlv_2='radius'
		{
			newLeafNode(otherlv_2, grammarAccess.getSphereAccess().getRadiusKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getSphereAccess().getRadiusDouble0ParserRuleCall_3_0());
				}
				lv_radius_3_0=ruleDouble0
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSphereRule());
					}
					set(
						$current,
						"radius",
						lv_radius_3_0,
						"de.fraunhofer.ipa.kinematics.Kinematics.Double0");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4='}'
		{
			newLeafNode(otherlv_4, grammarAccess.getSphereAccess().getRightCurlyBracketKeyword_4());
		}
	)
;

// Entry rule entryRuleMesh
entryRuleMesh returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMeshRule()); }
	iv_ruleMesh=ruleMesh
	{ $current=$iv_ruleMesh.current; }
	EOF;

// Rule Mesh
ruleMesh returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Mesh'
		{
			newLeafNode(otherlv_0, grammarAccess.getMeshAccess().getMeshKeyword_0());
		}
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getMeshAccess().getLeftCurlyBracketKeyword_1());
		}
		otherlv_2='filename'
		{
			newLeafNode(otherlv_2, grammarAccess.getMeshAccess().getFilenameKeyword_2());
		}
		(
			(
				lv_filename_3_0=RULE_STRING
				{
					newLeafNode(lv_filename_3_0, grammarAccess.getMeshAccess().getFilenameSTRINGTerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getMeshRule());
					}
					setWithLastConsumed(
						$current,
						"filename",
						lv_filename_3_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		(
			otherlv_4='scale'
			{
				newLeafNode(otherlv_4, grammarAccess.getMeshAccess().getScaleKeyword_4_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getMeshAccess().getScaleDouble0ParserRuleCall_4_1_0());
					}
					lv_scale_5_0=ruleDouble0
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getMeshRule());
						}
						set(
							$current,
							"scale",
							lv_scale_5_0,
							"de.fraunhofer.ipa.kinematics.Kinematics.Double0");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_6='}'
		{
			newLeafNode(otherlv_6, grammarAccess.getMeshAccess().getRightCurlyBracketKeyword_5());
		}
	)
;

// Entry rule entryRuleDouble0
entryRuleDouble0 returns [String current=null]:
	{ newCompositeNode(grammarAccess.getDouble0Rule()); }
	iv_ruleDouble0=ruleDouble0
	{ $current=$iv_ruleDouble0.current.getText(); }
	EOF;

// Rule Double0
ruleDouble0 returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	this_DOUBLE_0=RULE_DOUBLE
	{
		$current.merge(this_DOUBLE_0);
	}
	{
		newLeafNode(this_DOUBLE_0, grammarAccess.getDouble0Access().getDOUBLETerminalRuleCall());
	}
;

fragment RULE_DIGIT : '0'..'9';

RULE_BOOLEAN : ('true'|'false');

RULE_DOUBLE : RULE_DECINT ('.' RULE_DIGIT*|('.' RULE_DIGIT*)? ('E'|'e') ('-'|'+')? RULE_DECINT);

RULE_DECINT : ('0'|'1'..'9' RULE_DIGIT*|'-' '0'..'9' RULE_DIGIT*);

RULE_JOINTTYPE : ('revolute'|'continuous'|'prismatic'|'fixed'|'floating'|'planar');

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
