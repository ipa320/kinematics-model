/*
 * generated by Xtext 2.26.0
 */
parser grammar InternalKinematicsParser;

options {
	tokenVocab=InternalKinematicsLexer;
	superClass=AbstractInternalAntlrParser;
}

@header {
package de.fraunhofer.ipa.kinematics.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import de.fraunhofer.ipa.kinematics.services.KinematicsGrammarAccess;

}

@members {

 	private KinematicsGrammarAccess grammarAccess;

    public InternalKinematicsParser(TokenStream input, KinematicsGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "Component";
   	}

   	@Override
   	protected KinematicsGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleComponent
entryRuleComponent returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getComponentRule()); }
	iv_ruleComponent=ruleComponent
	{ $current=$iv_ruleComponent.current; }
	EOF;

// Rule Component
ruleComponent returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getComponentAccess().getComponentAction_0(),
					$current);
			}
		)
		otherlv_1=Component
		{
			newLeafNode(otherlv_1, grammarAccess.getComponentAccess().getComponentKeyword_1());
		}
		this_BEGIN_2=RULE_BEGIN
		{
			newLeafNode(this_BEGIN_2, grammarAccess.getComponentAccess().getBEGINTerminalRuleCall_2());
		}
		otherlv_3=Name
		{
			newLeafNode(otherlv_3, grammarAccess.getComponentAccess().getNameKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getComponentAccess().getNameEStringParserRuleCall_4_0());
				}
				lv_name_4_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getComponentRule());
					}
					set(
						$current,
						"name",
						lv_name_4_0,
						"de.fraunhofer.ipa.kinematics.Kinematics.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_5=Version
		{
			newLeafNode(otherlv_5, grammarAccess.getComponentAccess().getVersionKeyword_5());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getComponentAccess().getVersionEStringParserRuleCall_6_0());
				}
				lv_version_6_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getComponentRule());
					}
					set(
						$current,
						"version",
						lv_version_6_0,
						"de.fraunhofer.ipa.kinematics.Kinematics.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_7=Category
			{
				newLeafNode(otherlv_7, grammarAccess.getComponentAccess().getCategoryKeyword_7_0());
			}
			(
				(
					lv_category_8_0=RULE_CATEGORY
					{
						newLeafNode(lv_category_8_0, grammarAccess.getComponentAccess().getCategoryCATEGORYTerminalRuleCall_7_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getComponentRule());
						}
						setWithLastConsumed(
							$current,
							"category",
							lv_category_8_0,
							"de.fraunhofer.ipa.kinematics.Kinematics.CATEGORY");
					}
				)
			)
		)?
		(
			otherlv_9=GitRepo
			{
				newLeafNode(otherlv_9, grammarAccess.getComponentAccess().getGitRepoKeyword_8_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getComponentAccess().getGitRepoGitRepoParserRuleCall_8_1_0());
					}
					lv_gitRepo_10_0=ruleGitRepo
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getComponentRule());
						}
						set(
							$current,
							"gitRepo",
							lv_gitRepo_10_0,
							"de.fraunhofer.ipa.kinematics.Kinematics.GitRepo");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			(
				otherlv_11=BaseAttachment
				{
					newLeafNode(otherlv_11, grammarAccess.getComponentAccess().getBaseAttachmentKeyword_9_0_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getComponentAccess().getBaseAttachmentBaseAttachmentParserRuleCall_9_0_1_0());
						}
						lv_baseAttachment_12_0=ruleBaseAttachment
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getComponentRule());
							}
							add(
								$current,
								"baseAttachment",
								lv_baseAttachment_12_0,
								"de.fraunhofer.ipa.kinematics.Kinematics.BaseAttachment");
							afterParserOrEnumRuleCall();
						}
					)
				)*
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getComponentAccess().getBaseAttachmentBaseAttachmentParserRuleCall_9_1_0());
					}
					lv_baseAttachment_13_0=ruleBaseAttachment
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getComponentRule());
						}
						add(
							$current,
							"baseAttachment",
							lv_baseAttachment_13_0,
							"de.fraunhofer.ipa.kinematics.Kinematics.BaseAttachment");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			(
				otherlv_14=FlangeAttachment
				{
					newLeafNode(otherlv_14, grammarAccess.getComponentAccess().getFlangeAttachmentKeyword_10_0_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getComponentAccess().getFlangeAttachmentFlangeAttachmentParserRuleCall_10_0_1_0());
						}
						lv_flangeAttachment_15_0=ruleFlangeAttachment
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getComponentRule());
							}
							add(
								$current,
								"flangeAttachment",
								lv_flangeAttachment_15_0,
								"de.fraunhofer.ipa.kinematics.Kinematics.FlangeAttachment");
							afterParserOrEnumRuleCall();
						}
					)
				)*
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getComponentAccess().getFlangeAttachmentFlangeAttachmentParserRuleCall_10_1_0());
					}
					lv_flangeAttachment_16_0=ruleFlangeAttachment
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getComponentRule());
						}
						add(
							$current,
							"flangeAttachment",
							lv_flangeAttachment_16_0,
							"de.fraunhofer.ipa.kinematics.Kinematics.FlangeAttachment");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			(
				otherlv_17=Component
				{
					newLeafNode(otherlv_17, grammarAccess.getComponentAccess().getComponentKeyword_11_0_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getComponentAccess().getComponentConfiguredComponentParserRuleCall_11_0_1_0());
						}
						lv_component_18_0=ruleConfiguredComponent
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getComponentRule());
							}
							add(
								$current,
								"component",
								lv_component_18_0,
								"de.fraunhofer.ipa.kinematics.Kinematics.ConfiguredComponent");
							afterParserOrEnumRuleCall();
						}
					)
				)*
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getComponentAccess().getComponentConfiguredComponentParserRuleCall_11_1_0());
					}
					lv_component_19_0=ruleConfiguredComponent
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getComponentRule());
						}
						add(
							$current,
							"component",
							lv_component_19_0,
							"de.fraunhofer.ipa.kinematics.Kinematics.ConfiguredComponent");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			(
				otherlv_20=Connection
				{
					newLeafNode(otherlv_20, grammarAccess.getComponentAccess().getConnectionKeyword_12_0_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getComponentAccess().getConnectionConnectionParserRuleCall_12_0_1_0());
						}
						lv_connection_21_0=ruleConnection
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getComponentRule());
							}
							add(
								$current,
								"connection",
								lv_connection_21_0,
								"de.fraunhofer.ipa.kinematics.Kinematics.Connection");
							afterParserOrEnumRuleCall();
						}
					)
				)*
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getComponentAccess().getConnectionConnectionParserRuleCall_12_1_0());
					}
					lv_connection_22_0=ruleConnection
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getComponentRule());
						}
						add(
							$current,
							"connection",
							lv_connection_22_0,
							"de.fraunhofer.ipa.kinematics.Kinematics.Connection");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			(
				otherlv_23=Group
				{
					newLeafNode(otherlv_23, grammarAccess.getComponentAccess().getGroupKeyword_13_0_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getComponentAccess().getGroupGroupParserRuleCall_13_0_1_0());
						}
						lv_group_24_0=ruleGroup
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getComponentRule());
							}
							add(
								$current,
								"group",
								lv_group_24_0,
								"de.fraunhofer.ipa.kinematics.Kinematics.Group");
							afterParserOrEnumRuleCall();
						}
					)
				)*
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getComponentAccess().getGroupGroupParserRuleCall_13_1_0());
					}
					lv_group_25_0=ruleGroup
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getComponentRule());
						}
						add(
							$current,
							"group",
							lv_group_25_0,
							"de.fraunhofer.ipa.kinematics.Kinematics.Group");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			(
				otherlv_26=Link
				{
					newLeafNode(otherlv_26, grammarAccess.getComponentAccess().getLinkKeyword_14_0_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getComponentAccess().getLinkLinkParserRuleCall_14_0_1_0());
						}
						lv_link_27_0=ruleLink
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getComponentRule());
							}
							add(
								$current,
								"link",
								lv_link_27_0,
								"de.fraunhofer.ipa.kinematics.Kinematics.Link");
							afterParserOrEnumRuleCall();
						}
					)
				)*
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getComponentAccess().getLinkLinkParserRuleCall_14_1_0());
					}
					lv_link_28_0=ruleLink
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getComponentRule());
						}
						add(
							$current,
							"link",
							lv_link_28_0,
							"de.fraunhofer.ipa.kinematics.Kinematics.Link");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			(
				otherlv_29=Joint
				{
					newLeafNode(otherlv_29, grammarAccess.getComponentAccess().getJointKeyword_15_0_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getComponentAccess().getJointJointParserRuleCall_15_0_1_0());
						}
						lv_joint_30_0=ruleJoint
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getComponentRule());
							}
							add(
								$current,
								"joint",
								lv_joint_30_0,
								"de.fraunhofer.ipa.kinematics.Kinematics.Joint");
							afterParserOrEnumRuleCall();
						}
					)
				)*
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getComponentAccess().getJointJointParserRuleCall_15_1_0());
					}
					lv_joint_31_0=ruleJoint
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getComponentRule());
						}
						add(
							$current,
							"joint",
							lv_joint_31_0,
							"de.fraunhofer.ipa.kinematics.Kinematics.Joint");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		this_END_32=RULE_END
		{
			newLeafNode(this_END_32, grammarAccess.getComponentAccess().getENDTerminalRuleCall_16());
		}
	)
;

// Entry rule entryRuleConfiguredComponent
entryRuleConfiguredComponent returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getConfiguredComponentRule()); }
	iv_ruleConfiguredComponent=ruleConfiguredComponent
	{ $current=$iv_ruleConfiguredComponent.current; }
	EOF;

// Rule ConfiguredComponent
ruleConfiguredComponent returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0=HyphenMinus
		{
			newLeafNode(otherlv_0, grammarAccess.getConfiguredComponentAccess().getHyphenMinusKeyword_0());
		}
		otherlv_1=Name
		{
			newLeafNode(otherlv_1, grammarAccess.getConfiguredComponentAccess().getNameKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getConfiguredComponentAccess().getNameEStringParserRuleCall_2_0());
				}
				lv_name_2_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getConfiguredComponentRule());
					}
					set(
						$current,
						"name",
						lv_name_2_0,
						"de.fraunhofer.ipa.kinematics.Kinematics.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		this_BEGIN_3=RULE_BEGIN
		{
			newLeafNode(this_BEGIN_3, grammarAccess.getConfiguredComponentAccess().getBEGINTerminalRuleCall_3());
		}
		otherlv_4=Type
		{
			newLeafNode(otherlv_4, grammarAccess.getConfiguredComponentAccess().getTypeKeyword_4());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getConfiguredComponentRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getConfiguredComponentAccess().getTypeComponentCrossReference_5_0());
				}
				ruleEString
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_6=Prefix
			{
				newLeafNode(otherlv_6, grammarAccess.getConfiguredComponentAccess().getPrefixKeyword_6_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getConfiguredComponentAccess().getPrefixEStringParserRuleCall_6_1_0());
					}
					lv_prefix_7_0=ruleEString
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getConfiguredComponentRule());
						}
						set(
							$current,
							"prefix",
							lv_prefix_7_0,
							"de.fraunhofer.ipa.kinematics.Kinematics.EString");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		this_END_8=RULE_END
		{
			newLeafNode(this_END_8, grammarAccess.getConfiguredComponentAccess().getENDTerminalRuleCall_7());
		}
	)
;

// Entry rule entryRuleGitRepo
entryRuleGitRepo returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getGitRepoRule()); }
	iv_ruleGitRepo=ruleGitRepo
	{ $current=$iv_ruleGitRepo.current; }
	EOF;

// Rule GitRepo
ruleGitRepo returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_BEGIN_0=RULE_BEGIN
		{
			newLeafNode(this_BEGIN_0, grammarAccess.getGitRepoAccess().getBEGINTerminalRuleCall_0());
		}
		otherlv_1=Distro
		{
			newLeafNode(otherlv_1, grammarAccess.getGitRepoAccess().getDistroKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getGitRepoAccess().getDistroEStringParserRuleCall_2_0());
				}
				lv_distro_2_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getGitRepoRule());
					}
					set(
						$current,
						"distro",
						lv_distro_2_0,
						"de.fraunhofer.ipa.kinematics.Kinematics.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3=Repo
		{
			newLeafNode(otherlv_3, grammarAccess.getGitRepoAccess().getRepoKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getGitRepoAccess().getRepoEStringParserRuleCall_4_0());
				}
				lv_repo_4_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getGitRepoRule());
					}
					set(
						$current,
						"repo",
						lv_repo_4_0,
						"de.fraunhofer.ipa.kinematics.Kinematics.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_5=Branch
		{
			newLeafNode(otherlv_5, grammarAccess.getGitRepoAccess().getBranchKeyword_5());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getGitRepoAccess().getBranchEStringParserRuleCall_6_0());
				}
				lv_branch_6_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getGitRepoRule());
					}
					set(
						$current,
						"branch",
						lv_branch_6_0,
						"de.fraunhofer.ipa.kinematics.Kinematics.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_7=Package
		{
			newLeafNode(otherlv_7, grammarAccess.getGitRepoAccess().getPackageKeyword_7());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getGitRepoAccess().getPackageEStringParserRuleCall_8_0());
				}
				lv_package_8_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getGitRepoRule());
					}
					set(
						$current,
						"package",
						lv_package_8_0,
						"de.fraunhofer.ipa.kinematics.Kinematics.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_9=Version
		{
			newLeafNode(otherlv_9, grammarAccess.getGitRepoAccess().getVersionKeyword_9());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getGitRepoAccess().getVersionEStringParserRuleCall_10_0());
				}
				lv_version_10_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getGitRepoRule());
					}
					set(
						$current,
						"version",
						lv_version_10_0,
						"de.fraunhofer.ipa.kinematics.Kinematics.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		this_END_11=RULE_END
		{
			newLeafNode(this_END_11, grammarAccess.getGitRepoAccess().getENDTerminalRuleCall_11());
		}
	)
;

// Entry rule entryRuleGroup
entryRuleGroup returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getGroupRule()); }
	iv_ruleGroup=ruleGroup
	{ $current=$iv_ruleGroup.current; }
	EOF;

// Rule Group
ruleGroup returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0=HyphenMinus
		{
			newLeafNode(otherlv_0, grammarAccess.getGroupAccess().getHyphenMinusKeyword_0());
		}
		otherlv_1=Name
		{
			newLeafNode(otherlv_1, grammarAccess.getGroupAccess().getNameKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getGroupAccess().getNameEStringParserRuleCall_2_0());
				}
				lv_name_2_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getGroupRule());
					}
					set(
						$current,
						"name",
						lv_name_2_0,
						"de.fraunhofer.ipa.kinematics.Kinematics.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		this_BEGIN_3=RULE_BEGIN
		{
			newLeafNode(this_BEGIN_3, grammarAccess.getGroupAccess().getBEGINTerminalRuleCall_3());
		}
		otherlv_4=BaseLink
		{
			newLeafNode(otherlv_4, grammarAccess.getGroupAccess().getBaseLinkKeyword_4());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getGroupRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getGroupAccess().getBaseLinkLinkCrossReference_5_0());
				}
				ruleEString
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_6=EndLink
		{
			newLeafNode(otherlv_6, grammarAccess.getGroupAccess().getEndLinkKeyword_6());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getGroupRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getGroupAccess().getEndLinkLinkCrossReference_7_0());
				}
				ruleEString
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_8=Ros2_control
			{
				newLeafNode(otherlv_8, grammarAccess.getGroupAccess().getRos2_controlKeyword_8_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getGroupAccess().getRos2_controlEStringParserRuleCall_8_1_0());
					}
					lv_ros2_control_9_0=ruleEString
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getGroupRule());
						}
						set(
							$current,
							"ros2_control",
							lv_ros2_control_9_0,
							"de.fraunhofer.ipa.kinematics.Kinematics.EString");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		this_END_10=RULE_END
		{
			newLeafNode(this_END_10, grammarAccess.getGroupAccess().getENDTerminalRuleCall_9());
		}
	)
;

// Entry rule entryRuleBaseAttachment
entryRuleBaseAttachment returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBaseAttachmentRule()); }
	iv_ruleBaseAttachment=ruleBaseAttachment
	{ $current=$iv_ruleBaseAttachment.current; }
	EOF;

// Rule BaseAttachment
ruleBaseAttachment returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0=HyphenMinus
		{
			newLeafNode(otherlv_0, grammarAccess.getBaseAttachmentAccess().getHyphenMinusKeyword_0());
		}
		otherlv_1=Name
		{
			newLeafNode(otherlv_1, grammarAccess.getBaseAttachmentAccess().getNameKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getBaseAttachmentAccess().getNameEStringParserRuleCall_2_0());
				}
				lv_name_2_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getBaseAttachmentRule());
					}
					set(
						$current,
						"name",
						lv_name_2_0,
						"de.fraunhofer.ipa.kinematics.Kinematics.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		this_BEGIN_3=RULE_BEGIN
		{
			newLeafNode(this_BEGIN_3, grammarAccess.getBaseAttachmentAccess().getBEGINTerminalRuleCall_3());
		}
		otherlv_4=Origin
		{
			newLeafNode(otherlv_4, grammarAccess.getBaseAttachmentAccess().getOriginKeyword_4());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getBaseAttachmentAccess().getOriginPoseParserRuleCall_5_0());
				}
				lv_origin_5_0=rulePose
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getBaseAttachmentRule());
					}
					set(
						$current,
						"origin",
						lv_origin_5_0,
						"de.fraunhofer.ipa.kinematics.Kinematics.Pose");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_6=Parent
		{
			newLeafNode(otherlv_6, grammarAccess.getBaseAttachmentAccess().getParentKeyword_6());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getBaseAttachmentRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getBaseAttachmentAccess().getParentLinkCrossReference_7_0());
				}
				ruleEString
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		this_END_8=RULE_END
		{
			newLeafNode(this_END_8, grammarAccess.getBaseAttachmentAccess().getENDTerminalRuleCall_8());
		}
	)
;

// Entry rule entryRuleFlangeAttachment
entryRuleFlangeAttachment returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFlangeAttachmentRule()); }
	iv_ruleFlangeAttachment=ruleFlangeAttachment
	{ $current=$iv_ruleFlangeAttachment.current; }
	EOF;

// Rule FlangeAttachment
ruleFlangeAttachment returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0=HyphenMinus
		{
			newLeafNode(otherlv_0, grammarAccess.getFlangeAttachmentAccess().getHyphenMinusKeyword_0());
		}
		otherlv_1=Name
		{
			newLeafNode(otherlv_1, grammarAccess.getFlangeAttachmentAccess().getNameKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getFlangeAttachmentAccess().getNameEStringParserRuleCall_2_0());
				}
				lv_name_2_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFlangeAttachmentRule());
					}
					set(
						$current,
						"name",
						lv_name_2_0,
						"de.fraunhofer.ipa.kinematics.Kinematics.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		this_BEGIN_3=RULE_BEGIN
		{
			newLeafNode(this_BEGIN_3, grammarAccess.getFlangeAttachmentAccess().getBEGINTerminalRuleCall_3());
		}
		otherlv_4=Origin
		{
			newLeafNode(otherlv_4, grammarAccess.getFlangeAttachmentAccess().getOriginKeyword_4());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getFlangeAttachmentAccess().getOriginPoseParserRuleCall_5_0());
				}
				lv_origin_5_0=rulePose
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFlangeAttachmentRule());
					}
					set(
						$current,
						"origin",
						lv_origin_5_0,
						"de.fraunhofer.ipa.kinematics.Kinematics.Pose");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_6=Parent
		{
			newLeafNode(otherlv_6, grammarAccess.getFlangeAttachmentAccess().getParentKeyword_6());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getFlangeAttachmentRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getFlangeAttachmentAccess().getParentLinkCrossReference_7_0());
				}
				ruleEString
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		this_END_8=RULE_END
		{
			newLeafNode(this_END_8, grammarAccess.getFlangeAttachmentAccess().getENDTerminalRuleCall_8());
		}
	)
;

// Entry rule entryRuleConnection
entryRuleConnection returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getConnectionRule()); }
	iv_ruleConnection=ruleConnection
	{ $current=$iv_ruleConnection.current; }
	EOF;

// Rule Connection
ruleConnection returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0=HyphenMinus
		{
			newLeafNode(otherlv_0, grammarAccess.getConnectionAccess().getHyphenMinusKeyword_0());
		}
		otherlv_1=Name
		{
			newLeafNode(otherlv_1, grammarAccess.getConnectionAccess().getNameKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getConnectionAccess().getNameEStringParserRuleCall_2_0());
				}
				lv_name_2_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getConnectionRule());
					}
					set(
						$current,
						"name",
						lv_name_2_0,
						"de.fraunhofer.ipa.kinematics.Kinematics.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		this_BEGIN_3=RULE_BEGIN
		{
			newLeafNode(this_BEGIN_3, grammarAccess.getConnectionAccess().getBEGINTerminalRuleCall_3());
		}
		otherlv_4=BaseAttachment
		{
			newLeafNode(otherlv_4, grammarAccess.getConnectionAccess().getBaseAttachmentKeyword_4());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getConnectionRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getConnectionAccess().getBaseAttachmentBaseAttachmentCrossReference_5_0());
				}
				ruleEString
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_6=FlangeAttachment
		{
			newLeafNode(otherlv_6, grammarAccess.getConnectionAccess().getFlangeAttachmentKeyword_6());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getConnectionRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getConnectionAccess().getFlangeAttachmentFlangeAttachmentCrossReference_7_0());
				}
				ruleEString
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		this_END_8=RULE_END
		{
			newLeafNode(this_END_8, grammarAccess.getConnectionAccess().getENDTerminalRuleCall_8());
		}
	)
;

// Entry rule entryRuleJoint
entryRuleJoint returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getJointRule()); }
	iv_ruleJoint=ruleJoint
	{ $current=$iv_ruleJoint.current; }
	EOF;

// Rule Joint
ruleJoint returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0=HyphenMinus
		{
			newLeafNode(otherlv_0, grammarAccess.getJointAccess().getHyphenMinusKeyword_0());
		}
		otherlv_1=Name
		{
			newLeafNode(otherlv_1, grammarAccess.getJointAccess().getNameKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getJointAccess().getNameEStringParserRuleCall_2_0());
				}
				lv_name_2_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getJointRule());
					}
					set(
						$current,
						"name",
						lv_name_2_0,
						"de.fraunhofer.ipa.kinematics.Kinematics.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		this_BEGIN_3=RULE_BEGIN
		{
			newLeafNode(this_BEGIN_3, grammarAccess.getJointAccess().getBEGINTerminalRuleCall_3());
		}
		(
			otherlv_4=Type
			{
				newLeafNode(otherlv_4, grammarAccess.getJointAccess().getTypeKeyword_4_0());
			}
			(
				(
					lv_type_5_0=RULE_JOINTTYPE
					{
						newLeafNode(lv_type_5_0, grammarAccess.getJointAccess().getTypeJOINTTYPETerminalRuleCall_4_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getJointRule());
						}
						setWithLastConsumed(
							$current,
							"type",
							lv_type_5_0,
							"de.fraunhofer.ipa.kinematics.Kinematics.JOINTTYPE");
					}
				)
			)
		)
		(
			otherlv_6=Parent
			{
				newLeafNode(otherlv_6, grammarAccess.getJointAccess().getParentKeyword_5_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getJointAccess().getParentParentParserRuleCall_5_1_0());
					}
					lv_parent_7_0=ruleParent
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getJointRule());
						}
						set(
							$current,
							"parent",
							lv_parent_7_0,
							"de.fraunhofer.ipa.kinematics.Kinematics.Parent");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		(
			otherlv_8=Child
			{
				newLeafNode(otherlv_8, grammarAccess.getJointAccess().getChildKeyword_6_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getJointAccess().getChildChildParserRuleCall_6_1_0());
					}
					lv_child_9_0=ruleChild
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getJointRule());
						}
						set(
							$current,
							"child",
							lv_child_9_0,
							"de.fraunhofer.ipa.kinematics.Kinematics.Child");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		(
			otherlv_10=Origin
			{
				newLeafNode(otherlv_10, grammarAccess.getJointAccess().getOriginKeyword_7_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getJointAccess().getOriginPoseParserRuleCall_7_1_0());
					}
					lv_origin_11_0=rulePose
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getJointRule());
						}
						set(
							$current,
							"origin",
							lv_origin_11_0,
							"de.fraunhofer.ipa.kinematics.Kinematics.Pose");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		(
			otherlv_12=Axis
			{
				newLeafNode(otherlv_12, grammarAccess.getJointAccess().getAxisKeyword_8_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getJointAccess().getAxisAxisParserRuleCall_8_1_0());
					}
					lv_axis_13_0=ruleAxis
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getJointRule());
						}
						set(
							$current,
							"axis",
							lv_axis_13_0,
							"de.fraunhofer.ipa.kinematics.Kinematics.Axis");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_14=Limit
			{
				newLeafNode(otherlv_14, grammarAccess.getJointAccess().getLimitKeyword_9_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getJointAccess().getLimitLimitParserRuleCall_9_1_0());
					}
					lv_limit_15_0=ruleLimit
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getJointRule());
						}
						set(
							$current,
							"limit",
							lv_limit_15_0,
							"de.fraunhofer.ipa.kinematics.Kinematics.Limit");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		this_END_16=RULE_END
		{
			newLeafNode(this_END_16, grammarAccess.getJointAccess().getENDTerminalRuleCall_10());
		}
	)
;

// Entry rule entryRuleParent
entryRuleParent returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getParentRule()); }
	iv_ruleParent=ruleParent
	{ $current=$iv_ruleParent.current; }
	EOF;

// Rule Parent
ruleParent returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_BEGIN_0=RULE_BEGIN
		{
			newLeafNode(this_BEGIN_0, grammarAccess.getParentAccess().getBEGINTerminalRuleCall_0());
		}
		otherlv_1=Link
		{
			newLeafNode(otherlv_1, grammarAccess.getParentAccess().getLinkKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getParentAccess().getLinkEStringParserRuleCall_2_0());
				}
				lv_link_2_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getParentRule());
					}
					set(
						$current,
						"link",
						lv_link_2_0,
						"de.fraunhofer.ipa.kinematics.Kinematics.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		this_END_3=RULE_END
		{
			newLeafNode(this_END_3, grammarAccess.getParentAccess().getENDTerminalRuleCall_3());
		}
	)
;

// Entry rule entryRuleChild
entryRuleChild returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getChildRule()); }
	iv_ruleChild=ruleChild
	{ $current=$iv_ruleChild.current; }
	EOF;

// Rule Child
ruleChild returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_BEGIN_0=RULE_BEGIN
		{
			newLeafNode(this_BEGIN_0, grammarAccess.getChildAccess().getBEGINTerminalRuleCall_0());
		}
		otherlv_1=Link
		{
			newLeafNode(otherlv_1, grammarAccess.getChildAccess().getLinkKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getChildAccess().getLinkEStringParserRuleCall_2_0());
				}
				lv_link_2_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getChildRule());
					}
					set(
						$current,
						"link",
						lv_link_2_0,
						"de.fraunhofer.ipa.kinematics.Kinematics.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		this_END_3=RULE_END
		{
			newLeafNode(this_END_3, grammarAccess.getChildAccess().getENDTerminalRuleCall_3());
		}
	)
;

// Entry rule entryRuleLink
entryRuleLink returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLinkRule()); }
	iv_ruleLink=ruleLink
	{ $current=$iv_ruleLink.current; }
	EOF;

// Rule Link
ruleLink returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0=HyphenMinus
		{
			newLeafNode(otherlv_0, grammarAccess.getLinkAccess().getHyphenMinusKeyword_0());
		}
		otherlv_1=Name
		{
			newLeafNode(otherlv_1, grammarAccess.getLinkAccess().getNameKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getLinkAccess().getNameEStringParserRuleCall_2_0());
				}
				lv_name_2_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLinkRule());
					}
					set(
						$current,
						"name",
						lv_name_2_0,
						"de.fraunhofer.ipa.kinematics.Kinematics.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			this_BEGIN_3=RULE_BEGIN
			{
				newLeafNode(this_BEGIN_3, grammarAccess.getLinkAccess().getBEGINTerminalRuleCall_3_0());
			}
			(
				otherlv_4=Inertial
				{
					newLeafNode(otherlv_4, grammarAccess.getLinkAccess().getInertialKeyword_3_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getLinkAccess().getInertialInertialParserRuleCall_3_1_1_0());
						}
						lv_inertial_5_0=ruleInertial
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getLinkRule());
							}
							set(
								$current,
								"inertial",
								lv_inertial_5_0,
								"de.fraunhofer.ipa.kinematics.Kinematics.Inertial");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)?
			(
				otherlv_6=Visual
				{
					newLeafNode(otherlv_6, grammarAccess.getLinkAccess().getVisualKeyword_3_2_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getLinkAccess().getVisualVisualParserRuleCall_3_2_1_0());
						}
						lv_visual_7_0=ruleVisual
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getLinkRule());
							}
							set(
								$current,
								"visual",
								lv_visual_7_0,
								"de.fraunhofer.ipa.kinematics.Kinematics.Visual");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)?
			(
				otherlv_8=Collision
				{
					newLeafNode(otherlv_8, grammarAccess.getLinkAccess().getCollisionKeyword_3_3_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getLinkAccess().getCollisionCollisionParserRuleCall_3_3_1_0());
						}
						lv_collision_9_0=ruleCollision
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getLinkRule());
							}
							set(
								$current,
								"collision",
								lv_collision_9_0,
								"de.fraunhofer.ipa.kinematics.Kinematics.Collision");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)?
			this_END_10=RULE_END
			{
				newLeafNode(this_END_10, grammarAccess.getLinkAccess().getENDTerminalRuleCall_3_4());
			}
		)?
	)
;

// Entry rule entryRulePose
entryRulePose returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPoseRule()); }
	iv_rulePose=rulePose
	{ $current=$iv_rulePose.current; }
	EOF;

// Rule Pose
rulePose returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getPoseAccess().getPoseAction_0(),
					$current);
			}
		)
		this_BEGIN_1=RULE_BEGIN
		{
			newLeafNode(this_BEGIN_1, grammarAccess.getPoseAccess().getBEGINTerminalRuleCall_1());
		}
		(
			otherlv_2=Rpy
			{
				newLeafNode(otherlv_2, grammarAccess.getPoseAccess().getRpyKeyword_2_0());
			}
			otherlv_3=LeftSquareBracket
			{
				newLeafNode(otherlv_3, grammarAccess.getPoseAccess().getLeftSquareBracketKeyword_2_1());
			}
			(
				(
					lv_rpy_4_0=RULE_DOUBLE
					{
						newLeafNode(lv_rpy_4_0, grammarAccess.getPoseAccess().getRpyDOUBLETerminalRuleCall_2_2_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getPoseRule());
						}
						addWithLastConsumed(
							$current,
							"rpy",
							lv_rpy_4_0,
							"de.fraunhofer.ipa.kinematics.Kinematics.DOUBLE");
					}
				)
			)
			(
				otherlv_5=Comma
				{
					newLeafNode(otherlv_5, grammarAccess.getPoseAccess().getCommaKeyword_2_3_0());
				}
				(
					(
						lv_rpy_6_0=RULE_DOUBLE
						{
							newLeafNode(lv_rpy_6_0, grammarAccess.getPoseAccess().getRpyDOUBLETerminalRuleCall_2_3_1_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getPoseRule());
							}
							addWithLastConsumed(
								$current,
								"rpy",
								lv_rpy_6_0,
								"de.fraunhofer.ipa.kinematics.Kinematics.DOUBLE");
						}
					)
				)
			)*
			otherlv_7=RightSquareBracket
			{
				newLeafNode(otherlv_7, grammarAccess.getPoseAccess().getRightSquareBracketKeyword_2_4());
			}
		)?
		(
			otherlv_8=Xyz
			{
				newLeafNode(otherlv_8, grammarAccess.getPoseAccess().getXyzKeyword_3_0());
			}
			otherlv_9=LeftSquareBracket
			{
				newLeafNode(otherlv_9, grammarAccess.getPoseAccess().getLeftSquareBracketKeyword_3_1());
			}
			(
				(
					lv_xyz_10_0=RULE_DOUBLE
					{
						newLeafNode(lv_xyz_10_0, grammarAccess.getPoseAccess().getXyzDOUBLETerminalRuleCall_3_2_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getPoseRule());
						}
						addWithLastConsumed(
							$current,
							"xyz",
							lv_xyz_10_0,
							"de.fraunhofer.ipa.kinematics.Kinematics.DOUBLE");
					}
				)
			)
			(
				otherlv_11=Comma
				{
					newLeafNode(otherlv_11, grammarAccess.getPoseAccess().getCommaKeyword_3_3_0());
				}
				(
					(
						lv_xyz_12_0=RULE_DOUBLE
						{
							newLeafNode(lv_xyz_12_0, grammarAccess.getPoseAccess().getXyzDOUBLETerminalRuleCall_3_3_1_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getPoseRule());
							}
							addWithLastConsumed(
								$current,
								"xyz",
								lv_xyz_12_0,
								"de.fraunhofer.ipa.kinematics.Kinematics.DOUBLE");
						}
					)
				)
			)*
			otherlv_13=RightSquareBracket
			{
				newLeafNode(otherlv_13, grammarAccess.getPoseAccess().getRightSquareBracketKeyword_3_4());
			}
		)?
		this_END_14=RULE_END
		{
			newLeafNode(this_END_14, grammarAccess.getPoseAccess().getENDTerminalRuleCall_4());
		}
	)
;

// Entry rule entryRuleAxis
entryRuleAxis returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAxisRule()); }
	iv_ruleAxis=ruleAxis
	{ $current=$iv_ruleAxis.current; }
	EOF;

// Rule Axis
ruleAxis returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getAxisAccess().getAxisAction_0(),
					$current);
			}
		)
		this_BEGIN_1=RULE_BEGIN
		{
			newLeafNode(this_BEGIN_1, grammarAccess.getAxisAccess().getBEGINTerminalRuleCall_1());
		}
		(
			otherlv_2=Xyz
			{
				newLeafNode(otherlv_2, grammarAccess.getAxisAccess().getXyzKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getAxisAccess().getXyzEStringParserRuleCall_2_1_0());
					}
					lv_xyz_3_0=ruleEString
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAxisRule());
						}
						set(
							$current,
							"xyz",
							lv_xyz_3_0,
							"de.fraunhofer.ipa.kinematics.Kinematics.EString");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		this_END_4=RULE_END
		{
			newLeafNode(this_END_4, grammarAccess.getAxisAccess().getENDTerminalRuleCall_3());
		}
	)
;

// Entry rule entryRuleLimit
entryRuleLimit returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLimitRule()); }
	iv_ruleLimit=ruleLimit
	{ $current=$iv_ruleLimit.current; }
	EOF;

// Rule Limit
ruleLimit returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getLimitAccess().getLimitAction_0(),
					$current);
			}
		)
		this_BEGIN_1=RULE_BEGIN
		{
			newLeafNode(this_BEGIN_1, grammarAccess.getLimitAccess().getBEGINTerminalRuleCall_1());
		}
		(
			otherlv_2=Effort
			{
				newLeafNode(otherlv_2, grammarAccess.getLimitAccess().getEffortKeyword_2_0());
			}
			(
				(
					lv_effort_3_0=RULE_DOUBLE
					{
						newLeafNode(lv_effort_3_0, grammarAccess.getLimitAccess().getEffortDOUBLETerminalRuleCall_2_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getLimitRule());
						}
						setWithLastConsumed(
							$current,
							"effort",
							lv_effort_3_0,
							"de.fraunhofer.ipa.kinematics.Kinematics.DOUBLE");
					}
				)
			)
		)?
		(
			otherlv_4=Lower
			{
				newLeafNode(otherlv_4, grammarAccess.getLimitAccess().getLowerKeyword_3_0());
			}
			(
				(
					lv_lower_5_0=RULE_DOUBLE
					{
						newLeafNode(lv_lower_5_0, grammarAccess.getLimitAccess().getLowerDOUBLETerminalRuleCall_3_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getLimitRule());
						}
						setWithLastConsumed(
							$current,
							"lower",
							lv_lower_5_0,
							"de.fraunhofer.ipa.kinematics.Kinematics.DOUBLE");
					}
				)
			)
		)?
		(
			otherlv_6=Upper
			{
				newLeafNode(otherlv_6, grammarAccess.getLimitAccess().getUpperKeyword_4_0());
			}
			(
				(
					lv_upper_7_0=RULE_DOUBLE
					{
						newLeafNode(lv_upper_7_0, grammarAccess.getLimitAccess().getUpperDOUBLETerminalRuleCall_4_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getLimitRule());
						}
						setWithLastConsumed(
							$current,
							"upper",
							lv_upper_7_0,
							"de.fraunhofer.ipa.kinematics.Kinematics.DOUBLE");
					}
				)
			)
		)?
		(
			otherlv_8=Velocity
			{
				newLeafNode(otherlv_8, grammarAccess.getLimitAccess().getVelocityKeyword_5_0());
			}
			(
				(
					lv_velocity_9_0=RULE_DOUBLE
					{
						newLeafNode(lv_velocity_9_0, grammarAccess.getLimitAccess().getVelocityDOUBLETerminalRuleCall_5_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getLimitRule());
						}
						setWithLastConsumed(
							$current,
							"velocity",
							lv_velocity_9_0,
							"de.fraunhofer.ipa.kinematics.Kinematics.DOUBLE");
					}
				)
			)
		)?
		this_END_10=RULE_END
		{
			newLeafNode(this_END_10, grammarAccess.getLimitAccess().getENDTerminalRuleCall_6());
		}
	)
;

// Entry rule entryRuleInertial
entryRuleInertial returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getInertialRule()); }
	iv_ruleInertial=ruleInertial
	{ $current=$iv_ruleInertial.current; }
	EOF;

// Rule Inertial
ruleInertial returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getInertialAccess().getInertialAction_0(),
					$current);
			}
		)
		this_BEGIN_1=RULE_BEGIN
		{
			newLeafNode(this_BEGIN_1, grammarAccess.getInertialAccess().getBEGINTerminalRuleCall_1());
		}
		(
			otherlv_2=Origin
			{
				newLeafNode(otherlv_2, grammarAccess.getInertialAccess().getOriginKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getInertialAccess().getOriginPoseParserRuleCall_2_1_0());
					}
					lv_origin_3_0=rulePose
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getInertialRule());
						}
						set(
							$current,
							"origin",
							lv_origin_3_0,
							"de.fraunhofer.ipa.kinematics.Kinematics.Pose");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_4=Mass
			{
				newLeafNode(otherlv_4, grammarAccess.getInertialAccess().getMassKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getInertialAccess().getMassMassParserRuleCall_3_1_0());
					}
					lv_mass_5_0=ruleMass
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getInertialRule());
						}
						set(
							$current,
							"mass",
							lv_mass_5_0,
							"de.fraunhofer.ipa.kinematics.Kinematics.Mass");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_6=Inertia
			{
				newLeafNode(otherlv_6, grammarAccess.getInertialAccess().getInertiaKeyword_4_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getInertialAccess().getInertiaInertiaParserRuleCall_4_1_0());
					}
					lv_inertia_7_0=ruleInertia
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getInertialRule());
						}
						set(
							$current,
							"inertia",
							lv_inertia_7_0,
							"de.fraunhofer.ipa.kinematics.Kinematics.Inertia");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		this_END_8=RULE_END
		{
			newLeafNode(this_END_8, grammarAccess.getInertialAccess().getENDTerminalRuleCall_5());
		}
	)
;

// Entry rule entryRuleVisual
entryRuleVisual returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getVisualRule()); }
	iv_ruleVisual=ruleVisual
	{ $current=$iv_ruleVisual.current; }
	EOF;

// Rule Visual
ruleVisual returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_BEGIN_0=RULE_BEGIN
		{
			newLeafNode(this_BEGIN_0, grammarAccess.getVisualAccess().getBEGINTerminalRuleCall_0());
		}
		(
			otherlv_1=Origin
			{
				newLeafNode(otherlv_1, grammarAccess.getVisualAccess().getOriginKeyword_1_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getVisualAccess().getOriginPoseParserRuleCall_1_1_0());
					}
					lv_origin_2_0=rulePose
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getVisualRule());
						}
						set(
							$current,
							"origin",
							lv_origin_2_0,
							"de.fraunhofer.ipa.kinematics.Kinematics.Pose");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_3=Geometry
		{
			newLeafNode(otherlv_3, grammarAccess.getVisualAccess().getGeometryKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getVisualAccess().getGeometryGeometryParserRuleCall_3_0());
				}
				lv_geometry_4_0=ruleGeometry
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getVisualRule());
					}
					set(
						$current,
						"geometry",
						lv_geometry_4_0,
						"de.fraunhofer.ipa.kinematics.Kinematics.Geometry");
					afterParserOrEnumRuleCall();
				}
			)
		)
		this_END_5=RULE_END
		{
			newLeafNode(this_END_5, grammarAccess.getVisualAccess().getENDTerminalRuleCall_4());
		}
	)
;

// Entry rule entryRuleCollision
entryRuleCollision returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCollisionRule()); }
	iv_ruleCollision=ruleCollision
	{ $current=$iv_ruleCollision.current; }
	EOF;

// Rule Collision
ruleCollision returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_BEGIN_0=RULE_BEGIN
		{
			newLeafNode(this_BEGIN_0, grammarAccess.getCollisionAccess().getBEGINTerminalRuleCall_0());
		}
		(
			otherlv_1=Origin
			{
				newLeafNode(otherlv_1, grammarAccess.getCollisionAccess().getOriginKeyword_1_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getCollisionAccess().getOriginPoseParserRuleCall_1_1_0());
					}
					lv_origin_2_0=rulePose
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getCollisionRule());
						}
						set(
							$current,
							"origin",
							lv_origin_2_0,
							"de.fraunhofer.ipa.kinematics.Kinematics.Pose");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_3=Geometry
		{
			newLeafNode(otherlv_3, grammarAccess.getCollisionAccess().getGeometryKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getCollisionAccess().getGeometryGeometryParserRuleCall_3_0());
				}
				lv_geometry_4_0=ruleGeometry
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCollisionRule());
					}
					set(
						$current,
						"geometry",
						lv_geometry_4_0,
						"de.fraunhofer.ipa.kinematics.Kinematics.Geometry");
					afterParserOrEnumRuleCall();
				}
			)
		)
		this_END_5=RULE_END
		{
			newLeafNode(this_END_5, grammarAccess.getCollisionAccess().getENDTerminalRuleCall_4());
		}
	)
;

// Entry rule entryRuleMass
entryRuleMass returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMassRule()); }
	iv_ruleMass=ruleMass
	{ $current=$iv_ruleMass.current; }
	EOF;

// Rule Mass
ruleMass returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getMassAccess().getMassAction_0(),
					$current);
			}
		)
		this_BEGIN_1=RULE_BEGIN
		{
			newLeafNode(this_BEGIN_1, grammarAccess.getMassAccess().getBEGINTerminalRuleCall_1());
		}
		otherlv_2=Value
		{
			newLeafNode(otherlv_2, grammarAccess.getMassAccess().getValueKeyword_2());
		}
		(
			(
				lv_value_3_0=RULE_DOUBLE
				{
					newLeafNode(lv_value_3_0, grammarAccess.getMassAccess().getValueDOUBLETerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getMassRule());
					}
					setWithLastConsumed(
						$current,
						"value",
						lv_value_3_0,
						"de.fraunhofer.ipa.kinematics.Kinematics.DOUBLE");
				}
			)
		)
		this_END_4=RULE_END
		{
			newLeafNode(this_END_4, grammarAccess.getMassAccess().getENDTerminalRuleCall_4());
		}
	)
;

// Entry rule entryRuleInertia
entryRuleInertia returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getInertiaRule()); }
	iv_ruleInertia=ruleInertia
	{ $current=$iv_ruleInertia.current; }
	EOF;

// Rule Inertia
ruleInertia returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getInertiaAccess().getInertiaAction_0(),
					$current);
			}
		)
		this_BEGIN_1=RULE_BEGIN
		{
			newLeafNode(this_BEGIN_1, grammarAccess.getInertiaAccess().getBEGINTerminalRuleCall_1());
		}
		(
			otherlv_2=Ixx
			{
				newLeafNode(otherlv_2, grammarAccess.getInertiaAccess().getIxxKeyword_2_0());
			}
			(
				(
					lv_ixx_3_0=RULE_DOUBLE
					{
						newLeafNode(lv_ixx_3_0, grammarAccess.getInertiaAccess().getIxxDOUBLETerminalRuleCall_2_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getInertiaRule());
						}
						setWithLastConsumed(
							$current,
							"ixx",
							lv_ixx_3_0,
							"de.fraunhofer.ipa.kinematics.Kinematics.DOUBLE");
					}
				)
			)
		)?
		(
			otherlv_4=Ixy
			{
				newLeafNode(otherlv_4, grammarAccess.getInertiaAccess().getIxyKeyword_3_0());
			}
			(
				(
					lv_ixy_5_0=RULE_DOUBLE
					{
						newLeafNode(lv_ixy_5_0, grammarAccess.getInertiaAccess().getIxyDOUBLETerminalRuleCall_3_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getInertiaRule());
						}
						setWithLastConsumed(
							$current,
							"ixy",
							lv_ixy_5_0,
							"de.fraunhofer.ipa.kinematics.Kinematics.DOUBLE");
					}
				)
			)
		)?
		(
			otherlv_6=Ixz
			{
				newLeafNode(otherlv_6, grammarAccess.getInertiaAccess().getIxzKeyword_4_0());
			}
			(
				(
					lv_ixz_7_0=RULE_DOUBLE
					{
						newLeafNode(lv_ixz_7_0, grammarAccess.getInertiaAccess().getIxzDOUBLETerminalRuleCall_4_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getInertiaRule());
						}
						setWithLastConsumed(
							$current,
							"ixz",
							lv_ixz_7_0,
							"de.fraunhofer.ipa.kinematics.Kinematics.DOUBLE");
					}
				)
			)
		)?
		(
			otherlv_8=Iyy
			{
				newLeafNode(otherlv_8, grammarAccess.getInertiaAccess().getIyyKeyword_5_0());
			}
			(
				(
					lv_iyy_9_0=RULE_DOUBLE
					{
						newLeafNode(lv_iyy_9_0, grammarAccess.getInertiaAccess().getIyyDOUBLETerminalRuleCall_5_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getInertiaRule());
						}
						setWithLastConsumed(
							$current,
							"iyy",
							lv_iyy_9_0,
							"de.fraunhofer.ipa.kinematics.Kinematics.DOUBLE");
					}
				)
			)
		)?
		(
			otherlv_10=Iyz
			{
				newLeafNode(otherlv_10, grammarAccess.getInertiaAccess().getIyzKeyword_6_0());
			}
			(
				(
					lv_iyz_11_0=RULE_DOUBLE
					{
						newLeafNode(lv_iyz_11_0, grammarAccess.getInertiaAccess().getIyzDOUBLETerminalRuleCall_6_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getInertiaRule());
						}
						setWithLastConsumed(
							$current,
							"iyz",
							lv_iyz_11_0,
							"de.fraunhofer.ipa.kinematics.Kinematics.DOUBLE");
					}
				)
			)
		)?
		(
			otherlv_12=Izz
			{
				newLeafNode(otherlv_12, grammarAccess.getInertiaAccess().getIzzKeyword_7_0());
			}
			(
				(
					lv_izz_13_0=RULE_DOUBLE
					{
						newLeafNode(lv_izz_13_0, grammarAccess.getInertiaAccess().getIzzDOUBLETerminalRuleCall_7_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getInertiaRule());
						}
						setWithLastConsumed(
							$current,
							"izz",
							lv_izz_13_0,
							"de.fraunhofer.ipa.kinematics.Kinematics.DOUBLE");
					}
				)
			)
		)?
		this_END_14=RULE_END
		{
			newLeafNode(this_END_14, grammarAccess.getInertiaAccess().getENDTerminalRuleCall_8());
		}
	)
;

// Entry rule entryRuleGeometry
entryRuleGeometry returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getGeometryRule()); }
	iv_ruleGeometry=ruleGeometry
	{ $current=$iv_ruleGeometry.current; }
	EOF;

// Rule Geometry
ruleGeometry returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getGeometryAccess().getGeometryAction_0(),
					$current);
			}
		)
		this_BEGIN_1=RULE_BEGIN
		{
			newLeafNode(this_BEGIN_1, grammarAccess.getGeometryAccess().getBEGINTerminalRuleCall_1());
		}
		(
			otherlv_2=Box
			{
				newLeafNode(otherlv_2, grammarAccess.getGeometryAccess().getBoxKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getGeometryAccess().getBoxBoxParserRuleCall_2_1_0());
					}
					lv_box_3_0=ruleBox
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getGeometryRule());
						}
						set(
							$current,
							"box",
							lv_box_3_0,
							"de.fraunhofer.ipa.kinematics.Kinematics.Box");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_4=Cylinder
			{
				newLeafNode(otherlv_4, grammarAccess.getGeometryAccess().getCylinderKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getGeometryAccess().getCylinderCylinderParserRuleCall_3_1_0());
					}
					lv_cylinder_5_0=ruleCylinder
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getGeometryRule());
						}
						set(
							$current,
							"cylinder",
							lv_cylinder_5_0,
							"de.fraunhofer.ipa.kinematics.Kinematics.Cylinder");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_6=Sphere
			{
				newLeafNode(otherlv_6, grammarAccess.getGeometryAccess().getSphereKeyword_4_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getGeometryAccess().getSphereSphereParserRuleCall_4_1_0());
					}
					lv_sphere_7_0=ruleSphere
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getGeometryRule());
						}
						set(
							$current,
							"sphere",
							lv_sphere_7_0,
							"de.fraunhofer.ipa.kinematics.Kinematics.Sphere");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_8=Mesh
			{
				newLeafNode(otherlv_8, grammarAccess.getGeometryAccess().getMeshKeyword_5_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getGeometryAccess().getMeshMeshParserRuleCall_5_1_0());
					}
					lv_mesh_9_0=ruleMesh
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getGeometryRule());
						}
						set(
							$current,
							"mesh",
							lv_mesh_9_0,
							"de.fraunhofer.ipa.kinematics.Kinematics.Mesh");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		this_END_10=RULE_END
		{
			newLeafNode(this_END_10, grammarAccess.getGeometryAccess().getENDTerminalRuleCall_6());
		}
	)
;

// Entry rule entryRuleBox
entryRuleBox returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBoxRule()); }
	iv_ruleBox=ruleBox
	{ $current=$iv_ruleBox.current; }
	EOF;

// Rule Box
ruleBox returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getBoxAccess().getBoxAction_0(),
					$current);
			}
		)
		this_BEGIN_1=RULE_BEGIN
		{
			newLeafNode(this_BEGIN_1, grammarAccess.getBoxAccess().getBEGINTerminalRuleCall_1());
		}
		otherlv_2=Size
		{
			newLeafNode(otherlv_2, grammarAccess.getBoxAccess().getSizeKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getBoxAccess().getSizeEStringParserRuleCall_3_0());
				}
				lv_size_3_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getBoxRule());
					}
					set(
						$current,
						"size",
						lv_size_3_0,
						"de.fraunhofer.ipa.kinematics.Kinematics.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		this_END_4=RULE_END
		{
			newLeafNode(this_END_4, grammarAccess.getBoxAccess().getENDTerminalRuleCall_4());
		}
	)
;

// Entry rule entryRuleCylinder
entryRuleCylinder returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCylinderRule()); }
	iv_ruleCylinder=ruleCylinder
	{ $current=$iv_ruleCylinder.current; }
	EOF;

// Rule Cylinder
ruleCylinder returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_BEGIN_0=RULE_BEGIN
		{
			newLeafNode(this_BEGIN_0, grammarAccess.getCylinderAccess().getBEGINTerminalRuleCall_0());
		}
		otherlv_1=Length
		{
			newLeafNode(otherlv_1, grammarAccess.getCylinderAccess().getLengthKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getCylinderAccess().getLengthEStringParserRuleCall_2_0());
				}
				lv_length_2_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCylinderRule());
					}
					set(
						$current,
						"length",
						lv_length_2_0,
						"de.fraunhofer.ipa.kinematics.Kinematics.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3=Radius
		{
			newLeafNode(otherlv_3, grammarAccess.getCylinderAccess().getRadiusKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getCylinderAccess().getRadiusEStringParserRuleCall_4_0());
				}
				lv_radius_4_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCylinderRule());
					}
					set(
						$current,
						"radius",
						lv_radius_4_0,
						"de.fraunhofer.ipa.kinematics.Kinematics.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		this_END_5=RULE_END
		{
			newLeafNode(this_END_5, grammarAccess.getCylinderAccess().getENDTerminalRuleCall_5());
		}
	)
;

// Entry rule entryRuleSphere
entryRuleSphere returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSphereRule()); }
	iv_ruleSphere=ruleSphere
	{ $current=$iv_ruleSphere.current; }
	EOF;

// Rule Sphere
ruleSphere returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_BEGIN_0=RULE_BEGIN
		{
			newLeafNode(this_BEGIN_0, grammarAccess.getSphereAccess().getBEGINTerminalRuleCall_0());
		}
		otherlv_1=Radius
		{
			newLeafNode(otherlv_1, grammarAccess.getSphereAccess().getRadiusKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getSphereAccess().getRadiusDouble0ParserRuleCall_2_0());
				}
				lv_radius_2_0=ruleDouble0
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSphereRule());
					}
					set(
						$current,
						"radius",
						lv_radius_2_0,
						"de.fraunhofer.ipa.kinematics.Kinematics.Double0");
					afterParserOrEnumRuleCall();
				}
			)
		)
		this_END_3=RULE_END
		{
			newLeafNode(this_END_3, grammarAccess.getSphereAccess().getENDTerminalRuleCall_3());
		}
	)
;

// Entry rule entryRuleMesh
entryRuleMesh returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMeshRule()); }
	iv_ruleMesh=ruleMesh
	{ $current=$iv_ruleMesh.current; }
	EOF;

// Rule Mesh
ruleMesh returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_BEGIN_0=RULE_BEGIN
		{
			newLeafNode(this_BEGIN_0, grammarAccess.getMeshAccess().getBEGINTerminalRuleCall_0());
		}
		otherlv_1=Filename
		{
			newLeafNode(otherlv_1, grammarAccess.getMeshAccess().getFilenameKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getMeshAccess().getFilenameEStringParserRuleCall_2_0());
				}
				lv_filename_2_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMeshRule());
					}
					set(
						$current,
						"filename",
						lv_filename_2_0,
						"de.fraunhofer.ipa.kinematics.Kinematics.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_3=Scale
			{
				newLeafNode(otherlv_3, grammarAccess.getMeshAccess().getScaleKeyword_3_0());
			}
			otherlv_4=LeftSquareBracket
			{
				newLeafNode(otherlv_4, grammarAccess.getMeshAccess().getLeftSquareBracketKeyword_3_1());
			}
			(
				(
					lv_scale_5_0=RULE_DOUBLE
					{
						newLeafNode(lv_scale_5_0, grammarAccess.getMeshAccess().getScaleDOUBLETerminalRuleCall_3_2_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getMeshRule());
						}
						addWithLastConsumed(
							$current,
							"scale",
							lv_scale_5_0,
							"de.fraunhofer.ipa.kinematics.Kinematics.DOUBLE");
					}
				)
			)
			(
				otherlv_6=Comma
				{
					newLeafNode(otherlv_6, grammarAccess.getMeshAccess().getCommaKeyword_3_3_0());
				}
				(
					(
						lv_scale_7_0=RULE_DOUBLE
						{
							newLeafNode(lv_scale_7_0, grammarAccess.getMeshAccess().getScaleDOUBLETerminalRuleCall_3_3_1_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getMeshRule());
							}
							addWithLastConsumed(
								$current,
								"scale",
								lv_scale_7_0,
								"de.fraunhofer.ipa.kinematics.Kinematics.DOUBLE");
						}
					)
				)
			)*
			otherlv_8=RightSquareBracket
			{
				newLeafNode(otherlv_8, grammarAccess.getMeshAccess().getRightSquareBracketKeyword_3_4());
			}
		)?
		this_END_9=RULE_END
		{
			newLeafNode(this_END_9, grammarAccess.getMeshAccess().getENDTerminalRuleCall_4());
		}
	)
;

// Entry rule entryRuleEString
entryRuleEString returns [String current=null]:
	{ newCompositeNode(grammarAccess.getEStringRule()); }
	iv_ruleEString=ruleEString
	{ $current=$iv_ruleEString.current.getText(); }
	EOF;

// Rule EString
ruleEString returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	this_STRING_0=RULE_STRING
	{
		$current.merge(this_STRING_0);
	}
	{
		newLeafNode(this_STRING_0, grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall());
	}
;

// Entry rule entryRuleDouble0
entryRuleDouble0 returns [String current=null]:
	{ newCompositeNode(grammarAccess.getDouble0Rule()); }
	iv_ruleDouble0=ruleDouble0
	{ $current=$iv_ruleDouble0.current.getText(); }
	EOF;

// Rule Double0
ruleDouble0 returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	this_DOUBLE_0=RULE_DOUBLE
	{
		$current.merge(this_DOUBLE_0);
	}
	{
		newLeafNode(this_DOUBLE_0, grammarAccess.getDouble0Access().getDOUBLETerminalRuleCall());
	}
;
