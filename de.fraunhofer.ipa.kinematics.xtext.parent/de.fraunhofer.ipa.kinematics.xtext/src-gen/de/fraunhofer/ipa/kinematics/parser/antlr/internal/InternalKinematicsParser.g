/*
 * generated by Xtext 2.26.0
 */
parser grammar InternalKinematicsParser;

options {
	tokenVocab=InternalKinematicsLexer;
	superClass=AbstractInternalAntlrParser;
}

@header {
package de.fraunhofer.ipa.kinematics.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import de.fraunhofer.ipa.kinematics.services.KinematicsGrammarAccess;

}

@members {

 	private KinematicsGrammarAccess grammarAccess;

    public InternalKinematicsParser(TokenStream input, KinematicsGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "Robot";
   	}

   	@Override
   	protected KinematicsGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleRobot
entryRuleRobot returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRobotRule()); }
	iv_ruleRobot=ruleRobot
	{ $current=$iv_ruleRobot.current; }
	EOF;

// Rule Robot
ruleRobot returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getRobotAccess().getXacroRobotAction_0(),
					$current);
			}
		)
		otherlv_1=Xacrorobot
		{
			newLeafNode(otherlv_1, grammarAccess.getRobotAccess().getXacrorobotKeyword_1());
		}
		this_BEGIN_2=RULE_BEGIN
		{
			newLeafNode(this_BEGIN_2, grammarAccess.getRobotAccess().getBEGINTerminalRuleCall_2());
		}
		otherlv_3=Name
		{
			newLeafNode(otherlv_3, grammarAccess.getRobotAccess().getNameKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getRobotAccess().getNameEStringParserRuleCall_4_0());
				}
				lv_name_4_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRobotRule());
					}
					set(
						$current,
						"name",
						lv_name_4_0,
						"de.fraunhofer.ipa.kinematics.Kinematics.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_5=Macros
			{
				newLeafNode(otherlv_5, grammarAccess.getRobotAccess().getMacrosKeyword_5_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getRobotAccess().getMacrosMacroParserRuleCall_5_1_0());
					}
					lv_macros_6_0=ruleMacro
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getRobotRule());
						}
						add(
							$current,
							"macros",
							lv_macros_6_0,
							"de.fraunhofer.ipa.kinematics.Kinematics.Macro");
						afterParserOrEnumRuleCall();
					}
				)
			)*
		)?
		this_END_7=RULE_END
		{
			newLeafNode(this_END_7, grammarAccess.getRobotAccess().getENDTerminalRuleCall_6());
		}
	)
;

// Entry rule entryRuleMacro
entryRuleMacro returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMacroRule()); }
	iv_ruleMacro=ruleMacro
	{ $current=$iv_ruleMacro.current; }
	EOF;

// Rule Macro
ruleMacro returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0=HyphenMinus
		{
			newLeafNode(otherlv_0, grammarAccess.getMacroAccess().getHyphenMinusKeyword_0());
		}
		otherlv_1=Name
		{
			newLeafNode(otherlv_1, grammarAccess.getMacroAccess().getNameKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getMacroAccess().getNameEStringParserRuleCall_2_0());
				}
				lv_name_2_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMacroRule());
					}
					set(
						$current,
						"name",
						lv_name_2_0,
						"de.fraunhofer.ipa.kinematics.Kinematics.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		this_BEGIN_3=RULE_BEGIN
		{
			newLeafNode(this_BEGIN_3, grammarAccess.getMacroAccess().getBEGINTerminalRuleCall_3());
		}
		(
			otherlv_4=Parameters
			{
				newLeafNode(otherlv_4, grammarAccess.getMacroAccess().getParametersKeyword_4_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getMacroAccess().getParametersParameterParserRuleCall_4_1_0());
					}
					lv_parameters_5_0=ruleParameter
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getMacroRule());
						}
						add(
							$current,
							"parameters",
							lv_parameters_5_0,
							"de.fraunhofer.ipa.kinematics.Kinematics.Parameter");
						afterParserOrEnumRuleCall();
					}
				)
			)*
		)?
		(
			otherlv_6=Link
			{
				newLeafNode(otherlv_6, grammarAccess.getMacroAccess().getLinkKeyword_5_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getMacroAccess().getLinkLinkParserRuleCall_5_1_0());
					}
					lv_link_7_0=ruleLink
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getMacroRule());
						}
						add(
							$current,
							"link",
							lv_link_7_0,
							"de.fraunhofer.ipa.kinematics.Kinematics.Link");
						afterParserOrEnumRuleCall();
					}
				)
			)*
		)?
		(
			otherlv_8=Joint
			{
				newLeafNode(otherlv_8, grammarAccess.getMacroAccess().getJointKeyword_6_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getMacroAccess().getJointJointParserRuleCall_6_1_0());
					}
					lv_joint_9_0=ruleJoint
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getMacroRule());
						}
						add(
							$current,
							"joint",
							lv_joint_9_0,
							"de.fraunhofer.ipa.kinematics.Kinematics.Joint");
						afterParserOrEnumRuleCall();
					}
				)
			)*
		)?
		this_END_10=RULE_END
		{
			newLeafNode(this_END_10, grammarAccess.getMacroAccess().getENDTerminalRuleCall_7());
		}
	)
;

// Entry rule entryRuleParameter
entryRuleParameter returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getParameterRule()); }
	iv_ruleParameter=ruleParameter
	{ $current=$iv_ruleParameter.current; }
	EOF;

// Rule Parameter
ruleParameter returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getParameterAccess().getParameterAction_0(),
					$current);
			}
		)
		otherlv_1=HyphenMinus
		{
			newLeafNode(otherlv_1, grammarAccess.getParameterAccess().getHyphenMinusKeyword_1());
		}
		otherlv_2=Name
		{
			newLeafNode(otherlv_2, grammarAccess.getParameterAccess().getNameKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getParameterAccess().getNameEStringParserRuleCall_3_0());
				}
				lv_name_3_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getParameterRule());
					}
					set(
						$current,
						"name",
						lv_name_3_0,
						"de.fraunhofer.ipa.kinematics.Kinematics.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		this_BEGIN_4=RULE_BEGIN
		{
			newLeafNode(this_BEGIN_4, grammarAccess.getParameterAccess().getBEGINTerminalRuleCall_4());
		}
		otherlv_5=Type
		{
			newLeafNode(otherlv_5, grammarAccess.getParameterAccess().getTypeKeyword_5());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getParameterAccess().getTypeParameterTypeEnumRuleCall_6_0());
				}
				lv_type_6_0=ruleParameterType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getParameterRule());
					}
					set(
						$current,
						"type",
						lv_type_6_0,
						"de.fraunhofer.ipa.kinematics.Kinematics.ParameterType");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_7=Default
			{
				newLeafNode(otherlv_7, grammarAccess.getParameterAccess().getDefaultKeyword_7_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getParameterAccess().getDefaultEStringParserRuleCall_7_1_0());
					}
					lv_default_8_0=ruleEString
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getParameterRule());
						}
						set(
							$current,
							"default",
							lv_default_8_0,
							"de.fraunhofer.ipa.kinematics.Kinematics.EString");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_9=Value
			{
				newLeafNode(otherlv_9, grammarAccess.getParameterAccess().getValueKeyword_8_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getParameterAccess().getValueEStringParserRuleCall_8_1_0());
					}
					lv_value_10_0=ruleEString
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getParameterRule());
						}
						set(
							$current,
							"value",
							lv_value_10_0,
							"de.fraunhofer.ipa.kinematics.Kinematics.EString");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		this_END_11=RULE_END
		{
			newLeafNode(this_END_11, grammarAccess.getParameterAccess().getENDTerminalRuleCall_9());
		}
	)
;

// Entry rule entryRuleJoint
entryRuleJoint returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getJointRule()); }
	iv_ruleJoint=ruleJoint
	{ $current=$iv_ruleJoint.current; }
	EOF;

// Rule Joint
ruleJoint returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0=HyphenMinus
		{
			newLeafNode(otherlv_0, grammarAccess.getJointAccess().getHyphenMinusKeyword_0());
		}
		otherlv_1=Name
		{
			newLeafNode(otherlv_1, grammarAccess.getJointAccess().getNameKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getJointAccess().getNameEStringParserRuleCall_2_0());
				}
				lv_name_2_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getJointRule());
					}
					set(
						$current,
						"name",
						lv_name_2_0,
						"de.fraunhofer.ipa.kinematics.Kinematics.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		this_BEGIN_3=RULE_BEGIN
		{
			newLeafNode(this_BEGIN_3, grammarAccess.getJointAccess().getBEGINTerminalRuleCall_3());
		}
		otherlv_4=Type
		{
			newLeafNode(otherlv_4, grammarAccess.getJointAccess().getTypeKeyword_4());
		}
		(
			(
				lv_type_5_0=RULE_JOINTTYPE
				{
					newLeafNode(lv_type_5_0, grammarAccess.getJointAccess().getTypeJOINTTYPETerminalRuleCall_5_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getJointRule());
					}
					setWithLastConsumed(
						$current,
						"type",
						lv_type_5_0,
						"de.fraunhofer.ipa.kinematics.Kinematics.JOINTTYPE");
				}
			)
		)
		otherlv_6=Parent
		{
			newLeafNode(otherlv_6, grammarAccess.getJointAccess().getParentKeyword_6());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getJointRule());
					}
				}
				otherlv_7=RULE_ID
				{
					newLeafNode(otherlv_7, grammarAccess.getJointAccess().getParentLinkCrossReference_7_0());
				}
			)
		)
		otherlv_8=Child
		{
			newLeafNode(otherlv_8, grammarAccess.getJointAccess().getChildKeyword_8());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getJointRule());
					}
				}
				otherlv_9=RULE_ID
				{
					newLeafNode(otherlv_9, grammarAccess.getJointAccess().getChildLinkCrossReference_9_0());
				}
			)
		)
		otherlv_10=Origin
		{
			newLeafNode(otherlv_10, grammarAccess.getJointAccess().getOriginKeyword_10());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getJointAccess().getOriginPoseParserRuleCall_11_0());
				}
				lv_origin_11_0=rulePose
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getJointRule());
					}
					set(
						$current,
						"origin",
						lv_origin_11_0,
						"de.fraunhofer.ipa.kinematics.Kinematics.Pose");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_12=Axis
			{
				newLeafNode(otherlv_12, grammarAccess.getJointAccess().getAxisKeyword_12_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getJointAccess().getAxisVector3ParserRuleCall_12_1_0());
					}
					lv_axis_13_0=ruleVector3
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getJointRule());
						}
						set(
							$current,
							"axis",
							lv_axis_13_0,
							"de.fraunhofer.ipa.kinematics.Kinematics.Vector3");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_14=Limit
			{
				newLeafNode(otherlv_14, grammarAccess.getJointAccess().getLimitKeyword_13_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getJointAccess().getLimitLimitParserRuleCall_13_1_0());
					}
					lv_limit_15_0=ruleLimit
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getJointRule());
						}
						set(
							$current,
							"limit",
							lv_limit_15_0,
							"de.fraunhofer.ipa.kinematics.Kinematics.Limit");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		this_END_16=RULE_END
		{
			newLeafNode(this_END_16, grammarAccess.getJointAccess().getENDTerminalRuleCall_14());
		}
	)
;

// Entry rule entryRuleLink
entryRuleLink returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLinkRule()); }
	iv_ruleLink=ruleLink
	{ $current=$iv_ruleLink.current; }
	EOF;

// Rule Link
ruleLink returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0=HyphenMinus
		{
			newLeafNode(otherlv_0, grammarAccess.getLinkAccess().getHyphenMinusKeyword_0());
		}
		otherlv_1=Name
		{
			newLeafNode(otherlv_1, grammarAccess.getLinkAccess().getNameKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getLinkAccess().getNameEStringParserRuleCall_2_0());
				}
				lv_name_2_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLinkRule());
					}
					set(
						$current,
						"name",
						lv_name_2_0,
						"de.fraunhofer.ipa.kinematics.Kinematics.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_3=Colon
			{
				newLeafNode(otherlv_3, grammarAccess.getLinkAccess().getColonKeyword_3_0());
			}
			this_BEGIN_4=RULE_BEGIN
			{
				newLeafNode(this_BEGIN_4, grammarAccess.getLinkAccess().getBEGINTerminalRuleCall_3_1());
			}
			(
				otherlv_5=Inertial
				{
					newLeafNode(otherlv_5, grammarAccess.getLinkAccess().getInertialKeyword_3_2_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getLinkAccess().getInertialInertialParserRuleCall_3_2_1_0());
						}
						lv_inertial_6_0=ruleInertial
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getLinkRule());
							}
							set(
								$current,
								"inertial",
								lv_inertial_6_0,
								"de.fraunhofer.ipa.kinematics.Kinematics.Inertial");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)?
			(
				otherlv_7=Visual
				{
					newLeafNode(otherlv_7, grammarAccess.getLinkAccess().getVisualKeyword_3_3_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getLinkAccess().getVisualVisualParserRuleCall_3_3_1_0());
						}
						lv_visual_8_0=ruleVisual
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getLinkRule());
							}
							set(
								$current,
								"visual",
								lv_visual_8_0,
								"de.fraunhofer.ipa.kinematics.Kinematics.Visual");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)?
			(
				otherlv_9=Collision
				{
					newLeafNode(otherlv_9, grammarAccess.getLinkAccess().getCollisionKeyword_3_4_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getLinkAccess().getCollisionCollisionParserRuleCall_3_4_1_0());
						}
						lv_collision_10_0=ruleCollision
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getLinkRule());
							}
							set(
								$current,
								"collision",
								lv_collision_10_0,
								"de.fraunhofer.ipa.kinematics.Kinematics.Collision");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)?
			this_END_11=RULE_END
			{
				newLeafNode(this_END_11, grammarAccess.getLinkAccess().getENDTerminalRuleCall_3_5());
			}
		)?
	)
;

// Entry rule entryRulePose
entryRulePose returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPoseRule()); }
	iv_rulePose=rulePose
	{ $current=$iv_rulePose.current; }
	EOF;

// Rule Pose
rulePose returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getPoseAccess().getPoseAction_0(),
					$current);
			}
		)
		this_BEGIN_1=RULE_BEGIN
		{
			newLeafNode(this_BEGIN_1, grammarAccess.getPoseAccess().getBEGINTerminalRuleCall_1());
		}
		(
			otherlv_2=Rpy
			{
				newLeafNode(otherlv_2, grammarAccess.getPoseAccess().getRpyKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getPoseAccess().getRpyEStringParserRuleCall_2_1_0());
					}
					lv_rpy_3_0=ruleEString
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPoseRule());
						}
						set(
							$current,
							"rpy",
							lv_rpy_3_0,
							"de.fraunhofer.ipa.kinematics.Kinematics.EString");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_4=Xyz
			{
				newLeafNode(otherlv_4, grammarAccess.getPoseAccess().getXyzKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getPoseAccess().getXyzEStringParserRuleCall_3_1_0());
					}
					lv_xyz_5_0=ruleEString
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPoseRule());
						}
						set(
							$current,
							"xyz",
							lv_xyz_5_0,
							"de.fraunhofer.ipa.kinematics.Kinematics.EString");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		this_END_6=RULE_END
		{
			newLeafNode(this_END_6, grammarAccess.getPoseAccess().getENDTerminalRuleCall_4());
		}
	)
;

// Entry rule entryRuleVector3
entryRuleVector3 returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getVector3Rule()); }
	iv_ruleVector3=ruleVector3
	{ $current=$iv_ruleVector3.current; }
	EOF;

// Rule Vector3
ruleVector3 returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getVector3Access().getAxisAction_0(),
					$current);
			}
		)
		this_BEGIN_1=RULE_BEGIN
		{
			newLeafNode(this_BEGIN_1, grammarAccess.getVector3Access().getBEGINTerminalRuleCall_1());
		}
		(
			otherlv_2=Xyz
			{
				newLeafNode(otherlv_2, grammarAccess.getVector3Access().getXyzKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getVector3Access().getXyzEStringParserRuleCall_2_1_0());
					}
					lv_xyz_3_0=ruleEString
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getVector3Rule());
						}
						set(
							$current,
							"xyz",
							lv_xyz_3_0,
							"de.fraunhofer.ipa.kinematics.Kinematics.EString");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		this_END_4=RULE_END
		{
			newLeafNode(this_END_4, grammarAccess.getVector3Access().getENDTerminalRuleCall_3());
		}
	)
;

// Entry rule entryRuleLimit
entryRuleLimit returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLimitRule()); }
	iv_ruleLimit=ruleLimit
	{ $current=$iv_ruleLimit.current; }
	EOF;

// Rule Limit
ruleLimit returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getLimitAccess().getLimitAction_0(),
					$current);
			}
		)
		this_BEGIN_1=RULE_BEGIN
		{
			newLeafNode(this_BEGIN_1, grammarAccess.getLimitAccess().getBEGINTerminalRuleCall_1());
		}
		(
			otherlv_2=Effort
			{
				newLeafNode(otherlv_2, grammarAccess.getLimitAccess().getEffortKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getLimitAccess().getEffortDouble0ParserRuleCall_2_1_0());
					}
					lv_effort_3_0=ruleDouble0
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getLimitRule());
						}
						set(
							$current,
							"effort",
							lv_effort_3_0,
							"de.fraunhofer.ipa.kinematics.Kinematics.Double0");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_4=Lower
			{
				newLeafNode(otherlv_4, grammarAccess.getLimitAccess().getLowerKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getLimitAccess().getLowerDouble0ParserRuleCall_3_1_0());
					}
					lv_lower_5_0=ruleDouble0
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getLimitRule());
						}
						set(
							$current,
							"lower",
							lv_lower_5_0,
							"de.fraunhofer.ipa.kinematics.Kinematics.Double0");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_6=Upper
			{
				newLeafNode(otherlv_6, grammarAccess.getLimitAccess().getUpperKeyword_4_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getLimitAccess().getUpperDouble0ParserRuleCall_4_1_0());
					}
					lv_upper_7_0=ruleDouble0
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getLimitRule());
						}
						set(
							$current,
							"upper",
							lv_upper_7_0,
							"de.fraunhofer.ipa.kinematics.Kinematics.Double0");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_8=Velocity
			{
				newLeafNode(otherlv_8, grammarAccess.getLimitAccess().getVelocityKeyword_5_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getLimitAccess().getVelocityDouble0ParserRuleCall_5_1_0());
					}
					lv_velocity_9_0=ruleDouble0
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getLimitRule());
						}
						set(
							$current,
							"velocity",
							lv_velocity_9_0,
							"de.fraunhofer.ipa.kinematics.Kinematics.Double0");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		this_END_10=RULE_END
		{
			newLeafNode(this_END_10, grammarAccess.getLimitAccess().getENDTerminalRuleCall_6());
		}
	)
;

// Entry rule entryRuleInertial
entryRuleInertial returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getInertialRule()); }
	iv_ruleInertial=ruleInertial
	{ $current=$iv_ruleInertial.current; }
	EOF;

// Rule Inertial
ruleInertial returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getInertialAccess().getInertialAction_0(),
					$current);
			}
		)
		this_BEGIN_1=RULE_BEGIN
		{
			newLeafNode(this_BEGIN_1, grammarAccess.getInertialAccess().getBEGINTerminalRuleCall_1());
		}
		(
			otherlv_2=Origin
			{
				newLeafNode(otherlv_2, grammarAccess.getInertialAccess().getOriginKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getInertialAccess().getOriginPoseParserRuleCall_2_1_0());
					}
					lv_origin_3_0=rulePose
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getInertialRule());
						}
						set(
							$current,
							"origin",
							lv_origin_3_0,
							"de.fraunhofer.ipa.kinematics.Kinematics.Pose");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_4=Mass
			{
				newLeafNode(otherlv_4, grammarAccess.getInertialAccess().getMassKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getInertialAccess().getMassMassParserRuleCall_3_1_0());
					}
					lv_mass_5_0=ruleMass
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getInertialRule());
						}
						set(
							$current,
							"mass",
							lv_mass_5_0,
							"de.fraunhofer.ipa.kinematics.Kinematics.Mass");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_6=Inertia
			{
				newLeafNode(otherlv_6, grammarAccess.getInertialAccess().getInertiaKeyword_4_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getInertialAccess().getInertiaInertiaParserRuleCall_4_1_0());
					}
					lv_inertia_7_0=ruleInertia
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getInertialRule());
						}
						set(
							$current,
							"inertia",
							lv_inertia_7_0,
							"de.fraunhofer.ipa.kinematics.Kinematics.Inertia");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		this_END_8=RULE_END
		{
			newLeafNode(this_END_8, grammarAccess.getInertialAccess().getENDTerminalRuleCall_5());
		}
	)
;

// Entry rule entryRuleVisual
entryRuleVisual returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getVisualRule()); }
	iv_ruleVisual=ruleVisual
	{ $current=$iv_ruleVisual.current; }
	EOF;

// Rule Visual
ruleVisual returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_BEGIN_0=RULE_BEGIN
		{
			newLeafNode(this_BEGIN_0, grammarAccess.getVisualAccess().getBEGINTerminalRuleCall_0());
		}
		(
			otherlv_1=Origin
			{
				newLeafNode(otherlv_1, grammarAccess.getVisualAccess().getOriginKeyword_1_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getVisualAccess().getOriginPoseParserRuleCall_1_1_0());
					}
					lv_origin_2_0=rulePose
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getVisualRule());
						}
						set(
							$current,
							"origin",
							lv_origin_2_0,
							"de.fraunhofer.ipa.kinematics.Kinematics.Pose");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_3=Geometry
		{
			newLeafNode(otherlv_3, grammarAccess.getVisualAccess().getGeometryKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getVisualAccess().getGeometryGeometryParserRuleCall_3_0());
				}
				lv_geometry_4_0=ruleGeometry
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getVisualRule());
					}
					set(
						$current,
						"geometry",
						lv_geometry_4_0,
						"de.fraunhofer.ipa.kinematics.Kinematics.Geometry");
					afterParserOrEnumRuleCall();
				}
			)
		)
		this_END_5=RULE_END
		{
			newLeafNode(this_END_5, grammarAccess.getVisualAccess().getENDTerminalRuleCall_4());
		}
	)
;

// Entry rule entryRuleCollision
entryRuleCollision returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCollisionRule()); }
	iv_ruleCollision=ruleCollision
	{ $current=$iv_ruleCollision.current; }
	EOF;

// Rule Collision
ruleCollision returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_BEGIN_0=RULE_BEGIN
		{
			newLeafNode(this_BEGIN_0, grammarAccess.getCollisionAccess().getBEGINTerminalRuleCall_0());
		}
		(
			otherlv_1=Origin
			{
				newLeafNode(otherlv_1, grammarAccess.getCollisionAccess().getOriginKeyword_1_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getCollisionAccess().getOriginPoseParserRuleCall_1_1_0());
					}
					lv_origin_2_0=rulePose
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getCollisionRule());
						}
						set(
							$current,
							"origin",
							lv_origin_2_0,
							"de.fraunhofer.ipa.kinematics.Kinematics.Pose");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_3=Geometry
		{
			newLeafNode(otherlv_3, grammarAccess.getCollisionAccess().getGeometryKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getCollisionAccess().getGeometryGeometryParserRuleCall_3_0());
				}
				lv_geometry_4_0=ruleGeometry
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCollisionRule());
					}
					set(
						$current,
						"geometry",
						lv_geometry_4_0,
						"de.fraunhofer.ipa.kinematics.Kinematics.Geometry");
					afterParserOrEnumRuleCall();
				}
			)
		)
		this_END_5=RULE_END
		{
			newLeafNode(this_END_5, grammarAccess.getCollisionAccess().getENDTerminalRuleCall_4());
		}
	)
;

// Entry rule entryRuleMass
entryRuleMass returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMassRule()); }
	iv_ruleMass=ruleMass
	{ $current=$iv_ruleMass.current; }
	EOF;

// Rule Mass
ruleMass returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getMassAccess().getMassAction_0(),
					$current);
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getMassAccess().getValueDouble0ParserRuleCall_1_0());
				}
				lv_value_1_0=ruleDouble0
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMassRule());
					}
					set(
						$current,
						"value",
						lv_value_1_0,
						"de.fraunhofer.ipa.kinematics.Kinematics.Double0");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleInertia
entryRuleInertia returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getInertiaRule()); }
	iv_ruleInertia=ruleInertia
	{ $current=$iv_ruleInertia.current; }
	EOF;

// Rule Inertia
ruleInertia returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getInertiaAccess().getInertiaAction_0(),
					$current);
			}
		)
		this_BEGIN_1=RULE_BEGIN
		{
			newLeafNode(this_BEGIN_1, grammarAccess.getInertiaAccess().getBEGINTerminalRuleCall_1());
		}
		(
			otherlv_2=Ixx
			{
				newLeafNode(otherlv_2, grammarAccess.getInertiaAccess().getIxxKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getInertiaAccess().getIxxDouble0ParserRuleCall_2_1_0());
					}
					lv_ixx_3_0=ruleDouble0
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getInertiaRule());
						}
						set(
							$current,
							"ixx",
							lv_ixx_3_0,
							"de.fraunhofer.ipa.kinematics.Kinematics.Double0");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_4=Ixy
			{
				newLeafNode(otherlv_4, grammarAccess.getInertiaAccess().getIxyKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getInertiaAccess().getIxyDouble0ParserRuleCall_3_1_0());
					}
					lv_ixy_5_0=ruleDouble0
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getInertiaRule());
						}
						set(
							$current,
							"ixy",
							lv_ixy_5_0,
							"de.fraunhofer.ipa.kinematics.Kinematics.Double0");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_6=Ixz
			{
				newLeafNode(otherlv_6, grammarAccess.getInertiaAccess().getIxzKeyword_4_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getInertiaAccess().getIxzDouble0ParserRuleCall_4_1_0());
					}
					lv_ixz_7_0=ruleDouble0
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getInertiaRule());
						}
						set(
							$current,
							"ixz",
							lv_ixz_7_0,
							"de.fraunhofer.ipa.kinematics.Kinematics.Double0");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_8=Iyy
			{
				newLeafNode(otherlv_8, grammarAccess.getInertiaAccess().getIyyKeyword_5_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getInertiaAccess().getIyyDouble0ParserRuleCall_5_1_0());
					}
					lv_iyy_9_0=ruleDouble0
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getInertiaRule());
						}
						set(
							$current,
							"iyy",
							lv_iyy_9_0,
							"de.fraunhofer.ipa.kinematics.Kinematics.Double0");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_10=Iyz
			{
				newLeafNode(otherlv_10, grammarAccess.getInertiaAccess().getIyzKeyword_6_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getInertiaAccess().getIyzDouble0ParserRuleCall_6_1_0());
					}
					lv_iyz_11_0=ruleDouble0
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getInertiaRule());
						}
						set(
							$current,
							"iyz",
							lv_iyz_11_0,
							"de.fraunhofer.ipa.kinematics.Kinematics.Double0");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_12=Izz
			{
				newLeafNode(otherlv_12, grammarAccess.getInertiaAccess().getIzzKeyword_7_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getInertiaAccess().getIzzDouble0ParserRuleCall_7_1_0());
					}
					lv_izz_13_0=ruleDouble0
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getInertiaRule());
						}
						set(
							$current,
							"izz",
							lv_izz_13_0,
							"de.fraunhofer.ipa.kinematics.Kinematics.Double0");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		this_END_14=RULE_END
		{
			newLeafNode(this_END_14, grammarAccess.getInertiaAccess().getENDTerminalRuleCall_8());
		}
	)
;

// Entry rule entryRuleGeometry
entryRuleGeometry returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getGeometryRule()); }
	iv_ruleGeometry=ruleGeometry
	{ $current=$iv_ruleGeometry.current; }
	EOF;

// Rule Geometry
ruleGeometry returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getGeometryAccess().getGeometryAction_0(),
					$current);
			}
		)
		this_BEGIN_1=RULE_BEGIN
		{
			newLeafNode(this_BEGIN_1, grammarAccess.getGeometryAccess().getBEGINTerminalRuleCall_1());
		}
		(
			otherlv_2=Box
			{
				newLeafNode(otherlv_2, grammarAccess.getGeometryAccess().getBoxKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getGeometryAccess().getBoxBoxParserRuleCall_2_1_0());
					}
					lv_box_3_0=ruleBox
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getGeometryRule());
						}
						set(
							$current,
							"box",
							lv_box_3_0,
							"de.fraunhofer.ipa.kinematics.Kinematics.Box");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_4=Cylinder
			{
				newLeafNode(otherlv_4, grammarAccess.getGeometryAccess().getCylinderKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getGeometryAccess().getCylinderCylinderParserRuleCall_3_1_0());
					}
					lv_cylinder_5_0=ruleCylinder
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getGeometryRule());
						}
						set(
							$current,
							"cylinder",
							lv_cylinder_5_0,
							"de.fraunhofer.ipa.kinematics.Kinematics.Cylinder");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_6=Sphere
			{
				newLeafNode(otherlv_6, grammarAccess.getGeometryAccess().getSphereKeyword_4_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getGeometryAccess().getSphereSphereParserRuleCall_4_1_0());
					}
					lv_sphere_7_0=ruleSphere
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getGeometryRule());
						}
						set(
							$current,
							"sphere",
							lv_sphere_7_0,
							"de.fraunhofer.ipa.kinematics.Kinematics.Sphere");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_8=Mesh
			{
				newLeafNode(otherlv_8, grammarAccess.getGeometryAccess().getMeshKeyword_5_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getGeometryAccess().getMeshMeshParserRuleCall_5_1_0());
					}
					lv_mesh_9_0=ruleMesh
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getGeometryRule());
						}
						set(
							$current,
							"mesh",
							lv_mesh_9_0,
							"de.fraunhofer.ipa.kinematics.Kinematics.Mesh");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		this_END_10=RULE_END
		{
			newLeafNode(this_END_10, grammarAccess.getGeometryAccess().getENDTerminalRuleCall_6());
		}
	)
;

// Entry rule entryRuleBox
entryRuleBox returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBoxRule()); }
	iv_ruleBox=ruleBox
	{ $current=$iv_ruleBox.current; }
	EOF;

// Rule Box
ruleBox returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getBoxAccess().getBoxAction_0(),
					$current);
			}
		)
		this_BEGIN_1=RULE_BEGIN
		{
			newLeafNode(this_BEGIN_1, grammarAccess.getBoxAccess().getBEGINTerminalRuleCall_1());
		}
		otherlv_2=Size
		{
			newLeafNode(otherlv_2, grammarAccess.getBoxAccess().getSizeKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getBoxAccess().getSizeEStringParserRuleCall_3_0());
				}
				lv_size_3_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getBoxRule());
					}
					set(
						$current,
						"size",
						lv_size_3_0,
						"de.fraunhofer.ipa.kinematics.Kinematics.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		this_END_4=RULE_END
		{
			newLeafNode(this_END_4, grammarAccess.getBoxAccess().getENDTerminalRuleCall_4());
		}
	)
;

// Entry rule entryRuleCylinder
entryRuleCylinder returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCylinderRule()); }
	iv_ruleCylinder=ruleCylinder
	{ $current=$iv_ruleCylinder.current; }
	EOF;

// Rule Cylinder
ruleCylinder returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_BEGIN_0=RULE_BEGIN
		{
			newLeafNode(this_BEGIN_0, grammarAccess.getCylinderAccess().getBEGINTerminalRuleCall_0());
		}
		otherlv_1=Length
		{
			newLeafNode(otherlv_1, grammarAccess.getCylinderAccess().getLengthKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getCylinderAccess().getLengthDouble0ParserRuleCall_2_0());
				}
				lv_length_2_0=ruleDouble0
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCylinderRule());
					}
					set(
						$current,
						"length",
						lv_length_2_0,
						"de.fraunhofer.ipa.kinematics.Kinematics.Double0");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3=Radius
		{
			newLeafNode(otherlv_3, grammarAccess.getCylinderAccess().getRadiusKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getCylinderAccess().getRadiusDouble0ParserRuleCall_4_0());
				}
				lv_radius_4_0=ruleDouble0
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCylinderRule());
					}
					set(
						$current,
						"radius",
						lv_radius_4_0,
						"de.fraunhofer.ipa.kinematics.Kinematics.Double0");
					afterParserOrEnumRuleCall();
				}
			)
		)
		this_END_5=RULE_END
		{
			newLeafNode(this_END_5, grammarAccess.getCylinderAccess().getENDTerminalRuleCall_5());
		}
	)
;

// Entry rule entryRuleSphere
entryRuleSphere returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSphereRule()); }
	iv_ruleSphere=ruleSphere
	{ $current=$iv_ruleSphere.current; }
	EOF;

// Rule Sphere
ruleSphere returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_BEGIN_0=RULE_BEGIN
		{
			newLeafNode(this_BEGIN_0, grammarAccess.getSphereAccess().getBEGINTerminalRuleCall_0());
		}
		otherlv_1=Radius
		{
			newLeafNode(otherlv_1, grammarAccess.getSphereAccess().getRadiusKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getSphereAccess().getRadiusDouble0ParserRuleCall_2_0());
				}
				lv_radius_2_0=ruleDouble0
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSphereRule());
					}
					set(
						$current,
						"radius",
						lv_radius_2_0,
						"de.fraunhofer.ipa.kinematics.Kinematics.Double0");
					afterParserOrEnumRuleCall();
				}
			)
		)
		this_END_3=RULE_END
		{
			newLeafNode(this_END_3, grammarAccess.getSphereAccess().getENDTerminalRuleCall_3());
		}
	)
;

// Entry rule entryRuleMesh
entryRuleMesh returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMeshRule()); }
	iv_ruleMesh=ruleMesh
	{ $current=$iv_ruleMesh.current; }
	EOF;

// Rule Mesh
ruleMesh returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_BEGIN_0=RULE_BEGIN
		{
			newLeafNode(this_BEGIN_0, grammarAccess.getMeshAccess().getBEGINTerminalRuleCall_0());
		}
		otherlv_1=Filename
		{
			newLeafNode(otherlv_1, grammarAccess.getMeshAccess().getFilenameKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getMeshAccess().getFilenameEStringParserRuleCall_2_0());
				}
				lv_filename_2_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMeshRule());
					}
					set(
						$current,
						"filename",
						lv_filename_2_0,
						"de.fraunhofer.ipa.kinematics.Kinematics.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_3=Scale
			{
				newLeafNode(otherlv_3, grammarAccess.getMeshAccess().getScaleKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getMeshAccess().getScaleEStringParserRuleCall_3_1_0());
					}
					lv_scale_4_0=ruleEString
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getMeshRule());
						}
						set(
							$current,
							"scale",
							lv_scale_4_0,
							"de.fraunhofer.ipa.kinematics.Kinematics.EString");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		this_END_5=RULE_END
		{
			newLeafNode(this_END_5, grammarAccess.getMeshAccess().getENDTerminalRuleCall_4());
		}
	)
;

// Entry rule entryRuleEString
entryRuleEString returns [String current=null]:
	{ newCompositeNode(grammarAccess.getEStringRule()); }
	iv_ruleEString=ruleEString
	{ $current=$iv_ruleEString.current.getText(); }
	EOF;

// Rule EString
ruleEString returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	this_STRING_0=RULE_STRING
	{
		$current.merge(this_STRING_0);
	}
	{
		newLeafNode(this_STRING_0, grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall());
	}
;

// Entry rule entryRuleDouble0
entryRuleDouble0 returns [String current=null]:
	{ newCompositeNode(grammarAccess.getDouble0Rule()); }
	iv_ruleDouble0=ruleDouble0
	{ $current=$iv_ruleDouble0.current.getText(); }
	EOF;

// Rule Double0
ruleDouble0 returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	this_DOUBLE_0=RULE_DOUBLE
	{
		$current.merge(this_DOUBLE_0);
	}
	{
		newLeafNode(this_DOUBLE_0, grammarAccess.getDouble0Access().getDOUBLETerminalRuleCall());
	}
;

// Rule ParameterType
ruleParameterType returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0=DigitZero
			{
				$current = grammarAccess.getParameterTypeAccess().getLinkEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getParameterTypeAccess().getLinkEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1=DigitOne
			{
				$current = grammarAccess.getParameterTypeAccess().getStringEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getParameterTypeAccess().getStringEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2=DigitTwo
			{
				$current = grammarAccess.getParameterTypeAccess().getPoseEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getParameterTypeAccess().getPoseEnumLiteralDeclaration_2());
			}
		)
	)
;
