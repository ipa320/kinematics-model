/*
 * generated by Xtext 2.26.0
 */
grammar DebugInternalKinematics;

// Rule Robot
ruleRobot:
	'Robot'
	'{'
	'}'
;

// Rule Axis
ruleAxis:
	'Axis'
	'{'
	(
		'xyz'
		ruleEString
	)?
	'}'
;

// Rule Pose
rulePose:
	'Pose'
	'{'
	(
		'rpy'
		ruleEString
	)?
	(
		'xyz'
		ruleEString
	)?
	'}'
;

// Rule Limit
ruleLimit:
	'Limit'
	'{'
	(
		'effort'
		ruleDouble0
	)?
	(
		'lower'
		ruleDouble0
	)?
	(
		'upper'
		ruleDouble0
	)?
	(
		'velocity'
		ruleDouble0
	)?
	'}'
;

// Rule Inertial
ruleInertial:
	'Inertial'
	'{'
	(
		'origin'
		rulePose
	)?
	(
		'mass'
		ruleMass
	)?
	(
		'inertia'
		ruleInertia
	)?
	'}'
;

// Rule Visual
ruleVisual:
	'Visual'
	'{'
	(
		'origin'
		rulePose
	)?
	'geometry'
	ruleGeometry
	'}'
;

// Rule Collision
ruleCollision:
	'Collision'
	'{'
	(
		'origin'
		rulePose
	)?
	'geometry'
	ruleGeometry
	'}'
;

// Rule Mass
ruleMass:
	'Mass'
	'{'
	(
		'value'
		ruleDouble0
	)?
	'}'
;

// Rule Inertia
ruleInertia:
	'Inertia'
	'{'
	(
		'ixx'
		ruleDouble0
	)?
	(
		'ixy'
		ruleDouble0
	)?
	(
		'ixz'
		ruleDouble0
	)?
	(
		'iyy'
		ruleDouble0
	)?
	(
		'iyz'
		ruleDouble0
	)?
	(
		'izz'
		ruleDouble0
	)?
	'}'
;

// Rule Geometry
ruleGeometry:
	'Geometry'
	'{'
	(
		'box'
		ruleBox
	)?
	(
		'cylinder'
		ruleCylinder
	)?
	(
		'sphere'
		ruleSphere
	)?
	(
		'mesh'
		ruleMesh
	)?
	'}'
;

// Rule Box
ruleBox:
	'Box'
	'{'
	(
		'size'
		ruleEString
	)?
	'}'
;

// Rule Cylinder
ruleCylinder:
	'Cylinder'
	'{'
	'length'
	ruleDouble0
	'radius'
	ruleDouble0
	'}'
;

// Rule Sphere
ruleSphere:
	'Sphere'
	'{'
	'radius'
	ruleDouble0
	'}'
;

// Rule Mesh
ruleMesh:
	'Mesh'
	'{'
	'filename'
	RULE_STRING
	(
		'scale'
		ruleEString
	)?
	'}'
;

// Rule EString
ruleEString:
	RULE_STRING
;

// Rule Double0
ruleDouble0:
	RULE_DOUBLE
;

fragment RULE_DIGIT : '0'..'9';

RULE_BOOLEAN : ('true'|'false');

RULE_DOUBLE : RULE_DECINT ('.' RULE_DIGIT*|('.' RULE_DIGIT*)? ('E'|'e') ('-'|'+')? RULE_DECINT);

RULE_DECINT : ('0'|'1'..'9' RULE_DIGIT*|'-' '0'..'9' RULE_DIGIT*);

RULE_JOINTTYPE : ('revolute'|'continuous'|'prismatic'|'fixed'|'floating'|'planar');

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/' {skip();};

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')? {skip();};

RULE_WS : (' '|'\t'|'\r'|'\n')+ {skip();};

RULE_ANY_OTHER : .;
