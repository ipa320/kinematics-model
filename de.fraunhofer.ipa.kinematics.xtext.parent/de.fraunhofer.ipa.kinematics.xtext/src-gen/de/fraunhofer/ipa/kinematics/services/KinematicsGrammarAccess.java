/*
 * generated by Xtext 2.25.0
 */
package de.fraunhofer.ipa.kinematics.services;

import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.List;
import org.eclipse.xtext.Action;
import org.eclipse.xtext.Alternatives;
import org.eclipse.xtext.Assignment;
import org.eclipse.xtext.CrossReference;
import org.eclipse.xtext.Grammar;
import org.eclipse.xtext.GrammarUtil;
import org.eclipse.xtext.Group;
import org.eclipse.xtext.Keyword;
import org.eclipse.xtext.ParserRule;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.TerminalRule;
import org.eclipse.xtext.common.services.TerminalsGrammarAccess;
import org.eclipse.xtext.service.AbstractElementFinder;
import org.eclipse.xtext.service.GrammarProvider;

@Singleton
public class KinematicsGrammarAccess extends AbstractElementFinder.AbstractGrammarElementFinder {
	
	public class ComponentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.fraunhofer.ipa.kinematics.Kinematics.Component");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cComponentAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cComponentKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final RuleCall cBEGINTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final Keyword cNameKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cNameAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cNameEStringParserRuleCall_4_0 = (RuleCall)cNameAssignment_4.eContents().get(0);
		private final Keyword cVersionKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cVersionAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cVersionEStringParserRuleCall_6_0 = (RuleCall)cVersionAssignment_6.eContents().get(0);
		private final Group cGroup_7 = (Group)cGroup.eContents().get(7);
		private final Keyword cCategoryKeyword_7_0 = (Keyword)cGroup_7.eContents().get(0);
		private final Assignment cCategoryAssignment_7_1 = (Assignment)cGroup_7.eContents().get(1);
		private final RuleCall cCategoryCATEGORYTerminalRuleCall_7_1_0 = (RuleCall)cCategoryAssignment_7_1.eContents().get(0);
		private final Group cGroup_8 = (Group)cGroup.eContents().get(8);
		private final Keyword cGitRepoKeyword_8_0 = (Keyword)cGroup_8.eContents().get(0);
		private final Assignment cGitRepoAssignment_8_1 = (Assignment)cGroup_8.eContents().get(1);
		private final RuleCall cGitRepoGitRepoParserRuleCall_8_1_0 = (RuleCall)cGitRepoAssignment_8_1.eContents().get(0);
		private final Alternatives cAlternatives_9 = (Alternatives)cGroup.eContents().get(9);
		private final Group cGroup_9_0 = (Group)cAlternatives_9.eContents().get(0);
		private final Keyword cBaseAttachmentKeyword_9_0_0 = (Keyword)cGroup_9_0.eContents().get(0);
		private final Assignment cBaseAttachmentAssignment_9_0_1 = (Assignment)cGroup_9_0.eContents().get(1);
		private final RuleCall cBaseAttachmentBaseAttachmentParserRuleCall_9_0_1_0 = (RuleCall)cBaseAttachmentAssignment_9_0_1.eContents().get(0);
		private final Assignment cBaseAttachmentAssignment_9_1 = (Assignment)cAlternatives_9.eContents().get(1);
		private final RuleCall cBaseAttachmentBaseAttachmentParserRuleCall_9_1_0 = (RuleCall)cBaseAttachmentAssignment_9_1.eContents().get(0);
		private final Alternatives cAlternatives_10 = (Alternatives)cGroup.eContents().get(10);
		private final Group cGroup_10_0 = (Group)cAlternatives_10.eContents().get(0);
		private final Keyword cFlangeAttachmentKeyword_10_0_0 = (Keyword)cGroup_10_0.eContents().get(0);
		private final Assignment cFlangeAttachmentAssignment_10_0_1 = (Assignment)cGroup_10_0.eContents().get(1);
		private final RuleCall cFlangeAttachmentFlangeAttachmentParserRuleCall_10_0_1_0 = (RuleCall)cFlangeAttachmentAssignment_10_0_1.eContents().get(0);
		private final Assignment cFlangeAttachmentAssignment_10_1 = (Assignment)cAlternatives_10.eContents().get(1);
		private final RuleCall cFlangeAttachmentFlangeAttachmentParserRuleCall_10_1_0 = (RuleCall)cFlangeAttachmentAssignment_10_1.eContents().get(0);
		private final Alternatives cAlternatives_11 = (Alternatives)cGroup.eContents().get(11);
		private final Group cGroup_11_0 = (Group)cAlternatives_11.eContents().get(0);
		private final Keyword cComponentKeyword_11_0_0 = (Keyword)cGroup_11_0.eContents().get(0);
		private final Assignment cComponentAssignment_11_0_1 = (Assignment)cGroup_11_0.eContents().get(1);
		private final RuleCall cComponentConfiguredComponentParserRuleCall_11_0_1_0 = (RuleCall)cComponentAssignment_11_0_1.eContents().get(0);
		private final Assignment cComponentAssignment_11_1 = (Assignment)cAlternatives_11.eContents().get(1);
		private final RuleCall cComponentConfiguredComponentParserRuleCall_11_1_0 = (RuleCall)cComponentAssignment_11_1.eContents().get(0);
		private final Alternatives cAlternatives_12 = (Alternatives)cGroup.eContents().get(12);
		private final Group cGroup_12_0 = (Group)cAlternatives_12.eContents().get(0);
		private final Keyword cConnectionKeyword_12_0_0 = (Keyword)cGroup_12_0.eContents().get(0);
		private final Assignment cConnectionAssignment_12_0_1 = (Assignment)cGroup_12_0.eContents().get(1);
		private final RuleCall cConnectionConnectionParserRuleCall_12_0_1_0 = (RuleCall)cConnectionAssignment_12_0_1.eContents().get(0);
		private final Assignment cConnectionAssignment_12_1 = (Assignment)cAlternatives_12.eContents().get(1);
		private final RuleCall cConnectionConnectionParserRuleCall_12_1_0 = (RuleCall)cConnectionAssignment_12_1.eContents().get(0);
		private final Alternatives cAlternatives_13 = (Alternatives)cGroup.eContents().get(13);
		private final Group cGroup_13_0 = (Group)cAlternatives_13.eContents().get(0);
		private final Keyword cGroupKeyword_13_0_0 = (Keyword)cGroup_13_0.eContents().get(0);
		private final Assignment cGroupAssignment_13_0_1 = (Assignment)cGroup_13_0.eContents().get(1);
		private final RuleCall cGroupGroupParserRuleCall_13_0_1_0 = (RuleCall)cGroupAssignment_13_0_1.eContents().get(0);
		private final Assignment cGroupAssignment_13_1 = (Assignment)cAlternatives_13.eContents().get(1);
		private final RuleCall cGroupGroupParserRuleCall_13_1_0 = (RuleCall)cGroupAssignment_13_1.eContents().get(0);
		private final Alternatives cAlternatives_14 = (Alternatives)cGroup.eContents().get(14);
		private final Group cGroup_14_0 = (Group)cAlternatives_14.eContents().get(0);
		private final Keyword cLinkKeyword_14_0_0 = (Keyword)cGroup_14_0.eContents().get(0);
		private final Assignment cLinkAssignment_14_0_1 = (Assignment)cGroup_14_0.eContents().get(1);
		private final RuleCall cLinkLinkParserRuleCall_14_0_1_0 = (RuleCall)cLinkAssignment_14_0_1.eContents().get(0);
		private final Assignment cLinkAssignment_14_1 = (Assignment)cAlternatives_14.eContents().get(1);
		private final RuleCall cLinkLinkParserRuleCall_14_1_0 = (RuleCall)cLinkAssignment_14_1.eContents().get(0);
		private final Alternatives cAlternatives_15 = (Alternatives)cGroup.eContents().get(15);
		private final Group cGroup_15_0 = (Group)cAlternatives_15.eContents().get(0);
		private final Keyword cJointKeyword_15_0_0 = (Keyword)cGroup_15_0.eContents().get(0);
		private final Assignment cJointAssignment_15_0_1 = (Assignment)cGroup_15_0.eContents().get(1);
		private final RuleCall cJointJointParserRuleCall_15_0_1_0 = (RuleCall)cJointAssignment_15_0_1.eContents().get(0);
		private final Assignment cJointAssignment_15_1 = (Assignment)cAlternatives_15.eContents().get(1);
		private final RuleCall cJointJointParserRuleCall_15_1_0 = (RuleCall)cJointAssignment_15_1.eContents().get(0);
		private final RuleCall cENDTerminalRuleCall_16 = (RuleCall)cGroup.eContents().get(16);
		
		//Component returns Component:
		//    {Component}
		//    'component:'
		//    BEGIN
		//        'name:' name=EString
		//        'version:' version=EString
		//        ('category:' category=CATEGORY)?
		//        ('gitRepo:' gitRepo=GitRepo)?
		//        ('baseAttachment:'
		//            (baseAttachment+=BaseAttachment)* | baseAttachment+=BaseAttachment
		//        )?
		//        ('flangeAttachment:'
		//            (flangeAttachment+=FlangeAttachment)* | flangeAttachment+=FlangeAttachment
		//        )?
		//        ('component:'
		//            (component+=ConfiguredComponent)* | component+=ConfiguredComponent
		//        )?
		//        ('connection:'
		//            (connection+=Connection)* | connection+=Connection
		//        )?
		//        ('group:'
		//            (group+=Group)* | group+=Group
		//        )?
		//        ('link:'
		//            (link+=Link)* | link+=Link
		//        )?
		//        ('joint:'
		//            (joint+=Joint)* | joint+=Joint
		//        )?
		//    END;
		@Override public ParserRule getRule() { return rule; }
		
		//{Component}
		//'component:'
		//BEGIN
		//    'name:' name=EString
		//    'version:' version=EString
		//    ('category:' category=CATEGORY)?
		//    ('gitRepo:' gitRepo=GitRepo)?
		//    ('baseAttachment:'
		//        (baseAttachment+=BaseAttachment)* | baseAttachment+=BaseAttachment
		//    )?
		//    ('flangeAttachment:'
		//        (flangeAttachment+=FlangeAttachment)* | flangeAttachment+=FlangeAttachment
		//    )?
		//    ('component:'
		//        (component+=ConfiguredComponent)* | component+=ConfiguredComponent
		//    )?
		//    ('connection:'
		//        (connection+=Connection)* | connection+=Connection
		//    )?
		//    ('group:'
		//        (group+=Group)* | group+=Group
		//    )?
		//    ('link:'
		//        (link+=Link)* | link+=Link
		//    )?
		//    ('joint:'
		//        (joint+=Joint)* | joint+=Joint
		//    )?
		//END
		public Group getGroup() { return cGroup; }
		
		//{Component}
		public Action getComponentAction_0() { return cComponentAction_0; }
		
		//'component:'
		public Keyword getComponentKeyword_1() { return cComponentKeyword_1; }
		
		//BEGIN
		public RuleCall getBEGINTerminalRuleCall_2() { return cBEGINTerminalRuleCall_2; }
		
		//'name:'
		public Keyword getNameKeyword_3() { return cNameKeyword_3; }
		
		//name=EString
		public Assignment getNameAssignment_4() { return cNameAssignment_4; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_4_0() { return cNameEStringParserRuleCall_4_0; }
		
		//'version:'
		public Keyword getVersionKeyword_5() { return cVersionKeyword_5; }
		
		//version=EString
		public Assignment getVersionAssignment_6() { return cVersionAssignment_6; }
		
		//EString
		public RuleCall getVersionEStringParserRuleCall_6_0() { return cVersionEStringParserRuleCall_6_0; }
		
		//('category:' category=CATEGORY)?
		public Group getGroup_7() { return cGroup_7; }
		
		//'category:'
		public Keyword getCategoryKeyword_7_0() { return cCategoryKeyword_7_0; }
		
		//category=CATEGORY
		public Assignment getCategoryAssignment_7_1() { return cCategoryAssignment_7_1; }
		
		//CATEGORY
		public RuleCall getCategoryCATEGORYTerminalRuleCall_7_1_0() { return cCategoryCATEGORYTerminalRuleCall_7_1_0; }
		
		//('gitRepo:' gitRepo=GitRepo)?
		public Group getGroup_8() { return cGroup_8; }
		
		//'gitRepo:'
		public Keyword getGitRepoKeyword_8_0() { return cGitRepoKeyword_8_0; }
		
		//gitRepo=GitRepo
		public Assignment getGitRepoAssignment_8_1() { return cGitRepoAssignment_8_1; }
		
		//GitRepo
		public RuleCall getGitRepoGitRepoParserRuleCall_8_1_0() { return cGitRepoGitRepoParserRuleCall_8_1_0; }
		
		//('baseAttachment:'
		//    (baseAttachment+=BaseAttachment)* | baseAttachment+=BaseAttachment
		//)?
		public Alternatives getAlternatives_9() { return cAlternatives_9; }
		
		//'baseAttachment:'
		//            (baseAttachment+=BaseAttachment)*
		public Group getGroup_9_0() { return cGroup_9_0; }
		
		//'baseAttachment:'
		public Keyword getBaseAttachmentKeyword_9_0_0() { return cBaseAttachmentKeyword_9_0_0; }
		
		//(baseAttachment+=BaseAttachment)*
		public Assignment getBaseAttachmentAssignment_9_0_1() { return cBaseAttachmentAssignment_9_0_1; }
		
		//BaseAttachment
		public RuleCall getBaseAttachmentBaseAttachmentParserRuleCall_9_0_1_0() { return cBaseAttachmentBaseAttachmentParserRuleCall_9_0_1_0; }
		
		//baseAttachment+=BaseAttachment
		public Assignment getBaseAttachmentAssignment_9_1() { return cBaseAttachmentAssignment_9_1; }
		
		//BaseAttachment
		public RuleCall getBaseAttachmentBaseAttachmentParserRuleCall_9_1_0() { return cBaseAttachmentBaseAttachmentParserRuleCall_9_1_0; }
		
		//('flangeAttachment:'
		//    (flangeAttachment+=FlangeAttachment)* | flangeAttachment+=FlangeAttachment
		//)?
		public Alternatives getAlternatives_10() { return cAlternatives_10; }
		
		//'flangeAttachment:'
		//            (flangeAttachment+=FlangeAttachment)*
		public Group getGroup_10_0() { return cGroup_10_0; }
		
		//'flangeAttachment:'
		public Keyword getFlangeAttachmentKeyword_10_0_0() { return cFlangeAttachmentKeyword_10_0_0; }
		
		//(flangeAttachment+=FlangeAttachment)*
		public Assignment getFlangeAttachmentAssignment_10_0_1() { return cFlangeAttachmentAssignment_10_0_1; }
		
		//FlangeAttachment
		public RuleCall getFlangeAttachmentFlangeAttachmentParserRuleCall_10_0_1_0() { return cFlangeAttachmentFlangeAttachmentParserRuleCall_10_0_1_0; }
		
		//flangeAttachment+=FlangeAttachment
		public Assignment getFlangeAttachmentAssignment_10_1() { return cFlangeAttachmentAssignment_10_1; }
		
		//FlangeAttachment
		public RuleCall getFlangeAttachmentFlangeAttachmentParserRuleCall_10_1_0() { return cFlangeAttachmentFlangeAttachmentParserRuleCall_10_1_0; }
		
		//('component:'
		//    (component+=ConfiguredComponent)* | component+=ConfiguredComponent
		//)?
		public Alternatives getAlternatives_11() { return cAlternatives_11; }
		
		//'component:'
		//            (component+=ConfiguredComponent)*
		public Group getGroup_11_0() { return cGroup_11_0; }
		
		//'component:'
		public Keyword getComponentKeyword_11_0_0() { return cComponentKeyword_11_0_0; }
		
		//(component+=ConfiguredComponent)*
		public Assignment getComponentAssignment_11_0_1() { return cComponentAssignment_11_0_1; }
		
		//ConfiguredComponent
		public RuleCall getComponentConfiguredComponentParserRuleCall_11_0_1_0() { return cComponentConfiguredComponentParserRuleCall_11_0_1_0; }
		
		//component+=ConfiguredComponent
		public Assignment getComponentAssignment_11_1() { return cComponentAssignment_11_1; }
		
		//ConfiguredComponent
		public RuleCall getComponentConfiguredComponentParserRuleCall_11_1_0() { return cComponentConfiguredComponentParserRuleCall_11_1_0; }
		
		//('connection:'
		//    (connection+=Connection)* | connection+=Connection
		//)?
		public Alternatives getAlternatives_12() { return cAlternatives_12; }
		
		//'connection:'
		//            (connection+=Connection)*
		public Group getGroup_12_0() { return cGroup_12_0; }
		
		//'connection:'
		public Keyword getConnectionKeyword_12_0_0() { return cConnectionKeyword_12_0_0; }
		
		//(connection+=Connection)*
		public Assignment getConnectionAssignment_12_0_1() { return cConnectionAssignment_12_0_1; }
		
		//Connection
		public RuleCall getConnectionConnectionParserRuleCall_12_0_1_0() { return cConnectionConnectionParserRuleCall_12_0_1_0; }
		
		//connection+=Connection
		public Assignment getConnectionAssignment_12_1() { return cConnectionAssignment_12_1; }
		
		//Connection
		public RuleCall getConnectionConnectionParserRuleCall_12_1_0() { return cConnectionConnectionParserRuleCall_12_1_0; }
		
		//('group:'
		//    (group+=Group)* | group+=Group
		//)?
		public Alternatives getAlternatives_13() { return cAlternatives_13; }
		
		//'group:'
		//            (group+=Group)*
		public Group getGroup_13_0() { return cGroup_13_0; }
		
		//'group:'
		public Keyword getGroupKeyword_13_0_0() { return cGroupKeyword_13_0_0; }
		
		//(group+=Group)*
		public Assignment getGroupAssignment_13_0_1() { return cGroupAssignment_13_0_1; }
		
		//Group
		public RuleCall getGroupGroupParserRuleCall_13_0_1_0() { return cGroupGroupParserRuleCall_13_0_1_0; }
		
		//group+=Group
		public Assignment getGroupAssignment_13_1() { return cGroupAssignment_13_1; }
		
		//Group
		public RuleCall getGroupGroupParserRuleCall_13_1_0() { return cGroupGroupParserRuleCall_13_1_0; }
		
		//('link:'
		//    (link+=Link)* | link+=Link
		//)?
		public Alternatives getAlternatives_14() { return cAlternatives_14; }
		
		//'link:'
		//            (link+=Link)*
		public Group getGroup_14_0() { return cGroup_14_0; }
		
		//'link:'
		public Keyword getLinkKeyword_14_0_0() { return cLinkKeyword_14_0_0; }
		
		//(link+=Link)*
		public Assignment getLinkAssignment_14_0_1() { return cLinkAssignment_14_0_1; }
		
		//Link
		public RuleCall getLinkLinkParserRuleCall_14_0_1_0() { return cLinkLinkParserRuleCall_14_0_1_0; }
		
		//link+=Link
		public Assignment getLinkAssignment_14_1() { return cLinkAssignment_14_1; }
		
		//Link
		public RuleCall getLinkLinkParserRuleCall_14_1_0() { return cLinkLinkParserRuleCall_14_1_0; }
		
		//('joint:'
		//    (joint+=Joint)* | joint+=Joint
		//)?
		public Alternatives getAlternatives_15() { return cAlternatives_15; }
		
		//'joint:'
		//            (joint+=Joint)*
		public Group getGroup_15_0() { return cGroup_15_0; }
		
		//'joint:'
		public Keyword getJointKeyword_15_0_0() { return cJointKeyword_15_0_0; }
		
		//(joint+=Joint)*
		public Assignment getJointAssignment_15_0_1() { return cJointAssignment_15_0_1; }
		
		//Joint
		public RuleCall getJointJointParserRuleCall_15_0_1_0() { return cJointJointParserRuleCall_15_0_1_0; }
		
		//joint+=Joint
		public Assignment getJointAssignment_15_1() { return cJointAssignment_15_1; }
		
		//Joint
		public RuleCall getJointJointParserRuleCall_15_1_0() { return cJointJointParserRuleCall_15_1_0; }
		
		//END
		public RuleCall getENDTerminalRuleCall_16() { return cENDTerminalRuleCall_16; }
	}
	public class ConfiguredComponentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.fraunhofer.ipa.kinematics.Kinematics.ConfiguredComponent");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cHyphenMinusKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cNameKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameEStringParserRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final RuleCall cBEGINTerminalRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		private final Keyword cTypeKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cTypeAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final CrossReference cTypeComponentCrossReference_5_0 = (CrossReference)cTypeAssignment_5.eContents().get(0);
		private final RuleCall cTypeComponentEStringParserRuleCall_5_0_1 = (RuleCall)cTypeComponentCrossReference_5_0.eContents().get(1);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cPrefixKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Assignment cPrefixAssignment_6_1 = (Assignment)cGroup_6.eContents().get(1);
		private final RuleCall cPrefixEStringParserRuleCall_6_1_0 = (RuleCall)cPrefixAssignment_6_1.eContents().get(0);
		private final RuleCall cENDTerminalRuleCall_7 = (RuleCall)cGroup.eContents().get(7);
		
		//ConfiguredComponent returns ConfiguredComponent:
		//    '-' 'name:' name=EString
		//    BEGIN
		//        'type:' type=[Component|EString]
		//        ('prefix:' prefix=EString)?
		//    END
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'-' 'name:' name=EString
		//BEGIN
		//    'type:' type=[Component|EString]
		//    ('prefix:' prefix=EString)?
		//END
		public Group getGroup() { return cGroup; }
		
		//'-'
		public Keyword getHyphenMinusKeyword_0() { return cHyphenMinusKeyword_0; }
		
		//'name:'
		public Keyword getNameKeyword_1() { return cNameKeyword_1; }
		
		//name=EString
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_2_0() { return cNameEStringParserRuleCall_2_0; }
		
		//BEGIN
		public RuleCall getBEGINTerminalRuleCall_3() { return cBEGINTerminalRuleCall_3; }
		
		//'type:'
		public Keyword getTypeKeyword_4() { return cTypeKeyword_4; }
		
		//type=[Component|EString]
		public Assignment getTypeAssignment_5() { return cTypeAssignment_5; }
		
		//[Component|EString]
		public CrossReference getTypeComponentCrossReference_5_0() { return cTypeComponentCrossReference_5_0; }
		
		//EString
		public RuleCall getTypeComponentEStringParserRuleCall_5_0_1() { return cTypeComponentEStringParserRuleCall_5_0_1; }
		
		//('prefix:' prefix=EString)?
		public Group getGroup_6() { return cGroup_6; }
		
		//'prefix:'
		public Keyword getPrefixKeyword_6_0() { return cPrefixKeyword_6_0; }
		
		//prefix=EString
		public Assignment getPrefixAssignment_6_1() { return cPrefixAssignment_6_1; }
		
		//EString
		public RuleCall getPrefixEStringParserRuleCall_6_1_0() { return cPrefixEStringParserRuleCall_6_1_0; }
		
		//END
		public RuleCall getENDTerminalRuleCall_7() { return cENDTerminalRuleCall_7; }
	}
	public class GitRepoElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.fraunhofer.ipa.kinematics.Kinematics.GitRepo");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cBEGINTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Keyword cDistroKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cDistroAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cDistroEStringParserRuleCall_2_0 = (RuleCall)cDistroAssignment_2.eContents().get(0);
		private final Keyword cRepoKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cRepoAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cRepoEStringParserRuleCall_4_0 = (RuleCall)cRepoAssignment_4.eContents().get(0);
		private final Keyword cBranchKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cBranchAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cBranchEStringParserRuleCall_6_0 = (RuleCall)cBranchAssignment_6.eContents().get(0);
		private final Keyword cPackageKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Assignment cPackageAssignment_8 = (Assignment)cGroup.eContents().get(8);
		private final RuleCall cPackageEStringParserRuleCall_8_0 = (RuleCall)cPackageAssignment_8.eContents().get(0);
		private final Keyword cVersionKeyword_9 = (Keyword)cGroup.eContents().get(9);
		private final Assignment cVersionAssignment_10 = (Assignment)cGroup.eContents().get(10);
		private final RuleCall cVersionEStringParserRuleCall_10_0 = (RuleCall)cVersionAssignment_10.eContents().get(0);
		private final RuleCall cENDTerminalRuleCall_11 = (RuleCall)cGroup.eContents().get(11);
		
		//GitRepo returns GitRepo:
		//    BEGIN
		//        'distro:' distro=EString
		//        'repo:' repo=EString
		//        'branch:' branch=EString
		//        'package:' package=EString
		//        'version:' version=EString
		//    END;
		@Override public ParserRule getRule() { return rule; }
		
		//BEGIN
		//    'distro:' distro=EString
		//    'repo:' repo=EString
		//    'branch:' branch=EString
		//    'package:' package=EString
		//    'version:' version=EString
		//END
		public Group getGroup() { return cGroup; }
		
		//BEGIN
		public RuleCall getBEGINTerminalRuleCall_0() { return cBEGINTerminalRuleCall_0; }
		
		//'distro:'
		public Keyword getDistroKeyword_1() { return cDistroKeyword_1; }
		
		//distro=EString
		public Assignment getDistroAssignment_2() { return cDistroAssignment_2; }
		
		//EString
		public RuleCall getDistroEStringParserRuleCall_2_0() { return cDistroEStringParserRuleCall_2_0; }
		
		//'repo:'
		public Keyword getRepoKeyword_3() { return cRepoKeyword_3; }
		
		//repo=EString
		public Assignment getRepoAssignment_4() { return cRepoAssignment_4; }
		
		//EString
		public RuleCall getRepoEStringParserRuleCall_4_0() { return cRepoEStringParserRuleCall_4_0; }
		
		//'branch:'
		public Keyword getBranchKeyword_5() { return cBranchKeyword_5; }
		
		//branch=EString
		public Assignment getBranchAssignment_6() { return cBranchAssignment_6; }
		
		//EString
		public RuleCall getBranchEStringParserRuleCall_6_0() { return cBranchEStringParserRuleCall_6_0; }
		
		//'package:'
		public Keyword getPackageKeyword_7() { return cPackageKeyword_7; }
		
		//package=EString
		public Assignment getPackageAssignment_8() { return cPackageAssignment_8; }
		
		//EString
		public RuleCall getPackageEStringParserRuleCall_8_0() { return cPackageEStringParserRuleCall_8_0; }
		
		//'version:'
		public Keyword getVersionKeyword_9() { return cVersionKeyword_9; }
		
		//version=EString
		public Assignment getVersionAssignment_10() { return cVersionAssignment_10; }
		
		//EString
		public RuleCall getVersionEStringParserRuleCall_10_0() { return cVersionEStringParserRuleCall_10_0; }
		
		//END
		public RuleCall getENDTerminalRuleCall_11() { return cENDTerminalRuleCall_11; }
	}
	public class GroupElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.fraunhofer.ipa.kinematics.Kinematics.Group");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cHyphenMinusKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cNameKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameEStringParserRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final RuleCall cBEGINTerminalRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		private final Keyword cBaseLinkKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cBaseLinkAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final CrossReference cBaseLinkLinkCrossReference_5_0 = (CrossReference)cBaseLinkAssignment_5.eContents().get(0);
		private final RuleCall cBaseLinkLinkEStringParserRuleCall_5_0_1 = (RuleCall)cBaseLinkLinkCrossReference_5_0.eContents().get(1);
		private final Keyword cEndLinkKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Assignment cEndLinkAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final CrossReference cEndLinkLinkCrossReference_7_0 = (CrossReference)cEndLinkAssignment_7.eContents().get(0);
		private final RuleCall cEndLinkLinkEStringParserRuleCall_7_0_1 = (RuleCall)cEndLinkLinkCrossReference_7_0.eContents().get(1);
		private final Group cGroup_8 = (Group)cGroup.eContents().get(8);
		private final Keyword cRos2_controlKeyword_8_0 = (Keyword)cGroup_8.eContents().get(0);
		private final Assignment cRos2_controlAssignment_8_1 = (Assignment)cGroup_8.eContents().get(1);
		private final RuleCall cRos2_controlEStringParserRuleCall_8_1_0 = (RuleCall)cRos2_controlAssignment_8_1.eContents().get(0);
		private final RuleCall cENDTerminalRuleCall_9 = (RuleCall)cGroup.eContents().get(9);
		
		//Group returns Group:
		//    '-' 'name:' name=EString
		//    BEGIN
		//        'baseLink:' baseLink=[urdf::Link|EString]
		//        'endLink:' endLink=[urdf::Link|EString]
		//        ('ros2_control:' ros2_control=EString)?
		//    END
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'-' 'name:' name=EString
		//BEGIN
		//    'baseLink:' baseLink=[urdf::Link|EString]
		//    'endLink:' endLink=[urdf::Link|EString]
		//    ('ros2_control:' ros2_control=EString)?
		//END
		public Group getGroup() { return cGroup; }
		
		//'-'
		public Keyword getHyphenMinusKeyword_0() { return cHyphenMinusKeyword_0; }
		
		//'name:'
		public Keyword getNameKeyword_1() { return cNameKeyword_1; }
		
		//name=EString
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_2_0() { return cNameEStringParserRuleCall_2_0; }
		
		//BEGIN
		public RuleCall getBEGINTerminalRuleCall_3() { return cBEGINTerminalRuleCall_3; }
		
		//'baseLink:'
		public Keyword getBaseLinkKeyword_4() { return cBaseLinkKeyword_4; }
		
		//baseLink=[urdf::Link|EString]
		public Assignment getBaseLinkAssignment_5() { return cBaseLinkAssignment_5; }
		
		//[urdf::Link|EString]
		public CrossReference getBaseLinkLinkCrossReference_5_0() { return cBaseLinkLinkCrossReference_5_0; }
		
		//EString
		public RuleCall getBaseLinkLinkEStringParserRuleCall_5_0_1() { return cBaseLinkLinkEStringParserRuleCall_5_0_1; }
		
		//'endLink:'
		public Keyword getEndLinkKeyword_6() { return cEndLinkKeyword_6; }
		
		//endLink=[urdf::Link|EString]
		public Assignment getEndLinkAssignment_7() { return cEndLinkAssignment_7; }
		
		//[urdf::Link|EString]
		public CrossReference getEndLinkLinkCrossReference_7_0() { return cEndLinkLinkCrossReference_7_0; }
		
		//EString
		public RuleCall getEndLinkLinkEStringParserRuleCall_7_0_1() { return cEndLinkLinkEStringParserRuleCall_7_0_1; }
		
		//('ros2_control:' ros2_control=EString)?
		public Group getGroup_8() { return cGroup_8; }
		
		//'ros2_control:'
		public Keyword getRos2_controlKeyword_8_0() { return cRos2_controlKeyword_8_0; }
		
		//ros2_control=EString
		public Assignment getRos2_controlAssignment_8_1() { return cRos2_controlAssignment_8_1; }
		
		//EString
		public RuleCall getRos2_controlEStringParserRuleCall_8_1_0() { return cRos2_controlEStringParserRuleCall_8_1_0; }
		
		//END
		public RuleCall getENDTerminalRuleCall_9() { return cENDTerminalRuleCall_9; }
	}
	public class BaseAttachmentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.fraunhofer.ipa.kinematics.Kinematics.BaseAttachment");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cHyphenMinusKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cNameKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameEStringParserRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final RuleCall cBEGINTerminalRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		private final Keyword cOriginKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cOriginAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cOriginPoseParserRuleCall_5_0 = (RuleCall)cOriginAssignment_5.eContents().get(0);
		private final Keyword cParentKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Assignment cParentAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final CrossReference cParentLinkCrossReference_7_0 = (CrossReference)cParentAssignment_7.eContents().get(0);
		private final RuleCall cParentLinkEStringParserRuleCall_7_0_1 = (RuleCall)cParentLinkCrossReference_7_0.eContents().get(1);
		private final RuleCall cENDTerminalRuleCall_8 = (RuleCall)cGroup.eContents().get(8);
		
		//BaseAttachment returns BaseAttachment:
		//    '-' 'name:' name=EString
		//    BEGIN
		//        'origin:' origin=Pose
		//        'parent:' parent=[urdf::Link|EString]
		//    END
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'-' 'name:' name=EString
		//BEGIN
		//    'origin:' origin=Pose
		//    'parent:' parent=[urdf::Link|EString]
		//END
		public Group getGroup() { return cGroup; }
		
		//'-'
		public Keyword getHyphenMinusKeyword_0() { return cHyphenMinusKeyword_0; }
		
		//'name:'
		public Keyword getNameKeyword_1() { return cNameKeyword_1; }
		
		//name=EString
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_2_0() { return cNameEStringParserRuleCall_2_0; }
		
		//BEGIN
		public RuleCall getBEGINTerminalRuleCall_3() { return cBEGINTerminalRuleCall_3; }
		
		//'origin:'
		public Keyword getOriginKeyword_4() { return cOriginKeyword_4; }
		
		//origin=Pose
		public Assignment getOriginAssignment_5() { return cOriginAssignment_5; }
		
		//Pose
		public RuleCall getOriginPoseParserRuleCall_5_0() { return cOriginPoseParserRuleCall_5_0; }
		
		//'parent:'
		public Keyword getParentKeyword_6() { return cParentKeyword_6; }
		
		//parent=[urdf::Link|EString]
		public Assignment getParentAssignment_7() { return cParentAssignment_7; }
		
		//[urdf::Link|EString]
		public CrossReference getParentLinkCrossReference_7_0() { return cParentLinkCrossReference_7_0; }
		
		//EString
		public RuleCall getParentLinkEStringParserRuleCall_7_0_1() { return cParentLinkEStringParserRuleCall_7_0_1; }
		
		//END
		public RuleCall getENDTerminalRuleCall_8() { return cENDTerminalRuleCall_8; }
	}
	public class FlangeAttachmentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.fraunhofer.ipa.kinematics.Kinematics.FlangeAttachment");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cHyphenMinusKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cNameKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameEStringParserRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final RuleCall cBEGINTerminalRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		private final Keyword cOriginKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cOriginAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cOriginPoseParserRuleCall_5_0 = (RuleCall)cOriginAssignment_5.eContents().get(0);
		private final Keyword cParentKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Assignment cParentAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final CrossReference cParentLinkCrossReference_7_0 = (CrossReference)cParentAssignment_7.eContents().get(0);
		private final RuleCall cParentLinkEStringParserRuleCall_7_0_1 = (RuleCall)cParentLinkCrossReference_7_0.eContents().get(1);
		private final RuleCall cENDTerminalRuleCall_8 = (RuleCall)cGroup.eContents().get(8);
		
		//FlangeAttachment returns FlangeAttachment:
		//    '-' 'name:' name=EString
		//    BEGIN
		//        'origin:' origin=Pose
		//        'parent:' parent=[urdf::Link|EString]
		//    END
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'-' 'name:' name=EString
		//BEGIN
		//    'origin:' origin=Pose
		//    'parent:' parent=[urdf::Link|EString]
		//END
		public Group getGroup() { return cGroup; }
		
		//'-'
		public Keyword getHyphenMinusKeyword_0() { return cHyphenMinusKeyword_0; }
		
		//'name:'
		public Keyword getNameKeyword_1() { return cNameKeyword_1; }
		
		//name=EString
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_2_0() { return cNameEStringParserRuleCall_2_0; }
		
		//BEGIN
		public RuleCall getBEGINTerminalRuleCall_3() { return cBEGINTerminalRuleCall_3; }
		
		//'origin:'
		public Keyword getOriginKeyword_4() { return cOriginKeyword_4; }
		
		//origin=Pose
		public Assignment getOriginAssignment_5() { return cOriginAssignment_5; }
		
		//Pose
		public RuleCall getOriginPoseParserRuleCall_5_0() { return cOriginPoseParserRuleCall_5_0; }
		
		//'parent:'
		public Keyword getParentKeyword_6() { return cParentKeyword_6; }
		
		//parent=[urdf::Link|EString]
		public Assignment getParentAssignment_7() { return cParentAssignment_7; }
		
		//[urdf::Link|EString]
		public CrossReference getParentLinkCrossReference_7_0() { return cParentLinkCrossReference_7_0; }
		
		//EString
		public RuleCall getParentLinkEStringParserRuleCall_7_0_1() { return cParentLinkEStringParserRuleCall_7_0_1; }
		
		//END
		public RuleCall getENDTerminalRuleCall_8() { return cENDTerminalRuleCall_8; }
	}
	public class ConnectionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.fraunhofer.ipa.kinematics.Kinematics.Connection");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cHyphenMinusKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cNameKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameEStringParserRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final RuleCall cBEGINTerminalRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		private final Keyword cBaseAttachmentKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cBaseAttachmentAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final CrossReference cBaseAttachmentBaseAttachmentCrossReference_5_0 = (CrossReference)cBaseAttachmentAssignment_5.eContents().get(0);
		private final RuleCall cBaseAttachmentBaseAttachmentEStringParserRuleCall_5_0_1 = (RuleCall)cBaseAttachmentBaseAttachmentCrossReference_5_0.eContents().get(1);
		private final Keyword cFlangeAttachmentKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Assignment cFlangeAttachmentAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final CrossReference cFlangeAttachmentFlangeAttachmentCrossReference_7_0 = (CrossReference)cFlangeAttachmentAssignment_7.eContents().get(0);
		private final RuleCall cFlangeAttachmentFlangeAttachmentEStringParserRuleCall_7_0_1 = (RuleCall)cFlangeAttachmentFlangeAttachmentCrossReference_7_0.eContents().get(1);
		private final RuleCall cENDTerminalRuleCall_8 = (RuleCall)cGroup.eContents().get(8);
		
		//Connection returns Connection:
		//    '-' 'name:' name=EString
		//    BEGIN
		//        'baseAttachment:' baseAttachment=[BaseAttachment|EString]
		//        'flangeAttachment:' flangeAttachment=[FlangeAttachment|EString]
		//    END
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'-' 'name:' name=EString
		//BEGIN
		//    'baseAttachment:' baseAttachment=[BaseAttachment|EString]
		//    'flangeAttachment:' flangeAttachment=[FlangeAttachment|EString]
		//END
		public Group getGroup() { return cGroup; }
		
		//'-'
		public Keyword getHyphenMinusKeyword_0() { return cHyphenMinusKeyword_0; }
		
		//'name:'
		public Keyword getNameKeyword_1() { return cNameKeyword_1; }
		
		//name=EString
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_2_0() { return cNameEStringParserRuleCall_2_0; }
		
		//BEGIN
		public RuleCall getBEGINTerminalRuleCall_3() { return cBEGINTerminalRuleCall_3; }
		
		//'baseAttachment:'
		public Keyword getBaseAttachmentKeyword_4() { return cBaseAttachmentKeyword_4; }
		
		//baseAttachment=[BaseAttachment|EString]
		public Assignment getBaseAttachmentAssignment_5() { return cBaseAttachmentAssignment_5; }
		
		//[BaseAttachment|EString]
		public CrossReference getBaseAttachmentBaseAttachmentCrossReference_5_0() { return cBaseAttachmentBaseAttachmentCrossReference_5_0; }
		
		//EString
		public RuleCall getBaseAttachmentBaseAttachmentEStringParserRuleCall_5_0_1() { return cBaseAttachmentBaseAttachmentEStringParserRuleCall_5_0_1; }
		
		//'flangeAttachment:'
		public Keyword getFlangeAttachmentKeyword_6() { return cFlangeAttachmentKeyword_6; }
		
		//flangeAttachment=[FlangeAttachment|EString]
		public Assignment getFlangeAttachmentAssignment_7() { return cFlangeAttachmentAssignment_7; }
		
		//[FlangeAttachment|EString]
		public CrossReference getFlangeAttachmentFlangeAttachmentCrossReference_7_0() { return cFlangeAttachmentFlangeAttachmentCrossReference_7_0; }
		
		//EString
		public RuleCall getFlangeAttachmentFlangeAttachmentEStringParserRuleCall_7_0_1() { return cFlangeAttachmentFlangeAttachmentEStringParserRuleCall_7_0_1; }
		
		//END
		public RuleCall getENDTerminalRuleCall_8() { return cENDTerminalRuleCall_8; }
	}
	public class JointElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.fraunhofer.ipa.kinematics.Kinematics.Joint");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cHyphenMinusKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cNameKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameEStringParserRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final RuleCall cBEGINTerminalRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cTypeKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cTypeAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cTypeJOINTTYPETerminalRuleCall_4_1_0 = (RuleCall)cTypeAssignment_4_1.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cParentKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cParentAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cParentParentParserRuleCall_5_1_0 = (RuleCall)cParentAssignment_5_1.eContents().get(0);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cChildKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Assignment cChildAssignment_6_1 = (Assignment)cGroup_6.eContents().get(1);
		private final RuleCall cChildChildParserRuleCall_6_1_0 = (RuleCall)cChildAssignment_6_1.eContents().get(0);
		private final Group cGroup_7 = (Group)cGroup.eContents().get(7);
		private final Keyword cOriginKeyword_7_0 = (Keyword)cGroup_7.eContents().get(0);
		private final Assignment cOriginAssignment_7_1 = (Assignment)cGroup_7.eContents().get(1);
		private final RuleCall cOriginPoseParserRuleCall_7_1_0 = (RuleCall)cOriginAssignment_7_1.eContents().get(0);
		private final Group cGroup_8 = (Group)cGroup.eContents().get(8);
		private final Keyword cAxisKeyword_8_0 = (Keyword)cGroup_8.eContents().get(0);
		private final Assignment cAxisAssignment_8_1 = (Assignment)cGroup_8.eContents().get(1);
		private final RuleCall cAxisAxisParserRuleCall_8_1_0 = (RuleCall)cAxisAssignment_8_1.eContents().get(0);
		private final Group cGroup_9 = (Group)cGroup.eContents().get(9);
		private final Keyword cLimitKeyword_9_0 = (Keyword)cGroup_9.eContents().get(0);
		private final Assignment cLimitAssignment_9_1 = (Assignment)cGroup_9.eContents().get(1);
		private final RuleCall cLimitLimitParserRuleCall_9_1_0 = (RuleCall)cLimitAssignment_9_1.eContents().get(0);
		private final RuleCall cENDTerminalRuleCall_10 = (RuleCall)cGroup.eContents().get(10);
		
		//Joint returns urdf::Joint:
		//    '-' 'name:' name=EString
		//    BEGIN
		//        ('type:' type=JOINTTYPE)
		//        ('parent:' parent=Parent)
		//        ('child:' child=Child)
		//        ('origin:' origin=Pose)
		//        ('axis:' axis=Axis)?
		//        ('limit:' limit=Limit)?
		//    END;
		@Override public ParserRule getRule() { return rule; }
		
		//'-' 'name:' name=EString
		//BEGIN
		//    ('type:' type=JOINTTYPE)
		//    ('parent:' parent=Parent)
		//    ('child:' child=Child)
		//    ('origin:' origin=Pose)
		//    ('axis:' axis=Axis)?
		//    ('limit:' limit=Limit)?
		//END
		public Group getGroup() { return cGroup; }
		
		//'-'
		public Keyword getHyphenMinusKeyword_0() { return cHyphenMinusKeyword_0; }
		
		//'name:'
		public Keyword getNameKeyword_1() { return cNameKeyword_1; }
		
		//name=EString
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_2_0() { return cNameEStringParserRuleCall_2_0; }
		
		//BEGIN
		public RuleCall getBEGINTerminalRuleCall_3() { return cBEGINTerminalRuleCall_3; }
		
		//('type:' type=JOINTTYPE)
		public Group getGroup_4() { return cGroup_4; }
		
		//'type:'
		public Keyword getTypeKeyword_4_0() { return cTypeKeyword_4_0; }
		
		//type=JOINTTYPE
		public Assignment getTypeAssignment_4_1() { return cTypeAssignment_4_1; }
		
		//JOINTTYPE
		public RuleCall getTypeJOINTTYPETerminalRuleCall_4_1_0() { return cTypeJOINTTYPETerminalRuleCall_4_1_0; }
		
		//('parent:' parent=Parent)
		public Group getGroup_5() { return cGroup_5; }
		
		//'parent:'
		public Keyword getParentKeyword_5_0() { return cParentKeyword_5_0; }
		
		//parent=Parent
		public Assignment getParentAssignment_5_1() { return cParentAssignment_5_1; }
		
		//Parent
		public RuleCall getParentParentParserRuleCall_5_1_0() { return cParentParentParserRuleCall_5_1_0; }
		
		//('child:' child=Child)
		public Group getGroup_6() { return cGroup_6; }
		
		//'child:'
		public Keyword getChildKeyword_6_0() { return cChildKeyword_6_0; }
		
		//child=Child
		public Assignment getChildAssignment_6_1() { return cChildAssignment_6_1; }
		
		//Child
		public RuleCall getChildChildParserRuleCall_6_1_0() { return cChildChildParserRuleCall_6_1_0; }
		
		//('origin:' origin=Pose)
		public Group getGroup_7() { return cGroup_7; }
		
		//'origin:'
		public Keyword getOriginKeyword_7_0() { return cOriginKeyword_7_0; }
		
		//origin=Pose
		public Assignment getOriginAssignment_7_1() { return cOriginAssignment_7_1; }
		
		//Pose
		public RuleCall getOriginPoseParserRuleCall_7_1_0() { return cOriginPoseParserRuleCall_7_1_0; }
		
		//('axis:' axis=Axis)?
		public Group getGroup_8() { return cGroup_8; }
		
		//'axis:'
		public Keyword getAxisKeyword_8_0() { return cAxisKeyword_8_0; }
		
		//axis=Axis
		public Assignment getAxisAssignment_8_1() { return cAxisAssignment_8_1; }
		
		//Axis
		public RuleCall getAxisAxisParserRuleCall_8_1_0() { return cAxisAxisParserRuleCall_8_1_0; }
		
		//('limit:' limit=Limit)?
		public Group getGroup_9() { return cGroup_9; }
		
		//'limit:'
		public Keyword getLimitKeyword_9_0() { return cLimitKeyword_9_0; }
		
		//limit=Limit
		public Assignment getLimitAssignment_9_1() { return cLimitAssignment_9_1; }
		
		//Limit
		public RuleCall getLimitLimitParserRuleCall_9_1_0() { return cLimitLimitParserRuleCall_9_1_0; }
		
		//END
		public RuleCall getENDTerminalRuleCall_10() { return cENDTerminalRuleCall_10; }
	}
	public class ParentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.fraunhofer.ipa.kinematics.Kinematics.Parent");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cBEGINTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Keyword cLinkKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cLinkAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cLinkEStringParserRuleCall_2_0 = (RuleCall)cLinkAssignment_2.eContents().get(0);
		private final RuleCall cENDTerminalRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		
		//Parent returns urdf::Parent:
		//    BEGIN
		//        'link:' link=EString
		//    END;
		@Override public ParserRule getRule() { return rule; }
		
		//BEGIN
		//    'link:' link=EString
		//END
		public Group getGroup() { return cGroup; }
		
		//BEGIN
		public RuleCall getBEGINTerminalRuleCall_0() { return cBEGINTerminalRuleCall_0; }
		
		//'link:'
		public Keyword getLinkKeyword_1() { return cLinkKeyword_1; }
		
		//link=EString
		public Assignment getLinkAssignment_2() { return cLinkAssignment_2; }
		
		//EString
		public RuleCall getLinkEStringParserRuleCall_2_0() { return cLinkEStringParserRuleCall_2_0; }
		
		//END
		public RuleCall getENDTerminalRuleCall_3() { return cENDTerminalRuleCall_3; }
	}
	public class ChildElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.fraunhofer.ipa.kinematics.Kinematics.Child");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cBEGINTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Keyword cLinkKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cLinkAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cLinkEStringParserRuleCall_2_0 = (RuleCall)cLinkAssignment_2.eContents().get(0);
		private final RuleCall cENDTerminalRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		
		//Child returns urdf::Child:
		//    BEGIN
		//        'link:' link=EString
		//    END;
		@Override public ParserRule getRule() { return rule; }
		
		//BEGIN
		//    'link:' link=EString
		//END
		public Group getGroup() { return cGroup; }
		
		//BEGIN
		public RuleCall getBEGINTerminalRuleCall_0() { return cBEGINTerminalRuleCall_0; }
		
		//'link:'
		public Keyword getLinkKeyword_1() { return cLinkKeyword_1; }
		
		//link=EString
		public Assignment getLinkAssignment_2() { return cLinkAssignment_2; }
		
		//EString
		public RuleCall getLinkEStringParserRuleCall_2_0() { return cLinkEStringParserRuleCall_2_0; }
		
		//END
		public RuleCall getENDTerminalRuleCall_3() { return cENDTerminalRuleCall_3; }
	}
	public class LinkElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.fraunhofer.ipa.kinematics.Kinematics.Link");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cHyphenMinusKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cNameKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameEStringParserRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final RuleCall cBEGINTerminalRuleCall_3_0 = (RuleCall)cGroup_3.eContents().get(0);
		private final Group cGroup_3_1 = (Group)cGroup_3.eContents().get(1);
		private final Keyword cInertialKeyword_3_1_0 = (Keyword)cGroup_3_1.eContents().get(0);
		private final Assignment cInertialAssignment_3_1_1 = (Assignment)cGroup_3_1.eContents().get(1);
		private final RuleCall cInertialInertialParserRuleCall_3_1_1_0 = (RuleCall)cInertialAssignment_3_1_1.eContents().get(0);
		private final Group cGroup_3_2 = (Group)cGroup_3.eContents().get(2);
		private final Keyword cVisualKeyword_3_2_0 = (Keyword)cGroup_3_2.eContents().get(0);
		private final Assignment cVisualAssignment_3_2_1 = (Assignment)cGroup_3_2.eContents().get(1);
		private final RuleCall cVisualVisualParserRuleCall_3_2_1_0 = (RuleCall)cVisualAssignment_3_2_1.eContents().get(0);
		private final Group cGroup_3_3 = (Group)cGroup_3.eContents().get(3);
		private final Keyword cCollisionKeyword_3_3_0 = (Keyword)cGroup_3_3.eContents().get(0);
		private final Assignment cCollisionAssignment_3_3_1 = (Assignment)cGroup_3_3.eContents().get(1);
		private final RuleCall cCollisionCollisionParserRuleCall_3_3_1_0 = (RuleCall)cCollisionAssignment_3_3_1.eContents().get(0);
		private final RuleCall cENDTerminalRuleCall_3_4 = (RuleCall)cGroup_3.eContents().get(4);
		
		//Link returns urdf::Link:
		//    '-' 'name:' name=EString
		//    (BEGIN
		//        ('inertial:' inertial=Inertial)?
		//        ('visual:' visual=Visual)?
		//        ('collision:' collision=Collision)?
		//    END)?;
		@Override public ParserRule getRule() { return rule; }
		
		//'-' 'name:' name=EString
		//(BEGIN
		//    ('inertial:' inertial=Inertial)?
		//    ('visual:' visual=Visual)?
		//    ('collision:' collision=Collision)?
		//END)?
		public Group getGroup() { return cGroup; }
		
		//'-'
		public Keyword getHyphenMinusKeyword_0() { return cHyphenMinusKeyword_0; }
		
		//'name:'
		public Keyword getNameKeyword_1() { return cNameKeyword_1; }
		
		//name=EString
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_2_0() { return cNameEStringParserRuleCall_2_0; }
		
		//(BEGIN
		//    ('inertial:' inertial=Inertial)?
		//    ('visual:' visual=Visual)?
		//    ('collision:' collision=Collision)?
		//END)?
		public Group getGroup_3() { return cGroup_3; }
		
		//BEGIN
		public RuleCall getBEGINTerminalRuleCall_3_0() { return cBEGINTerminalRuleCall_3_0; }
		
		//('inertial:' inertial=Inertial)?
		public Group getGroup_3_1() { return cGroup_3_1; }
		
		//'inertial:'
		public Keyword getInertialKeyword_3_1_0() { return cInertialKeyword_3_1_0; }
		
		//inertial=Inertial
		public Assignment getInertialAssignment_3_1_1() { return cInertialAssignment_3_1_1; }
		
		//Inertial
		public RuleCall getInertialInertialParserRuleCall_3_1_1_0() { return cInertialInertialParserRuleCall_3_1_1_0; }
		
		//('visual:' visual=Visual)?
		public Group getGroup_3_2() { return cGroup_3_2; }
		
		//'visual:'
		public Keyword getVisualKeyword_3_2_0() { return cVisualKeyword_3_2_0; }
		
		//visual=Visual
		public Assignment getVisualAssignment_3_2_1() { return cVisualAssignment_3_2_1; }
		
		//Visual
		public RuleCall getVisualVisualParserRuleCall_3_2_1_0() { return cVisualVisualParserRuleCall_3_2_1_0; }
		
		//('collision:' collision=Collision)?
		public Group getGroup_3_3() { return cGroup_3_3; }
		
		//'collision:'
		public Keyword getCollisionKeyword_3_3_0() { return cCollisionKeyword_3_3_0; }
		
		//collision=Collision
		public Assignment getCollisionAssignment_3_3_1() { return cCollisionAssignment_3_3_1; }
		
		//Collision
		public RuleCall getCollisionCollisionParserRuleCall_3_3_1_0() { return cCollisionCollisionParserRuleCall_3_3_1_0; }
		
		//END
		public RuleCall getENDTerminalRuleCall_3_4() { return cENDTerminalRuleCall_3_4; }
	}
	public class PoseElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.fraunhofer.ipa.kinematics.Kinematics.Pose");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cPoseAction_0 = (Action)cGroup.eContents().get(0);
		private final RuleCall cBEGINTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cRpyKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Keyword cLeftSquareBracketKeyword_2_1 = (Keyword)cGroup_2.eContents().get(1);
		private final Assignment cRpyAssignment_2_2 = (Assignment)cGroup_2.eContents().get(2);
		private final RuleCall cRpyDOUBLETerminalRuleCall_2_2_0 = (RuleCall)cRpyAssignment_2_2.eContents().get(0);
		private final Group cGroup_2_3 = (Group)cGroup_2.eContents().get(3);
		private final Keyword cCommaKeyword_2_3_0 = (Keyword)cGroup_2_3.eContents().get(0);
		private final Assignment cRpyAssignment_2_3_1 = (Assignment)cGroup_2_3.eContents().get(1);
		private final RuleCall cRpyDOUBLETerminalRuleCall_2_3_1_0 = (RuleCall)cRpyAssignment_2_3_1.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_2_4 = (Keyword)cGroup_2.eContents().get(4);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cXyzKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Keyword cLeftSquareBracketKeyword_3_1 = (Keyword)cGroup_3.eContents().get(1);
		private final Assignment cXyzAssignment_3_2 = (Assignment)cGroup_3.eContents().get(2);
		private final RuleCall cXyzDOUBLETerminalRuleCall_3_2_0 = (RuleCall)cXyzAssignment_3_2.eContents().get(0);
		private final Group cGroup_3_3 = (Group)cGroup_3.eContents().get(3);
		private final Keyword cCommaKeyword_3_3_0 = (Keyword)cGroup_3_3.eContents().get(0);
		private final Assignment cXyzAssignment_3_3_1 = (Assignment)cGroup_3_3.eContents().get(1);
		private final RuleCall cXyzDOUBLETerminalRuleCall_3_3_1_0 = (RuleCall)cXyzAssignment_3_3_1.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_3_4 = (Keyword)cGroup_3.eContents().get(4);
		private final RuleCall cENDTerminalRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		
		//Pose returns urdf::Pose:
		//    {urdf::Pose}
		//    BEGIN
		//        ('rpy:' '[' rpy+=DOUBLE (',' rpy+=DOUBLE)* ']')?
		//        ('xyz:' '[' xyz+=DOUBLE (',' xyz+=DOUBLE)* ']')?
		//    END;
		@Override public ParserRule getRule() { return rule; }
		
		//{urdf::Pose}
		//BEGIN
		//    ('rpy:' '[' rpy+=DOUBLE (',' rpy+=DOUBLE)* ']')?
		//    ('xyz:' '[' xyz+=DOUBLE (',' xyz+=DOUBLE)* ']')?
		//END
		public Group getGroup() { return cGroup; }
		
		//{urdf::Pose}
		public Action getPoseAction_0() { return cPoseAction_0; }
		
		//BEGIN
		public RuleCall getBEGINTerminalRuleCall_1() { return cBEGINTerminalRuleCall_1; }
		
		//('rpy:' '[' rpy+=DOUBLE (',' rpy+=DOUBLE)* ']')?
		public Group getGroup_2() { return cGroup_2; }
		
		//'rpy:'
		public Keyword getRpyKeyword_2_0() { return cRpyKeyword_2_0; }
		
		//'['
		public Keyword getLeftSquareBracketKeyword_2_1() { return cLeftSquareBracketKeyword_2_1; }
		
		//rpy+=DOUBLE
		public Assignment getRpyAssignment_2_2() { return cRpyAssignment_2_2; }
		
		//DOUBLE
		public RuleCall getRpyDOUBLETerminalRuleCall_2_2_0() { return cRpyDOUBLETerminalRuleCall_2_2_0; }
		
		//(',' rpy+=DOUBLE)*
		public Group getGroup_2_3() { return cGroup_2_3; }
		
		//','
		public Keyword getCommaKeyword_2_3_0() { return cCommaKeyword_2_3_0; }
		
		//rpy+=DOUBLE
		public Assignment getRpyAssignment_2_3_1() { return cRpyAssignment_2_3_1; }
		
		//DOUBLE
		public RuleCall getRpyDOUBLETerminalRuleCall_2_3_1_0() { return cRpyDOUBLETerminalRuleCall_2_3_1_0; }
		
		//']'
		public Keyword getRightSquareBracketKeyword_2_4() { return cRightSquareBracketKeyword_2_4; }
		
		//('xyz:' '[' xyz+=DOUBLE (',' xyz+=DOUBLE)* ']')?
		public Group getGroup_3() { return cGroup_3; }
		
		//'xyz:'
		public Keyword getXyzKeyword_3_0() { return cXyzKeyword_3_0; }
		
		//'['
		public Keyword getLeftSquareBracketKeyword_3_1() { return cLeftSquareBracketKeyword_3_1; }
		
		//xyz+=DOUBLE
		public Assignment getXyzAssignment_3_2() { return cXyzAssignment_3_2; }
		
		//DOUBLE
		public RuleCall getXyzDOUBLETerminalRuleCall_3_2_0() { return cXyzDOUBLETerminalRuleCall_3_2_0; }
		
		//(',' xyz+=DOUBLE)*
		public Group getGroup_3_3() { return cGroup_3_3; }
		
		//','
		public Keyword getCommaKeyword_3_3_0() { return cCommaKeyword_3_3_0; }
		
		//xyz+=DOUBLE
		public Assignment getXyzAssignment_3_3_1() { return cXyzAssignment_3_3_1; }
		
		//DOUBLE
		public RuleCall getXyzDOUBLETerminalRuleCall_3_3_1_0() { return cXyzDOUBLETerminalRuleCall_3_3_1_0; }
		
		//']'
		public Keyword getRightSquareBracketKeyword_3_4() { return cRightSquareBracketKeyword_3_4; }
		
		//END
		public RuleCall getENDTerminalRuleCall_4() { return cENDTerminalRuleCall_4; }
	}
	public class AxisElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.fraunhofer.ipa.kinematics.Kinematics.Axis");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cAxisAction_0 = (Action)cGroup.eContents().get(0);
		private final RuleCall cBEGINTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cXyzKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cXyzAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cXyzEStringParserRuleCall_2_1_0 = (RuleCall)cXyzAssignment_2_1.eContents().get(0);
		private final RuleCall cENDTerminalRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		
		//Axis returns urdf::Axis:
		//    {urdf::Axis}
		//    BEGIN
		//        ('xyz:' xyz=EString)?
		//    END;
		@Override public ParserRule getRule() { return rule; }
		
		//{urdf::Axis}
		//BEGIN
		//    ('xyz:' xyz=EString)?
		//END
		public Group getGroup() { return cGroup; }
		
		//{urdf::Axis}
		public Action getAxisAction_0() { return cAxisAction_0; }
		
		//BEGIN
		public RuleCall getBEGINTerminalRuleCall_1() { return cBEGINTerminalRuleCall_1; }
		
		//('xyz:' xyz=EString)?
		public Group getGroup_2() { return cGroup_2; }
		
		//'xyz:'
		public Keyword getXyzKeyword_2_0() { return cXyzKeyword_2_0; }
		
		//xyz=EString
		public Assignment getXyzAssignment_2_1() { return cXyzAssignment_2_1; }
		
		//EString
		public RuleCall getXyzEStringParserRuleCall_2_1_0() { return cXyzEStringParserRuleCall_2_1_0; }
		
		//END
		public RuleCall getENDTerminalRuleCall_3() { return cENDTerminalRuleCall_3; }
	}
	public class LimitElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.fraunhofer.ipa.kinematics.Kinematics.Limit");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cLimitAction_0 = (Action)cGroup.eContents().get(0);
		private final RuleCall cBEGINTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cEffortKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cEffortAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cEffortDOUBLETerminalRuleCall_2_1_0 = (RuleCall)cEffortAssignment_2_1.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cLowerKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cLowerAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cLowerDOUBLETerminalRuleCall_3_1_0 = (RuleCall)cLowerAssignment_3_1.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cUpperKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cUpperAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cUpperDOUBLETerminalRuleCall_4_1_0 = (RuleCall)cUpperAssignment_4_1.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cVelocityKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cVelocityAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cVelocityDOUBLETerminalRuleCall_5_1_0 = (RuleCall)cVelocityAssignment_5_1.eContents().get(0);
		private final RuleCall cENDTerminalRuleCall_6 = (RuleCall)cGroup.eContents().get(6);
		
		//Limit returns urdf::Limit:
		//    {urdf::Limit}
		//    BEGIN
		//        ('effort:' effort=DOUBLE)?
		//        ('lower:' lower=DOUBLE)?
		//        ('upper:' upper=DOUBLE)?
		//        ('velocity:' velocity=DOUBLE)?
		//    END;
		@Override public ParserRule getRule() { return rule; }
		
		//{urdf::Limit}
		//BEGIN
		//    ('effort:' effort=DOUBLE)?
		//    ('lower:' lower=DOUBLE)?
		//    ('upper:' upper=DOUBLE)?
		//    ('velocity:' velocity=DOUBLE)?
		//END
		public Group getGroup() { return cGroup; }
		
		//{urdf::Limit}
		public Action getLimitAction_0() { return cLimitAction_0; }
		
		//BEGIN
		public RuleCall getBEGINTerminalRuleCall_1() { return cBEGINTerminalRuleCall_1; }
		
		//('effort:' effort=DOUBLE)?
		public Group getGroup_2() { return cGroup_2; }
		
		//'effort:'
		public Keyword getEffortKeyword_2_0() { return cEffortKeyword_2_0; }
		
		//effort=DOUBLE
		public Assignment getEffortAssignment_2_1() { return cEffortAssignment_2_1; }
		
		//DOUBLE
		public RuleCall getEffortDOUBLETerminalRuleCall_2_1_0() { return cEffortDOUBLETerminalRuleCall_2_1_0; }
		
		//('lower:' lower=DOUBLE)?
		public Group getGroup_3() { return cGroup_3; }
		
		//'lower:'
		public Keyword getLowerKeyword_3_0() { return cLowerKeyword_3_0; }
		
		//lower=DOUBLE
		public Assignment getLowerAssignment_3_1() { return cLowerAssignment_3_1; }
		
		//DOUBLE
		public RuleCall getLowerDOUBLETerminalRuleCall_3_1_0() { return cLowerDOUBLETerminalRuleCall_3_1_0; }
		
		//('upper:' upper=DOUBLE)?
		public Group getGroup_4() { return cGroup_4; }
		
		//'upper:'
		public Keyword getUpperKeyword_4_0() { return cUpperKeyword_4_0; }
		
		//upper=DOUBLE
		public Assignment getUpperAssignment_4_1() { return cUpperAssignment_4_1; }
		
		//DOUBLE
		public RuleCall getUpperDOUBLETerminalRuleCall_4_1_0() { return cUpperDOUBLETerminalRuleCall_4_1_0; }
		
		//('velocity:' velocity=DOUBLE)?
		public Group getGroup_5() { return cGroup_5; }
		
		//'velocity:'
		public Keyword getVelocityKeyword_5_0() { return cVelocityKeyword_5_0; }
		
		//velocity=DOUBLE
		public Assignment getVelocityAssignment_5_1() { return cVelocityAssignment_5_1; }
		
		//DOUBLE
		public RuleCall getVelocityDOUBLETerminalRuleCall_5_1_0() { return cVelocityDOUBLETerminalRuleCall_5_1_0; }
		
		//END
		public RuleCall getENDTerminalRuleCall_6() { return cENDTerminalRuleCall_6; }
	}
	public class InertialElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.fraunhofer.ipa.kinematics.Kinematics.Inertial");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cInertialAction_0 = (Action)cGroup.eContents().get(0);
		private final RuleCall cBEGINTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cOriginKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cOriginAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cOriginPoseParserRuleCall_2_1_0 = (RuleCall)cOriginAssignment_2_1.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cMassKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cMassAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cMassMassParserRuleCall_3_1_0 = (RuleCall)cMassAssignment_3_1.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cInertiaKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cInertiaAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cInertiaInertiaParserRuleCall_4_1_0 = (RuleCall)cInertiaAssignment_4_1.eContents().get(0);
		private final RuleCall cENDTerminalRuleCall_5 = (RuleCall)cGroup.eContents().get(5);
		
		//Inertial returns urdf::Inertial:
		//    {urdf::Inertial}
		//    BEGIN
		//        ('origin:' origin=Pose)?
		//        ('mass:' mass=Mass)?
		//        ('inertia:' inertia=Inertia)?
		//    END;
		@Override public ParserRule getRule() { return rule; }
		
		//{urdf::Inertial}
		//BEGIN
		//    ('origin:' origin=Pose)?
		//    ('mass:' mass=Mass)?
		//    ('inertia:' inertia=Inertia)?
		//END
		public Group getGroup() { return cGroup; }
		
		//{urdf::Inertial}
		public Action getInertialAction_0() { return cInertialAction_0; }
		
		//BEGIN
		public RuleCall getBEGINTerminalRuleCall_1() { return cBEGINTerminalRuleCall_1; }
		
		//('origin:' origin=Pose)?
		public Group getGroup_2() { return cGroup_2; }
		
		//'origin:'
		public Keyword getOriginKeyword_2_0() { return cOriginKeyword_2_0; }
		
		//origin=Pose
		public Assignment getOriginAssignment_2_1() { return cOriginAssignment_2_1; }
		
		//Pose
		public RuleCall getOriginPoseParserRuleCall_2_1_0() { return cOriginPoseParserRuleCall_2_1_0; }
		
		//('mass:' mass=Mass)?
		public Group getGroup_3() { return cGroup_3; }
		
		//'mass:'
		public Keyword getMassKeyword_3_0() { return cMassKeyword_3_0; }
		
		//mass=Mass
		public Assignment getMassAssignment_3_1() { return cMassAssignment_3_1; }
		
		//Mass
		public RuleCall getMassMassParserRuleCall_3_1_0() { return cMassMassParserRuleCall_3_1_0; }
		
		//('inertia:' inertia=Inertia)?
		public Group getGroup_4() { return cGroup_4; }
		
		//'inertia:'
		public Keyword getInertiaKeyword_4_0() { return cInertiaKeyword_4_0; }
		
		//inertia=Inertia
		public Assignment getInertiaAssignment_4_1() { return cInertiaAssignment_4_1; }
		
		//Inertia
		public RuleCall getInertiaInertiaParserRuleCall_4_1_0() { return cInertiaInertiaParserRuleCall_4_1_0; }
		
		//END
		public RuleCall getENDTerminalRuleCall_5() { return cENDTerminalRuleCall_5; }
	}
	public class VisualElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.fraunhofer.ipa.kinematics.Kinematics.Visual");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cBEGINTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cOriginKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Assignment cOriginAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cOriginPoseParserRuleCall_1_1_0 = (RuleCall)cOriginAssignment_1_1.eContents().get(0);
		private final Keyword cGeometryKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cGeometryAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cGeometryGeometryParserRuleCall_3_0 = (RuleCall)cGeometryAssignment_3.eContents().get(0);
		private final RuleCall cENDTerminalRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		
		//Visual returns urdf::Visual:
		//    BEGIN
		//        ('origin:' origin=Pose)?
		//        'geometry:' geometry=Geometry
		//    END;
		@Override public ParserRule getRule() { return rule; }
		
		//BEGIN
		//    ('origin:' origin=Pose)?
		//    'geometry:' geometry=Geometry
		//END
		public Group getGroup() { return cGroup; }
		
		//BEGIN
		public RuleCall getBEGINTerminalRuleCall_0() { return cBEGINTerminalRuleCall_0; }
		
		//('origin:' origin=Pose)?
		public Group getGroup_1() { return cGroup_1; }
		
		//'origin:'
		public Keyword getOriginKeyword_1_0() { return cOriginKeyword_1_0; }
		
		//origin=Pose
		public Assignment getOriginAssignment_1_1() { return cOriginAssignment_1_1; }
		
		//Pose
		public RuleCall getOriginPoseParserRuleCall_1_1_0() { return cOriginPoseParserRuleCall_1_1_0; }
		
		//'geometry:'
		public Keyword getGeometryKeyword_2() { return cGeometryKeyword_2; }
		
		//geometry=Geometry
		public Assignment getGeometryAssignment_3() { return cGeometryAssignment_3; }
		
		//Geometry
		public RuleCall getGeometryGeometryParserRuleCall_3_0() { return cGeometryGeometryParserRuleCall_3_0; }
		
		//END
		public RuleCall getENDTerminalRuleCall_4() { return cENDTerminalRuleCall_4; }
	}
	public class CollisionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.fraunhofer.ipa.kinematics.Kinematics.Collision");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cBEGINTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cOriginKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Assignment cOriginAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cOriginPoseParserRuleCall_1_1_0 = (RuleCall)cOriginAssignment_1_1.eContents().get(0);
		private final Keyword cGeometryKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cGeometryAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cGeometryGeometryParserRuleCall_3_0 = (RuleCall)cGeometryAssignment_3.eContents().get(0);
		private final RuleCall cENDTerminalRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		
		//Collision returns urdf::Collision:
		//    BEGIN
		//        ('origin:' origin=Pose)?
		//        'geometry:' geometry=Geometry
		//    END;
		@Override public ParserRule getRule() { return rule; }
		
		//BEGIN
		//    ('origin:' origin=Pose)?
		//    'geometry:' geometry=Geometry
		//END
		public Group getGroup() { return cGroup; }
		
		//BEGIN
		public RuleCall getBEGINTerminalRuleCall_0() { return cBEGINTerminalRuleCall_0; }
		
		//('origin:' origin=Pose)?
		public Group getGroup_1() { return cGroup_1; }
		
		//'origin:'
		public Keyword getOriginKeyword_1_0() { return cOriginKeyword_1_0; }
		
		//origin=Pose
		public Assignment getOriginAssignment_1_1() { return cOriginAssignment_1_1; }
		
		//Pose
		public RuleCall getOriginPoseParserRuleCall_1_1_0() { return cOriginPoseParserRuleCall_1_1_0; }
		
		//'geometry:'
		public Keyword getGeometryKeyword_2() { return cGeometryKeyword_2; }
		
		//geometry=Geometry
		public Assignment getGeometryAssignment_3() { return cGeometryAssignment_3; }
		
		//Geometry
		public RuleCall getGeometryGeometryParserRuleCall_3_0() { return cGeometryGeometryParserRuleCall_3_0; }
		
		//END
		public RuleCall getENDTerminalRuleCall_4() { return cENDTerminalRuleCall_4; }
	}
	public class MassElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.fraunhofer.ipa.kinematics.Kinematics.Mass");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cMassAction_0 = (Action)cGroup.eContents().get(0);
		private final RuleCall cBEGINTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Keyword cValueKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cValueAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cValueDOUBLETerminalRuleCall_3_0 = (RuleCall)cValueAssignment_3.eContents().get(0);
		private final RuleCall cENDTerminalRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		
		//Mass returns urdf::Mass:
		//    {urdf::Mass}
		//    BEGIN
		//        'value:' value=DOUBLE
		//    END;
		@Override public ParserRule getRule() { return rule; }
		
		//{urdf::Mass}
		//BEGIN
		//    'value:' value=DOUBLE
		//END
		public Group getGroup() { return cGroup; }
		
		//{urdf::Mass}
		public Action getMassAction_0() { return cMassAction_0; }
		
		//BEGIN
		public RuleCall getBEGINTerminalRuleCall_1() { return cBEGINTerminalRuleCall_1; }
		
		//'value:'
		public Keyword getValueKeyword_2() { return cValueKeyword_2; }
		
		//value=DOUBLE
		public Assignment getValueAssignment_3() { return cValueAssignment_3; }
		
		//DOUBLE
		public RuleCall getValueDOUBLETerminalRuleCall_3_0() { return cValueDOUBLETerminalRuleCall_3_0; }
		
		//END
		public RuleCall getENDTerminalRuleCall_4() { return cENDTerminalRuleCall_4; }
	}
	public class InertiaElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.fraunhofer.ipa.kinematics.Kinematics.Inertia");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cInertiaAction_0 = (Action)cGroup.eContents().get(0);
		private final RuleCall cBEGINTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cIxxKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cIxxAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cIxxDOUBLETerminalRuleCall_2_1_0 = (RuleCall)cIxxAssignment_2_1.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cIxyKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cIxyAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cIxyDOUBLETerminalRuleCall_3_1_0 = (RuleCall)cIxyAssignment_3_1.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cIxzKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cIxzAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cIxzDOUBLETerminalRuleCall_4_1_0 = (RuleCall)cIxzAssignment_4_1.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cIyyKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cIyyAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cIyyDOUBLETerminalRuleCall_5_1_0 = (RuleCall)cIyyAssignment_5_1.eContents().get(0);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cIyzKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Assignment cIyzAssignment_6_1 = (Assignment)cGroup_6.eContents().get(1);
		private final RuleCall cIyzDOUBLETerminalRuleCall_6_1_0 = (RuleCall)cIyzAssignment_6_1.eContents().get(0);
		private final Group cGroup_7 = (Group)cGroup.eContents().get(7);
		private final Keyword cIzzKeyword_7_0 = (Keyword)cGroup_7.eContents().get(0);
		private final Assignment cIzzAssignment_7_1 = (Assignment)cGroup_7.eContents().get(1);
		private final RuleCall cIzzDOUBLETerminalRuleCall_7_1_0 = (RuleCall)cIzzAssignment_7_1.eContents().get(0);
		private final RuleCall cENDTerminalRuleCall_8 = (RuleCall)cGroup.eContents().get(8);
		
		//Inertia returns urdf::Inertia:
		//    {urdf::Inertia}
		//    BEGIN
		//        ('ixx:' ixx=DOUBLE)?
		//        ('ixy:' ixy=DOUBLE)?
		//        ('ixz:' ixz=DOUBLE)?
		//        ('iyy:' iyy=DOUBLE)?
		//        ('iyz:' iyz=DOUBLE)?
		//        ('izz:' izz=DOUBLE)?
		//    END;
		@Override public ParserRule getRule() { return rule; }
		
		//{urdf::Inertia}
		//BEGIN
		//    ('ixx:' ixx=DOUBLE)?
		//    ('ixy:' ixy=DOUBLE)?
		//    ('ixz:' ixz=DOUBLE)?
		//    ('iyy:' iyy=DOUBLE)?
		//    ('iyz:' iyz=DOUBLE)?
		//    ('izz:' izz=DOUBLE)?
		//END
		public Group getGroup() { return cGroup; }
		
		//{urdf::Inertia}
		public Action getInertiaAction_0() { return cInertiaAction_0; }
		
		//BEGIN
		public RuleCall getBEGINTerminalRuleCall_1() { return cBEGINTerminalRuleCall_1; }
		
		//('ixx:' ixx=DOUBLE)?
		public Group getGroup_2() { return cGroup_2; }
		
		//'ixx:'
		public Keyword getIxxKeyword_2_0() { return cIxxKeyword_2_0; }
		
		//ixx=DOUBLE
		public Assignment getIxxAssignment_2_1() { return cIxxAssignment_2_1; }
		
		//DOUBLE
		public RuleCall getIxxDOUBLETerminalRuleCall_2_1_0() { return cIxxDOUBLETerminalRuleCall_2_1_0; }
		
		//('ixy:' ixy=DOUBLE)?
		public Group getGroup_3() { return cGroup_3; }
		
		//'ixy:'
		public Keyword getIxyKeyword_3_0() { return cIxyKeyword_3_0; }
		
		//ixy=DOUBLE
		public Assignment getIxyAssignment_3_1() { return cIxyAssignment_3_1; }
		
		//DOUBLE
		public RuleCall getIxyDOUBLETerminalRuleCall_3_1_0() { return cIxyDOUBLETerminalRuleCall_3_1_0; }
		
		//('ixz:' ixz=DOUBLE)?
		public Group getGroup_4() { return cGroup_4; }
		
		//'ixz:'
		public Keyword getIxzKeyword_4_0() { return cIxzKeyword_4_0; }
		
		//ixz=DOUBLE
		public Assignment getIxzAssignment_4_1() { return cIxzAssignment_4_1; }
		
		//DOUBLE
		public RuleCall getIxzDOUBLETerminalRuleCall_4_1_0() { return cIxzDOUBLETerminalRuleCall_4_1_0; }
		
		//('iyy:' iyy=DOUBLE)?
		public Group getGroup_5() { return cGroup_5; }
		
		//'iyy:'
		public Keyword getIyyKeyword_5_0() { return cIyyKeyword_5_0; }
		
		//iyy=DOUBLE
		public Assignment getIyyAssignment_5_1() { return cIyyAssignment_5_1; }
		
		//DOUBLE
		public RuleCall getIyyDOUBLETerminalRuleCall_5_1_0() { return cIyyDOUBLETerminalRuleCall_5_1_0; }
		
		//('iyz:' iyz=DOUBLE)?
		public Group getGroup_6() { return cGroup_6; }
		
		//'iyz:'
		public Keyword getIyzKeyword_6_0() { return cIyzKeyword_6_0; }
		
		//iyz=DOUBLE
		public Assignment getIyzAssignment_6_1() { return cIyzAssignment_6_1; }
		
		//DOUBLE
		public RuleCall getIyzDOUBLETerminalRuleCall_6_1_0() { return cIyzDOUBLETerminalRuleCall_6_1_0; }
		
		//('izz:' izz=DOUBLE)?
		public Group getGroup_7() { return cGroup_7; }
		
		//'izz:'
		public Keyword getIzzKeyword_7_0() { return cIzzKeyword_7_0; }
		
		//izz=DOUBLE
		public Assignment getIzzAssignment_7_1() { return cIzzAssignment_7_1; }
		
		//DOUBLE
		public RuleCall getIzzDOUBLETerminalRuleCall_7_1_0() { return cIzzDOUBLETerminalRuleCall_7_1_0; }
		
		//END
		public RuleCall getENDTerminalRuleCall_8() { return cENDTerminalRuleCall_8; }
	}
	public class GeometryElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.fraunhofer.ipa.kinematics.Kinematics.Geometry");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cGeometryAction_0 = (Action)cGroup.eContents().get(0);
		private final RuleCall cBEGINTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cBoxKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cBoxAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cBoxBoxParserRuleCall_2_1_0 = (RuleCall)cBoxAssignment_2_1.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cCylinderKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cCylinderAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cCylinderCylinderParserRuleCall_3_1_0 = (RuleCall)cCylinderAssignment_3_1.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cSphereKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cSphereAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cSphereSphereParserRuleCall_4_1_0 = (RuleCall)cSphereAssignment_4_1.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cMeshKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cMeshAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cMeshMeshParserRuleCall_5_1_0 = (RuleCall)cMeshAssignment_5_1.eContents().get(0);
		private final RuleCall cENDTerminalRuleCall_6 = (RuleCall)cGroup.eContents().get(6);
		
		//Geometry returns urdf::Geometry:
		//    {urdf::Geometry}
		//    BEGIN
		//        ('box:' box=Box)?
		//        ('cylinder:' cylinder=Cylinder)?
		//        ('sphere:' sphere=Sphere)?
		//        ('mesh:' mesh=Mesh)?
		//    END;
		@Override public ParserRule getRule() { return rule; }
		
		//{urdf::Geometry}
		//BEGIN
		//    ('box:' box=Box)?
		//    ('cylinder:' cylinder=Cylinder)?
		//    ('sphere:' sphere=Sphere)?
		//    ('mesh:' mesh=Mesh)?
		//END
		public Group getGroup() { return cGroup; }
		
		//{urdf::Geometry}
		public Action getGeometryAction_0() { return cGeometryAction_0; }
		
		//BEGIN
		public RuleCall getBEGINTerminalRuleCall_1() { return cBEGINTerminalRuleCall_1; }
		
		//('box:' box=Box)?
		public Group getGroup_2() { return cGroup_2; }
		
		//'box:'
		public Keyword getBoxKeyword_2_0() { return cBoxKeyword_2_0; }
		
		//box=Box
		public Assignment getBoxAssignment_2_1() { return cBoxAssignment_2_1; }
		
		//Box
		public RuleCall getBoxBoxParserRuleCall_2_1_0() { return cBoxBoxParserRuleCall_2_1_0; }
		
		//('cylinder:' cylinder=Cylinder)?
		public Group getGroup_3() { return cGroup_3; }
		
		//'cylinder:'
		public Keyword getCylinderKeyword_3_0() { return cCylinderKeyword_3_0; }
		
		//cylinder=Cylinder
		public Assignment getCylinderAssignment_3_1() { return cCylinderAssignment_3_1; }
		
		//Cylinder
		public RuleCall getCylinderCylinderParserRuleCall_3_1_0() { return cCylinderCylinderParserRuleCall_3_1_0; }
		
		//('sphere:' sphere=Sphere)?
		public Group getGroup_4() { return cGroup_4; }
		
		//'sphere:'
		public Keyword getSphereKeyword_4_0() { return cSphereKeyword_4_0; }
		
		//sphere=Sphere
		public Assignment getSphereAssignment_4_1() { return cSphereAssignment_4_1; }
		
		//Sphere
		public RuleCall getSphereSphereParserRuleCall_4_1_0() { return cSphereSphereParserRuleCall_4_1_0; }
		
		//('mesh:' mesh=Mesh)?
		public Group getGroup_5() { return cGroup_5; }
		
		//'mesh:'
		public Keyword getMeshKeyword_5_0() { return cMeshKeyword_5_0; }
		
		//mesh=Mesh
		public Assignment getMeshAssignment_5_1() { return cMeshAssignment_5_1; }
		
		//Mesh
		public RuleCall getMeshMeshParserRuleCall_5_1_0() { return cMeshMeshParserRuleCall_5_1_0; }
		
		//END
		public RuleCall getENDTerminalRuleCall_6() { return cENDTerminalRuleCall_6; }
	}
	public class BoxElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.fraunhofer.ipa.kinematics.Kinematics.Box");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cBoxAction_0 = (Action)cGroup.eContents().get(0);
		private final RuleCall cBEGINTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Keyword cSizeKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cSizeAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cSizeEStringParserRuleCall_3_0 = (RuleCall)cSizeAssignment_3.eContents().get(0);
		private final RuleCall cENDTerminalRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		
		//Box returns urdf::Box:
		//    {urdf::Box}
		//    BEGIN
		//        'size:' size=EString
		//    END;
		@Override public ParserRule getRule() { return rule; }
		
		//{urdf::Box}
		//BEGIN
		//    'size:' size=EString
		//END
		public Group getGroup() { return cGroup; }
		
		//{urdf::Box}
		public Action getBoxAction_0() { return cBoxAction_0; }
		
		//BEGIN
		public RuleCall getBEGINTerminalRuleCall_1() { return cBEGINTerminalRuleCall_1; }
		
		//'size:'
		public Keyword getSizeKeyword_2() { return cSizeKeyword_2; }
		
		//size=EString
		public Assignment getSizeAssignment_3() { return cSizeAssignment_3; }
		
		//EString
		public RuleCall getSizeEStringParserRuleCall_3_0() { return cSizeEStringParserRuleCall_3_0; }
		
		//END
		public RuleCall getENDTerminalRuleCall_4() { return cENDTerminalRuleCall_4; }
	}
	public class CylinderElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.fraunhofer.ipa.kinematics.Kinematics.Cylinder");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cBEGINTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Keyword cLengthKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cLengthAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cLengthEStringParserRuleCall_2_0 = (RuleCall)cLengthAssignment_2.eContents().get(0);
		private final Keyword cRadiusKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cRadiusAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cRadiusEStringParserRuleCall_4_0 = (RuleCall)cRadiusAssignment_4.eContents().get(0);
		private final RuleCall cENDTerminalRuleCall_5 = (RuleCall)cGroup.eContents().get(5);
		
		//Cylinder returns urdf::Cylinder:
		//    BEGIN
		//        'length:' length=EString
		//        'radius:' radius=EString
		//    END;
		@Override public ParserRule getRule() { return rule; }
		
		//BEGIN
		//    'length:' length=EString
		//    'radius:' radius=EString
		//END
		public Group getGroup() { return cGroup; }
		
		//BEGIN
		public RuleCall getBEGINTerminalRuleCall_0() { return cBEGINTerminalRuleCall_0; }
		
		//'length:'
		public Keyword getLengthKeyword_1() { return cLengthKeyword_1; }
		
		//length=EString
		public Assignment getLengthAssignment_2() { return cLengthAssignment_2; }
		
		//EString
		public RuleCall getLengthEStringParserRuleCall_2_0() { return cLengthEStringParserRuleCall_2_0; }
		
		//'radius:'
		public Keyword getRadiusKeyword_3() { return cRadiusKeyword_3; }
		
		//radius=EString
		public Assignment getRadiusAssignment_4() { return cRadiusAssignment_4; }
		
		//EString
		public RuleCall getRadiusEStringParserRuleCall_4_0() { return cRadiusEStringParserRuleCall_4_0; }
		
		//END
		public RuleCall getENDTerminalRuleCall_5() { return cENDTerminalRuleCall_5; }
	}
	public class SphereElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.fraunhofer.ipa.kinematics.Kinematics.Sphere");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cBEGINTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Keyword cRadiusKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cRadiusAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cRadiusDouble0ParserRuleCall_2_0 = (RuleCall)cRadiusAssignment_2.eContents().get(0);
		private final RuleCall cENDTerminalRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		
		//Sphere returns urdf::Sphere:
		//    BEGIN
		//        'radius:' radius=Double0
		//    END;
		@Override public ParserRule getRule() { return rule; }
		
		//BEGIN
		//    'radius:' radius=Double0
		//END
		public Group getGroup() { return cGroup; }
		
		//BEGIN
		public RuleCall getBEGINTerminalRuleCall_0() { return cBEGINTerminalRuleCall_0; }
		
		//'radius:'
		public Keyword getRadiusKeyword_1() { return cRadiusKeyword_1; }
		
		//radius=Double0
		public Assignment getRadiusAssignment_2() { return cRadiusAssignment_2; }
		
		//Double0
		public RuleCall getRadiusDouble0ParserRuleCall_2_0() { return cRadiusDouble0ParserRuleCall_2_0; }
		
		//END
		public RuleCall getENDTerminalRuleCall_3() { return cENDTerminalRuleCall_3; }
	}
	public class MeshElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.fraunhofer.ipa.kinematics.Kinematics.Mesh");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cBEGINTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Keyword cFilenameKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cFilenameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cFilenameEStringParserRuleCall_2_0 = (RuleCall)cFilenameAssignment_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cScaleKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Keyword cLeftSquareBracketKeyword_3_1 = (Keyword)cGroup_3.eContents().get(1);
		private final Assignment cScaleAssignment_3_2 = (Assignment)cGroup_3.eContents().get(2);
		private final RuleCall cScaleDOUBLETerminalRuleCall_3_2_0 = (RuleCall)cScaleAssignment_3_2.eContents().get(0);
		private final Group cGroup_3_3 = (Group)cGroup_3.eContents().get(3);
		private final Keyword cCommaKeyword_3_3_0 = (Keyword)cGroup_3_3.eContents().get(0);
		private final Assignment cScaleAssignment_3_3_1 = (Assignment)cGroup_3_3.eContents().get(1);
		private final RuleCall cScaleDOUBLETerminalRuleCall_3_3_1_0 = (RuleCall)cScaleAssignment_3_3_1.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_3_4 = (Keyword)cGroup_3.eContents().get(4);
		private final RuleCall cENDTerminalRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		
		//Mesh returns urdf::Mesh:
		//    BEGIN
		//        'filename:' filename=EString
		//        ('scale:' '[' scale+=DOUBLE (',' scale+=DOUBLE)* ']')?
		//    END;
		@Override public ParserRule getRule() { return rule; }
		
		//BEGIN
		//    'filename:' filename=EString
		//    ('scale:' '[' scale+=DOUBLE (',' scale+=DOUBLE)* ']')?
		//END
		public Group getGroup() { return cGroup; }
		
		//BEGIN
		public RuleCall getBEGINTerminalRuleCall_0() { return cBEGINTerminalRuleCall_0; }
		
		//'filename:'
		public Keyword getFilenameKeyword_1() { return cFilenameKeyword_1; }
		
		//filename=EString
		public Assignment getFilenameAssignment_2() { return cFilenameAssignment_2; }
		
		//EString
		public RuleCall getFilenameEStringParserRuleCall_2_0() { return cFilenameEStringParserRuleCall_2_0; }
		
		//('scale:' '[' scale+=DOUBLE (',' scale+=DOUBLE)* ']')?
		public Group getGroup_3() { return cGroup_3; }
		
		//'scale:'
		public Keyword getScaleKeyword_3_0() { return cScaleKeyword_3_0; }
		
		//'['
		public Keyword getLeftSquareBracketKeyword_3_1() { return cLeftSquareBracketKeyword_3_1; }
		
		//scale+=DOUBLE
		public Assignment getScaleAssignment_3_2() { return cScaleAssignment_3_2; }
		
		//DOUBLE
		public RuleCall getScaleDOUBLETerminalRuleCall_3_2_0() { return cScaleDOUBLETerminalRuleCall_3_2_0; }
		
		//(',' scale+=DOUBLE)*
		public Group getGroup_3_3() { return cGroup_3_3; }
		
		//','
		public Keyword getCommaKeyword_3_3_0() { return cCommaKeyword_3_3_0; }
		
		//scale+=DOUBLE
		public Assignment getScaleAssignment_3_3_1() { return cScaleAssignment_3_3_1; }
		
		//DOUBLE
		public RuleCall getScaleDOUBLETerminalRuleCall_3_3_1_0() { return cScaleDOUBLETerminalRuleCall_3_3_1_0; }
		
		//']'
		public Keyword getRightSquareBracketKeyword_3_4() { return cRightSquareBracketKeyword_3_4; }
		
		//END
		public RuleCall getENDTerminalRuleCall_4() { return cENDTerminalRuleCall_4; }
	}
	public class AnyURIElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.fraunhofer.ipa.kinematics.Kinematics.AnyURI");
		private final Keyword cAnyURIKeyword = (Keyword)rule.eContents().get(1);
		
		//AnyURI returns type::AnyURI:
		//    'AnyURI' /* TODO: implement this rule and an appropriate IValueConverter */;
		@Override public ParserRule getRule() { return rule; }
		
		//'AnyURI'
		public Keyword getAnyURIKeyword() { return cAnyURIKeyword; }
	}
	public class EStringElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.fraunhofer.ipa.kinematics.Kinematics.EString");
		private final RuleCall cSTRINGTerminalRuleCall = (RuleCall)rule.eContents().get(1);
		
		//EString returns ecore::EString:
		//    STRING
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//STRING
		public RuleCall getSTRINGTerminalRuleCall() { return cSTRINGTerminalRuleCall; }
	}
	public class Double0Elements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.fraunhofer.ipa.kinematics.Kinematics.Double0");
		private final RuleCall cDOUBLETerminalRuleCall = (RuleCall)rule.eContents().get(1);
		
		//Double0 returns type::Double:
		//    DOUBLE;
		@Override public ParserRule getRule() { return rule; }
		
		//DOUBLE
		public RuleCall getDOUBLETerminalRuleCall() { return cDOUBLETerminalRuleCall; }
	}
	public class Integer0Elements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.fraunhofer.ipa.kinematics.Kinematics.Integer0");
		private final RuleCall cDECINTTerminalRuleCall = (RuleCall)rule.eContents().get(1);
		
		//Integer0 returns type::Int:
		//    DECINT;
		@Override public ParserRule getRule() { return rule; }
		
		//DECINT
		public RuleCall getDECINTTerminalRuleCall() { return cDECINTTerminalRuleCall; }
	}
	
	
	private final ComponentElements pComponent;
	private final ConfiguredComponentElements pConfiguredComponent;
	private final GitRepoElements pGitRepo;
	private final GroupElements pGroup;
	private final BaseAttachmentElements pBaseAttachment;
	private final FlangeAttachmentElements pFlangeAttachment;
	private final ConnectionElements pConnection;
	private final JointElements pJoint;
	private final ParentElements pParent;
	private final ChildElements pChild;
	private final LinkElements pLink;
	private final PoseElements pPose;
	private final AxisElements pAxis;
	private final LimitElements pLimit;
	private final InertialElements pInertial;
	private final VisualElements pVisual;
	private final CollisionElements pCollision;
	private final MassElements pMass;
	private final InertiaElements pInertia;
	private final GeometryElements pGeometry;
	private final BoxElements pBox;
	private final CylinderElements pCylinder;
	private final SphereElements pSphere;
	private final MeshElements pMesh;
	private final AnyURIElements pAnyURI;
	private final EStringElements pEString;
	private final TerminalRule tDIGIT;
	private final TerminalRule tBOOLEAN;
	private final TerminalRule tDOUBLE;
	private final TerminalRule tDECINT;
	private final TerminalRule tJOINTTYPE;
	private final TerminalRule tCATEGORY;
	private final TerminalRule tBEGIN;
	private final TerminalRule tEND;
	private final TerminalRule tSL_COMMENT;
	private final Double0Elements pDouble0;
	private final Integer0Elements pInteger0;
	
	private final Grammar grammar;
	
	private final TerminalsGrammarAccess gaTerminals;

	@Inject
	public KinematicsGrammarAccess(GrammarProvider grammarProvider,
			TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
		this.pComponent = new ComponentElements();
		this.pConfiguredComponent = new ConfiguredComponentElements();
		this.pGitRepo = new GitRepoElements();
		this.pGroup = new GroupElements();
		this.pBaseAttachment = new BaseAttachmentElements();
		this.pFlangeAttachment = new FlangeAttachmentElements();
		this.pConnection = new ConnectionElements();
		this.pJoint = new JointElements();
		this.pParent = new ParentElements();
		this.pChild = new ChildElements();
		this.pLink = new LinkElements();
		this.pPose = new PoseElements();
		this.pAxis = new AxisElements();
		this.pLimit = new LimitElements();
		this.pInertial = new InertialElements();
		this.pVisual = new VisualElements();
		this.pCollision = new CollisionElements();
		this.pMass = new MassElements();
		this.pInertia = new InertiaElements();
		this.pGeometry = new GeometryElements();
		this.pBox = new BoxElements();
		this.pCylinder = new CylinderElements();
		this.pSphere = new SphereElements();
		this.pMesh = new MeshElements();
		this.pAnyURI = new AnyURIElements();
		this.pEString = new EStringElements();
		this.tDIGIT = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "de.fraunhofer.ipa.kinematics.Kinematics.DIGIT");
		this.tBOOLEAN = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "de.fraunhofer.ipa.kinematics.Kinematics.BOOLEAN");
		this.tDOUBLE = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "de.fraunhofer.ipa.kinematics.Kinematics.DOUBLE");
		this.tDECINT = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "de.fraunhofer.ipa.kinematics.Kinematics.DECINT");
		this.tJOINTTYPE = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "de.fraunhofer.ipa.kinematics.Kinematics.JOINTTYPE");
		this.tCATEGORY = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "de.fraunhofer.ipa.kinematics.Kinematics.CATEGORY");
		this.tBEGIN = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "de.fraunhofer.ipa.kinematics.Kinematics.BEGIN");
		this.tEND = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "de.fraunhofer.ipa.kinematics.Kinematics.END");
		this.tSL_COMMENT = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "de.fraunhofer.ipa.kinematics.Kinematics.SL_COMMENT");
		this.pDouble0 = new Double0Elements();
		this.pInteger0 = new Integer0Elements();
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("de.fraunhofer.ipa.kinematics.Kinematics".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	@Override
	public Grammar getGrammar() {
		return grammar;
	}
	
	
	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//Component returns Component:
	//    {Component}
	//    'component:'
	//    BEGIN
	//        'name:' name=EString
	//        'version:' version=EString
	//        ('category:' category=CATEGORY)?
	//        ('gitRepo:' gitRepo=GitRepo)?
	//        ('baseAttachment:'
	//            (baseAttachment+=BaseAttachment)* | baseAttachment+=BaseAttachment
	//        )?
	//        ('flangeAttachment:'
	//            (flangeAttachment+=FlangeAttachment)* | flangeAttachment+=FlangeAttachment
	//        )?
	//        ('component:'
	//            (component+=ConfiguredComponent)* | component+=ConfiguredComponent
	//        )?
	//        ('connection:'
	//            (connection+=Connection)* | connection+=Connection
	//        )?
	//        ('group:'
	//            (group+=Group)* | group+=Group
	//        )?
	//        ('link:'
	//            (link+=Link)* | link+=Link
	//        )?
	//        ('joint:'
	//            (joint+=Joint)* | joint+=Joint
	//        )?
	//    END;
	public ComponentElements getComponentAccess() {
		return pComponent;
	}
	
	public ParserRule getComponentRule() {
		return getComponentAccess().getRule();
	}
	
	//ConfiguredComponent returns ConfiguredComponent:
	//    '-' 'name:' name=EString
	//    BEGIN
	//        'type:' type=[Component|EString]
	//        ('prefix:' prefix=EString)?
	//    END
	//;
	public ConfiguredComponentElements getConfiguredComponentAccess() {
		return pConfiguredComponent;
	}
	
	public ParserRule getConfiguredComponentRule() {
		return getConfiguredComponentAccess().getRule();
	}
	
	//GitRepo returns GitRepo:
	//    BEGIN
	//        'distro:' distro=EString
	//        'repo:' repo=EString
	//        'branch:' branch=EString
	//        'package:' package=EString
	//        'version:' version=EString
	//    END;
	public GitRepoElements getGitRepoAccess() {
		return pGitRepo;
	}
	
	public ParserRule getGitRepoRule() {
		return getGitRepoAccess().getRule();
	}
	
	//Group returns Group:
	//    '-' 'name:' name=EString
	//    BEGIN
	//        'baseLink:' baseLink=[urdf::Link|EString]
	//        'endLink:' endLink=[urdf::Link|EString]
	//        ('ros2_control:' ros2_control=EString)?
	//    END
	//;
	public GroupElements getGroupAccess() {
		return pGroup;
	}
	
	public ParserRule getGroupRule() {
		return getGroupAccess().getRule();
	}
	
	//BaseAttachment returns BaseAttachment:
	//    '-' 'name:' name=EString
	//    BEGIN
	//        'origin:' origin=Pose
	//        'parent:' parent=[urdf::Link|EString]
	//    END
	//;
	public BaseAttachmentElements getBaseAttachmentAccess() {
		return pBaseAttachment;
	}
	
	public ParserRule getBaseAttachmentRule() {
		return getBaseAttachmentAccess().getRule();
	}
	
	//FlangeAttachment returns FlangeAttachment:
	//    '-' 'name:' name=EString
	//    BEGIN
	//        'origin:' origin=Pose
	//        'parent:' parent=[urdf::Link|EString]
	//    END
	//;
	public FlangeAttachmentElements getFlangeAttachmentAccess() {
		return pFlangeAttachment;
	}
	
	public ParserRule getFlangeAttachmentRule() {
		return getFlangeAttachmentAccess().getRule();
	}
	
	//Connection returns Connection:
	//    '-' 'name:' name=EString
	//    BEGIN
	//        'baseAttachment:' baseAttachment=[BaseAttachment|EString]
	//        'flangeAttachment:' flangeAttachment=[FlangeAttachment|EString]
	//    END
	//;
	public ConnectionElements getConnectionAccess() {
		return pConnection;
	}
	
	public ParserRule getConnectionRule() {
		return getConnectionAccess().getRule();
	}
	
	//Joint returns urdf::Joint:
	//    '-' 'name:' name=EString
	//    BEGIN
	//        ('type:' type=JOINTTYPE)
	//        ('parent:' parent=Parent)
	//        ('child:' child=Child)
	//        ('origin:' origin=Pose)
	//        ('axis:' axis=Axis)?
	//        ('limit:' limit=Limit)?
	//    END;
	public JointElements getJointAccess() {
		return pJoint;
	}
	
	public ParserRule getJointRule() {
		return getJointAccess().getRule();
	}
	
	//Parent returns urdf::Parent:
	//    BEGIN
	//        'link:' link=EString
	//    END;
	public ParentElements getParentAccess() {
		return pParent;
	}
	
	public ParserRule getParentRule() {
		return getParentAccess().getRule();
	}
	
	//Child returns urdf::Child:
	//    BEGIN
	//        'link:' link=EString
	//    END;
	public ChildElements getChildAccess() {
		return pChild;
	}
	
	public ParserRule getChildRule() {
		return getChildAccess().getRule();
	}
	
	//Link returns urdf::Link:
	//    '-' 'name:' name=EString
	//    (BEGIN
	//        ('inertial:' inertial=Inertial)?
	//        ('visual:' visual=Visual)?
	//        ('collision:' collision=Collision)?
	//    END)?;
	public LinkElements getLinkAccess() {
		return pLink;
	}
	
	public ParserRule getLinkRule() {
		return getLinkAccess().getRule();
	}
	
	//Pose returns urdf::Pose:
	//    {urdf::Pose}
	//    BEGIN
	//        ('rpy:' '[' rpy+=DOUBLE (',' rpy+=DOUBLE)* ']')?
	//        ('xyz:' '[' xyz+=DOUBLE (',' xyz+=DOUBLE)* ']')?
	//    END;
	public PoseElements getPoseAccess() {
		return pPose;
	}
	
	public ParserRule getPoseRule() {
		return getPoseAccess().getRule();
	}
	
	//Axis returns urdf::Axis:
	//    {urdf::Axis}
	//    BEGIN
	//        ('xyz:' xyz=EString)?
	//    END;
	public AxisElements getAxisAccess() {
		return pAxis;
	}
	
	public ParserRule getAxisRule() {
		return getAxisAccess().getRule();
	}
	
	//Limit returns urdf::Limit:
	//    {urdf::Limit}
	//    BEGIN
	//        ('effort:' effort=DOUBLE)?
	//        ('lower:' lower=DOUBLE)?
	//        ('upper:' upper=DOUBLE)?
	//        ('velocity:' velocity=DOUBLE)?
	//    END;
	public LimitElements getLimitAccess() {
		return pLimit;
	}
	
	public ParserRule getLimitRule() {
		return getLimitAccess().getRule();
	}
	
	//Inertial returns urdf::Inertial:
	//    {urdf::Inertial}
	//    BEGIN
	//        ('origin:' origin=Pose)?
	//        ('mass:' mass=Mass)?
	//        ('inertia:' inertia=Inertia)?
	//    END;
	public InertialElements getInertialAccess() {
		return pInertial;
	}
	
	public ParserRule getInertialRule() {
		return getInertialAccess().getRule();
	}
	
	//Visual returns urdf::Visual:
	//    BEGIN
	//        ('origin:' origin=Pose)?
	//        'geometry:' geometry=Geometry
	//    END;
	public VisualElements getVisualAccess() {
		return pVisual;
	}
	
	public ParserRule getVisualRule() {
		return getVisualAccess().getRule();
	}
	
	//Collision returns urdf::Collision:
	//    BEGIN
	//        ('origin:' origin=Pose)?
	//        'geometry:' geometry=Geometry
	//    END;
	public CollisionElements getCollisionAccess() {
		return pCollision;
	}
	
	public ParserRule getCollisionRule() {
		return getCollisionAccess().getRule();
	}
	
	//Mass returns urdf::Mass:
	//    {urdf::Mass}
	//    BEGIN
	//        'value:' value=DOUBLE
	//    END;
	public MassElements getMassAccess() {
		return pMass;
	}
	
	public ParserRule getMassRule() {
		return getMassAccess().getRule();
	}
	
	//Inertia returns urdf::Inertia:
	//    {urdf::Inertia}
	//    BEGIN
	//        ('ixx:' ixx=DOUBLE)?
	//        ('ixy:' ixy=DOUBLE)?
	//        ('ixz:' ixz=DOUBLE)?
	//        ('iyy:' iyy=DOUBLE)?
	//        ('iyz:' iyz=DOUBLE)?
	//        ('izz:' izz=DOUBLE)?
	//    END;
	public InertiaElements getInertiaAccess() {
		return pInertia;
	}
	
	public ParserRule getInertiaRule() {
		return getInertiaAccess().getRule();
	}
	
	//Geometry returns urdf::Geometry:
	//    {urdf::Geometry}
	//    BEGIN
	//        ('box:' box=Box)?
	//        ('cylinder:' cylinder=Cylinder)?
	//        ('sphere:' sphere=Sphere)?
	//        ('mesh:' mesh=Mesh)?
	//    END;
	public GeometryElements getGeometryAccess() {
		return pGeometry;
	}
	
	public ParserRule getGeometryRule() {
		return getGeometryAccess().getRule();
	}
	
	//Box returns urdf::Box:
	//    {urdf::Box}
	//    BEGIN
	//        'size:' size=EString
	//    END;
	public BoxElements getBoxAccess() {
		return pBox;
	}
	
	public ParserRule getBoxRule() {
		return getBoxAccess().getRule();
	}
	
	//Cylinder returns urdf::Cylinder:
	//    BEGIN
	//        'length:' length=EString
	//        'radius:' radius=EString
	//    END;
	public CylinderElements getCylinderAccess() {
		return pCylinder;
	}
	
	public ParserRule getCylinderRule() {
		return getCylinderAccess().getRule();
	}
	
	//Sphere returns urdf::Sphere:
	//    BEGIN
	//        'radius:' radius=Double0
	//    END;
	public SphereElements getSphereAccess() {
		return pSphere;
	}
	
	public ParserRule getSphereRule() {
		return getSphereAccess().getRule();
	}
	
	//Mesh returns urdf::Mesh:
	//    BEGIN
	//        'filename:' filename=EString
	//        ('scale:' '[' scale+=DOUBLE (',' scale+=DOUBLE)* ']')?
	//    END;
	public MeshElements getMeshAccess() {
		return pMesh;
	}
	
	public ParserRule getMeshRule() {
		return getMeshAccess().getRule();
	}
	
	//AnyURI returns type::AnyURI:
	//    'AnyURI' /* TODO: implement this rule and an appropriate IValueConverter */;
	public AnyURIElements getAnyURIAccess() {
		return pAnyURI;
	}
	
	public ParserRule getAnyURIRule() {
		return getAnyURIAccess().getRule();
	}
	
	//EString returns ecore::EString:
	//    STRING
	//;
	public EStringElements getEStringAccess() {
		return pEString;
	}
	
	public ParserRule getEStringRule() {
		return getEStringAccess().getRule();
	}
	
	//// from https://github.com/ipa320/ros-model/blob/e9279c9eab1c5d2554f239e80150f2df1bbb5ab3/plugins/de.fraunhofer.ipa.rossystem.xtext/src/de/fraunhofer/ipa/rossystem/RosSystem.xtext#L283-L307
	//terminal fragment DIGIT: '0'..'9';
	public TerminalRule getDIGITRule() {
		return tDIGIT;
	}
	
	//terminal BOOLEAN: 'true'|'false';
	public TerminalRule getBOOLEANRule() {
		return tBOOLEAN;
	}
	
	//terminal DOUBLE returns ecore::EDouble: ('-')? INT* ('.' INT+)? (('e' | 'E') ('-' | '+') INT)?;
	public TerminalRule getDOUBLERule() {
		return tDOUBLE;
	}
	
	//  // Use terminal to avoid 'e' turning into a keyword
	//terminal DECINT: '0' | ('1'..'9' DIGIT*) | ('-''0'..'9' DIGIT*) ;
	public TerminalRule getDECINTRule() {
		return tDECINT;
	}
	
	//terminal JOINTTYPE: "revolute" | "continuous" | "prismatic" | "fixed" | "floating" | "planar";
	public TerminalRule getJOINTTYPERule() {
		return tJOINTTYPE;
	}
	
	//terminal CATEGORY: "manipulator" | "gripper" | "camera";
	public TerminalRule getCATEGORYRule() {
		return tCATEGORY;
	}
	
	/////////////////////
	//// YAML format
	/////////////////////
	//terminal BEGIN: 'synthetic:BEGIN';
	public TerminalRule getBEGINRule() {
		return tBEGIN;
	}
	
	//terminal END: 'synthetic:END';
	public TerminalRule getENDRule() {
		return tEND;
	}
	
	//@Override
	//terminal SL_COMMENT: '#' !('\n'|'\r')*;
	public TerminalRule getSL_COMMENTRule() {
		return tSL_COMMENT;
	}
	
	//Double0 returns type::Double:
	//    DOUBLE;
	public Double0Elements getDouble0Access() {
		return pDouble0;
	}
	
	public ParserRule getDouble0Rule() {
		return getDouble0Access().getRule();
	}
	
	//Integer0 returns type::Int:
	//    DECINT;
	public Integer0Elements getInteger0Access() {
		return pInteger0;
	}
	
	public ParserRule getInteger0Rule() {
		return getInteger0Access().getRule();
	}
	
	//terminal ID: '^'?('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	}
	
	//terminal INT returns ecore::EInt: ('0'..'9')+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	}
	
	//terminal STRING:
	//            '"' ( '\\' . /* 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' */ | !('\\'|'"') )* '"' |
	//            "'" ( '\\' . /* 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' */ | !('\\'|"'") )* "'"
	//        ;
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	}
	
	//terminal ML_COMMENT : '/*' -> '*/';
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	}
	
	//terminal WS         : (' '|'\t'|'\r'|'\n')+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	}
	
	//terminal ANY_OTHER: .;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	}
}
