/*
 * generated by Xtext 2.26.0
 */
grammar InternalKinematics;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package de.fraunhofer.ipa.kinematics.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package de.fraunhofer.ipa.kinematics.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import de.fraunhofer.ipa.kinematics.services.KinematicsGrammarAccess;

}
@parser::members {
	private KinematicsGrammarAccess grammarAccess;

	public void setGrammarAccess(KinematicsGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleRobot
entryRuleRobot
:
{ before(grammarAccess.getRobotRule()); }
	 ruleRobot
{ after(grammarAccess.getRobotRule()); } 
	 EOF 
;

// Rule Robot
ruleRobot 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRobotAccess().getGroup()); }
		(rule__Robot__Group__0)
		{ after(grammarAccess.getRobotAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAxis
entryRuleAxis
:
{ before(grammarAccess.getAxisRule()); }
	 ruleAxis
{ after(grammarAccess.getAxisRule()); } 
	 EOF 
;

// Rule Axis
ruleAxis 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAxisAccess().getGroup()); }
		(rule__Axis__Group__0)
		{ after(grammarAccess.getAxisAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePose
entryRulePose
:
{ before(grammarAccess.getPoseRule()); }
	 rulePose
{ after(grammarAccess.getPoseRule()); } 
	 EOF 
;

// Rule Pose
rulePose 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPoseAccess().getGroup()); }
		(rule__Pose__Group__0)
		{ after(grammarAccess.getPoseAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLimit
entryRuleLimit
:
{ before(grammarAccess.getLimitRule()); }
	 ruleLimit
{ after(grammarAccess.getLimitRule()); } 
	 EOF 
;

// Rule Limit
ruleLimit 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLimitAccess().getGroup()); }
		(rule__Limit__Group__0)
		{ after(grammarAccess.getLimitAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleInertial
entryRuleInertial
:
{ before(grammarAccess.getInertialRule()); }
	 ruleInertial
{ after(grammarAccess.getInertialRule()); } 
	 EOF 
;

// Rule Inertial
ruleInertial 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getInertialAccess().getGroup()); }
		(rule__Inertial__Group__0)
		{ after(grammarAccess.getInertialAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleVisual
entryRuleVisual
:
{ before(grammarAccess.getVisualRule()); }
	 ruleVisual
{ after(grammarAccess.getVisualRule()); } 
	 EOF 
;

// Rule Visual
ruleVisual 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getVisualAccess().getGroup()); }
		(rule__Visual__Group__0)
		{ after(grammarAccess.getVisualAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCollision
entryRuleCollision
:
{ before(grammarAccess.getCollisionRule()); }
	 ruleCollision
{ after(grammarAccess.getCollisionRule()); } 
	 EOF 
;

// Rule Collision
ruleCollision 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCollisionAccess().getGroup()); }
		(rule__Collision__Group__0)
		{ after(grammarAccess.getCollisionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMass
entryRuleMass
:
{ before(grammarAccess.getMassRule()); }
	 ruleMass
{ after(grammarAccess.getMassRule()); } 
	 EOF 
;

// Rule Mass
ruleMass 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMassAccess().getGroup()); }
		(rule__Mass__Group__0)
		{ after(grammarAccess.getMassAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleInertia
entryRuleInertia
:
{ before(grammarAccess.getInertiaRule()); }
	 ruleInertia
{ after(grammarAccess.getInertiaRule()); } 
	 EOF 
;

// Rule Inertia
ruleInertia 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getInertiaAccess().getGroup()); }
		(rule__Inertia__Group__0)
		{ after(grammarAccess.getInertiaAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleGeometry
entryRuleGeometry
:
{ before(grammarAccess.getGeometryRule()); }
	 ruleGeometry
{ after(grammarAccess.getGeometryRule()); } 
	 EOF 
;

// Rule Geometry
ruleGeometry 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getGeometryAccess().getGroup()); }
		(rule__Geometry__Group__0)
		{ after(grammarAccess.getGeometryAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBox
entryRuleBox
:
{ before(grammarAccess.getBoxRule()); }
	 ruleBox
{ after(grammarAccess.getBoxRule()); } 
	 EOF 
;

// Rule Box
ruleBox 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBoxAccess().getGroup()); }
		(rule__Box__Group__0)
		{ after(grammarAccess.getBoxAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCylinder
entryRuleCylinder
:
{ before(grammarAccess.getCylinderRule()); }
	 ruleCylinder
{ after(grammarAccess.getCylinderRule()); } 
	 EOF 
;

// Rule Cylinder
ruleCylinder 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCylinderAccess().getGroup()); }
		(rule__Cylinder__Group__0)
		{ after(grammarAccess.getCylinderAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSphere
entryRuleSphere
:
{ before(grammarAccess.getSphereRule()); }
	 ruleSphere
{ after(grammarAccess.getSphereRule()); } 
	 EOF 
;

// Rule Sphere
ruleSphere 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSphereAccess().getGroup()); }
		(rule__Sphere__Group__0)
		{ after(grammarAccess.getSphereAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMesh
entryRuleMesh
:
{ before(grammarAccess.getMeshRule()); }
	 ruleMesh
{ after(grammarAccess.getMeshRule()); } 
	 EOF 
;

// Rule Mesh
ruleMesh 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMeshAccess().getGroup()); }
		(rule__Mesh__Group__0)
		{ after(grammarAccess.getMeshAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEString
entryRuleEString
:
{ before(grammarAccess.getEStringRule()); }
	 ruleEString
{ after(grammarAccess.getEStringRule()); } 
	 EOF 
;

// Rule EString
ruleEString 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall()); }
		RULE_STRING
		{ after(grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDouble0
entryRuleDouble0
:
{ before(grammarAccess.getDouble0Rule()); }
	 ruleDouble0
{ after(grammarAccess.getDouble0Rule()); } 
	 EOF 
;

// Rule Double0
ruleDouble0 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDouble0Access().getDOUBLETerminalRuleCall()); }
		RULE_DOUBLE
		{ after(grammarAccess.getDouble0Access().getDOUBLETerminalRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Robot__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Robot__Group__0__Impl
	rule__Robot__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Robot__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRobotAccess().getXacroRobotAction_0()); }
	()
	{ after(grammarAccess.getRobotAccess().getXacroRobotAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Robot__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Robot__Group__1__Impl
	rule__Robot__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Robot__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRobotAccess().getRobotKeyword_1()); }
	'Robot'
	{ after(grammarAccess.getRobotAccess().getRobotKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Robot__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Robot__Group__2__Impl
	rule__Robot__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Robot__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRobotAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getRobotAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Robot__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Robot__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Robot__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRobotAccess().getRightCurlyBracketKeyword_3()); }
	'}'
	{ after(grammarAccess.getRobotAccess().getRightCurlyBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Axis__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Axis__Group__0__Impl
	rule__Axis__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Axis__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAxisAccess().getAxisAction_0()); }
	()
	{ after(grammarAccess.getAxisAccess().getAxisAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Axis__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Axis__Group__1__Impl
	rule__Axis__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Axis__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAxisAccess().getAxisKeyword_1()); }
	'Axis'
	{ after(grammarAccess.getAxisAccess().getAxisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Axis__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Axis__Group__2__Impl
	rule__Axis__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Axis__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAxisAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getAxisAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Axis__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Axis__Group__3__Impl
	rule__Axis__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Axis__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAxisAccess().getGroup_3()); }
	(rule__Axis__Group_3__0)?
	{ after(grammarAccess.getAxisAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Axis__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Axis__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Axis__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAxisAccess().getRightCurlyBracketKeyword_4()); }
	'}'
	{ after(grammarAccess.getAxisAccess().getRightCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Axis__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Axis__Group_3__0__Impl
	rule__Axis__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Axis__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAxisAccess().getXyzKeyword_3_0()); }
	'xyz'
	{ after(grammarAccess.getAxisAccess().getXyzKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Axis__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Axis__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Axis__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAxisAccess().getXyzAssignment_3_1()); }
	(rule__Axis__XyzAssignment_3_1)
	{ after(grammarAccess.getAxisAccess().getXyzAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Pose__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Pose__Group__0__Impl
	rule__Pose__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Pose__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPoseAccess().getPoseAction_0()); }
	()
	{ after(grammarAccess.getPoseAccess().getPoseAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Pose__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Pose__Group__1__Impl
	rule__Pose__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Pose__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPoseAccess().getPoseKeyword_1()); }
	'Pose'
	{ after(grammarAccess.getPoseAccess().getPoseKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Pose__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Pose__Group__2__Impl
	rule__Pose__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Pose__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPoseAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getPoseAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Pose__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Pose__Group__3__Impl
	rule__Pose__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Pose__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPoseAccess().getGroup_3()); }
	(rule__Pose__Group_3__0)?
	{ after(grammarAccess.getPoseAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Pose__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Pose__Group__4__Impl
	rule__Pose__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Pose__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPoseAccess().getGroup_4()); }
	(rule__Pose__Group_4__0)?
	{ after(grammarAccess.getPoseAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Pose__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Pose__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Pose__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPoseAccess().getRightCurlyBracketKeyword_5()); }
	'}'
	{ after(grammarAccess.getPoseAccess().getRightCurlyBracketKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Pose__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Pose__Group_3__0__Impl
	rule__Pose__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Pose__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPoseAccess().getRpyKeyword_3_0()); }
	'rpy'
	{ after(grammarAccess.getPoseAccess().getRpyKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Pose__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Pose__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Pose__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPoseAccess().getRpyAssignment_3_1()); }
	(rule__Pose__RpyAssignment_3_1)
	{ after(grammarAccess.getPoseAccess().getRpyAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Pose__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Pose__Group_4__0__Impl
	rule__Pose__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Pose__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPoseAccess().getXyzKeyword_4_0()); }
	'xyz'
	{ after(grammarAccess.getPoseAccess().getXyzKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Pose__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Pose__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Pose__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPoseAccess().getXyzAssignment_4_1()); }
	(rule__Pose__XyzAssignment_4_1)
	{ after(grammarAccess.getPoseAccess().getXyzAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Limit__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Limit__Group__0__Impl
	rule__Limit__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Limit__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLimitAccess().getLimitAction_0()); }
	()
	{ after(grammarAccess.getLimitAccess().getLimitAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Limit__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Limit__Group__1__Impl
	rule__Limit__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Limit__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLimitAccess().getLimitKeyword_1()); }
	'Limit'
	{ after(grammarAccess.getLimitAccess().getLimitKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Limit__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Limit__Group__2__Impl
	rule__Limit__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Limit__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLimitAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getLimitAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Limit__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Limit__Group__3__Impl
	rule__Limit__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Limit__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLimitAccess().getGroup_3()); }
	(rule__Limit__Group_3__0)?
	{ after(grammarAccess.getLimitAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Limit__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Limit__Group__4__Impl
	rule__Limit__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Limit__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLimitAccess().getGroup_4()); }
	(rule__Limit__Group_4__0)?
	{ after(grammarAccess.getLimitAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Limit__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Limit__Group__5__Impl
	rule__Limit__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Limit__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLimitAccess().getGroup_5()); }
	(rule__Limit__Group_5__0)?
	{ after(grammarAccess.getLimitAccess().getGroup_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Limit__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Limit__Group__6__Impl
	rule__Limit__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Limit__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLimitAccess().getGroup_6()); }
	(rule__Limit__Group_6__0)?
	{ after(grammarAccess.getLimitAccess().getGroup_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Limit__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Limit__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Limit__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLimitAccess().getRightCurlyBracketKeyword_7()); }
	'}'
	{ after(grammarAccess.getLimitAccess().getRightCurlyBracketKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Limit__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Limit__Group_3__0__Impl
	rule__Limit__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Limit__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLimitAccess().getEffortKeyword_3_0()); }
	'effort'
	{ after(grammarAccess.getLimitAccess().getEffortKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Limit__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Limit__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Limit__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLimitAccess().getEffortAssignment_3_1()); }
	(rule__Limit__EffortAssignment_3_1)
	{ after(grammarAccess.getLimitAccess().getEffortAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Limit__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Limit__Group_4__0__Impl
	rule__Limit__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Limit__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLimitAccess().getLowerKeyword_4_0()); }
	'lower'
	{ after(grammarAccess.getLimitAccess().getLowerKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Limit__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Limit__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Limit__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLimitAccess().getLowerAssignment_4_1()); }
	(rule__Limit__LowerAssignment_4_1)
	{ after(grammarAccess.getLimitAccess().getLowerAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Limit__Group_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Limit__Group_5__0__Impl
	rule__Limit__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Limit__Group_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLimitAccess().getUpperKeyword_5_0()); }
	'upper'
	{ after(grammarAccess.getLimitAccess().getUpperKeyword_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Limit__Group_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Limit__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Limit__Group_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLimitAccess().getUpperAssignment_5_1()); }
	(rule__Limit__UpperAssignment_5_1)
	{ after(grammarAccess.getLimitAccess().getUpperAssignment_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Limit__Group_6__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Limit__Group_6__0__Impl
	rule__Limit__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Limit__Group_6__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLimitAccess().getVelocityKeyword_6_0()); }
	'velocity'
	{ after(grammarAccess.getLimitAccess().getVelocityKeyword_6_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Limit__Group_6__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Limit__Group_6__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Limit__Group_6__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLimitAccess().getVelocityAssignment_6_1()); }
	(rule__Limit__VelocityAssignment_6_1)
	{ after(grammarAccess.getLimitAccess().getVelocityAssignment_6_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Inertial__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Inertial__Group__0__Impl
	rule__Inertial__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Inertial__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInertialAccess().getInertialAction_0()); }
	()
	{ after(grammarAccess.getInertialAccess().getInertialAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Inertial__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Inertial__Group__1__Impl
	rule__Inertial__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Inertial__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInertialAccess().getInertialKeyword_1()); }
	'Inertial'
	{ after(grammarAccess.getInertialAccess().getInertialKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Inertial__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Inertial__Group__2__Impl
	rule__Inertial__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Inertial__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInertialAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getInertialAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Inertial__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Inertial__Group__3__Impl
	rule__Inertial__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Inertial__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInertialAccess().getGroup_3()); }
	(rule__Inertial__Group_3__0)?
	{ after(grammarAccess.getInertialAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Inertial__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Inertial__Group__4__Impl
	rule__Inertial__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Inertial__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInertialAccess().getGroup_4()); }
	(rule__Inertial__Group_4__0)?
	{ after(grammarAccess.getInertialAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Inertial__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Inertial__Group__5__Impl
	rule__Inertial__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Inertial__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInertialAccess().getGroup_5()); }
	(rule__Inertial__Group_5__0)?
	{ after(grammarAccess.getInertialAccess().getGroup_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Inertial__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Inertial__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Inertial__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInertialAccess().getRightCurlyBracketKeyword_6()); }
	'}'
	{ after(grammarAccess.getInertialAccess().getRightCurlyBracketKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Inertial__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Inertial__Group_3__0__Impl
	rule__Inertial__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Inertial__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInertialAccess().getOriginKeyword_3_0()); }
	'origin'
	{ after(grammarAccess.getInertialAccess().getOriginKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Inertial__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Inertial__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Inertial__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInertialAccess().getOriginAssignment_3_1()); }
	(rule__Inertial__OriginAssignment_3_1)
	{ after(grammarAccess.getInertialAccess().getOriginAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Inertial__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Inertial__Group_4__0__Impl
	rule__Inertial__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Inertial__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInertialAccess().getMassKeyword_4_0()); }
	'mass'
	{ after(grammarAccess.getInertialAccess().getMassKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Inertial__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Inertial__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Inertial__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInertialAccess().getMassAssignment_4_1()); }
	(rule__Inertial__MassAssignment_4_1)
	{ after(grammarAccess.getInertialAccess().getMassAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Inertial__Group_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Inertial__Group_5__0__Impl
	rule__Inertial__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Inertial__Group_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInertialAccess().getInertiaKeyword_5_0()); }
	'inertia'
	{ after(grammarAccess.getInertialAccess().getInertiaKeyword_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Inertial__Group_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Inertial__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Inertial__Group_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInertialAccess().getInertiaAssignment_5_1()); }
	(rule__Inertial__InertiaAssignment_5_1)
	{ after(grammarAccess.getInertialAccess().getInertiaAssignment_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Visual__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Visual__Group__0__Impl
	rule__Visual__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Visual__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVisualAccess().getVisualKeyword_0()); }
	'Visual'
	{ after(grammarAccess.getVisualAccess().getVisualKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Visual__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Visual__Group__1__Impl
	rule__Visual__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Visual__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVisualAccess().getLeftCurlyBracketKeyword_1()); }
	'{'
	{ after(grammarAccess.getVisualAccess().getLeftCurlyBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Visual__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Visual__Group__2__Impl
	rule__Visual__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Visual__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVisualAccess().getGroup_2()); }
	(rule__Visual__Group_2__0)?
	{ after(grammarAccess.getVisualAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Visual__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Visual__Group__3__Impl
	rule__Visual__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Visual__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVisualAccess().getGeometryKeyword_3()); }
	'geometry'
	{ after(grammarAccess.getVisualAccess().getGeometryKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Visual__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Visual__Group__4__Impl
	rule__Visual__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Visual__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVisualAccess().getGeometryAssignment_4()); }
	(rule__Visual__GeometryAssignment_4)
	{ after(grammarAccess.getVisualAccess().getGeometryAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Visual__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Visual__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Visual__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVisualAccess().getRightCurlyBracketKeyword_5()); }
	'}'
	{ after(grammarAccess.getVisualAccess().getRightCurlyBracketKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Visual__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Visual__Group_2__0__Impl
	rule__Visual__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Visual__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVisualAccess().getOriginKeyword_2_0()); }
	'origin'
	{ after(grammarAccess.getVisualAccess().getOriginKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Visual__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Visual__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Visual__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVisualAccess().getOriginAssignment_2_1()); }
	(rule__Visual__OriginAssignment_2_1)
	{ after(grammarAccess.getVisualAccess().getOriginAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Collision__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Collision__Group__0__Impl
	rule__Collision__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Collision__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCollisionAccess().getCollisionKeyword_0()); }
	'Collision'
	{ after(grammarAccess.getCollisionAccess().getCollisionKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Collision__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Collision__Group__1__Impl
	rule__Collision__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Collision__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCollisionAccess().getLeftCurlyBracketKeyword_1()); }
	'{'
	{ after(grammarAccess.getCollisionAccess().getLeftCurlyBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Collision__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Collision__Group__2__Impl
	rule__Collision__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Collision__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCollisionAccess().getGroup_2()); }
	(rule__Collision__Group_2__0)?
	{ after(grammarAccess.getCollisionAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Collision__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Collision__Group__3__Impl
	rule__Collision__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Collision__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCollisionAccess().getGeometryKeyword_3()); }
	'geometry'
	{ after(grammarAccess.getCollisionAccess().getGeometryKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Collision__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Collision__Group__4__Impl
	rule__Collision__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Collision__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCollisionAccess().getGeometryAssignment_4()); }
	(rule__Collision__GeometryAssignment_4)
	{ after(grammarAccess.getCollisionAccess().getGeometryAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Collision__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Collision__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Collision__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCollisionAccess().getRightCurlyBracketKeyword_5()); }
	'}'
	{ after(grammarAccess.getCollisionAccess().getRightCurlyBracketKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Collision__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Collision__Group_2__0__Impl
	rule__Collision__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Collision__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCollisionAccess().getOriginKeyword_2_0()); }
	'origin'
	{ after(grammarAccess.getCollisionAccess().getOriginKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Collision__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Collision__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Collision__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCollisionAccess().getOriginAssignment_2_1()); }
	(rule__Collision__OriginAssignment_2_1)
	{ after(grammarAccess.getCollisionAccess().getOriginAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Mass__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Mass__Group__0__Impl
	rule__Mass__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Mass__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMassAccess().getMassAction_0()); }
	()
	{ after(grammarAccess.getMassAccess().getMassAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Mass__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Mass__Group__1__Impl
	rule__Mass__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Mass__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMassAccess().getMassKeyword_1()); }
	'Mass'
	{ after(grammarAccess.getMassAccess().getMassKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Mass__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Mass__Group__2__Impl
	rule__Mass__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Mass__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMassAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getMassAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Mass__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Mass__Group__3__Impl
	rule__Mass__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Mass__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMassAccess().getGroup_3()); }
	(rule__Mass__Group_3__0)?
	{ after(grammarAccess.getMassAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Mass__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Mass__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Mass__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMassAccess().getRightCurlyBracketKeyword_4()); }
	'}'
	{ after(grammarAccess.getMassAccess().getRightCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Mass__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Mass__Group_3__0__Impl
	rule__Mass__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Mass__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMassAccess().getValueKeyword_3_0()); }
	'value'
	{ after(grammarAccess.getMassAccess().getValueKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Mass__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Mass__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Mass__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMassAccess().getValueAssignment_3_1()); }
	(rule__Mass__ValueAssignment_3_1)
	{ after(grammarAccess.getMassAccess().getValueAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Inertia__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Inertia__Group__0__Impl
	rule__Inertia__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Inertia__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInertiaAccess().getInertiaAction_0()); }
	()
	{ after(grammarAccess.getInertiaAccess().getInertiaAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Inertia__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Inertia__Group__1__Impl
	rule__Inertia__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Inertia__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInertiaAccess().getInertiaKeyword_1()); }
	'Inertia'
	{ after(grammarAccess.getInertiaAccess().getInertiaKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Inertia__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Inertia__Group__2__Impl
	rule__Inertia__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Inertia__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInertiaAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getInertiaAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Inertia__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Inertia__Group__3__Impl
	rule__Inertia__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Inertia__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInertiaAccess().getGroup_3()); }
	(rule__Inertia__Group_3__0)?
	{ after(grammarAccess.getInertiaAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Inertia__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Inertia__Group__4__Impl
	rule__Inertia__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Inertia__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInertiaAccess().getGroup_4()); }
	(rule__Inertia__Group_4__0)?
	{ after(grammarAccess.getInertiaAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Inertia__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Inertia__Group__5__Impl
	rule__Inertia__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Inertia__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInertiaAccess().getGroup_5()); }
	(rule__Inertia__Group_5__0)?
	{ after(grammarAccess.getInertiaAccess().getGroup_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Inertia__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Inertia__Group__6__Impl
	rule__Inertia__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Inertia__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInertiaAccess().getGroup_6()); }
	(rule__Inertia__Group_6__0)?
	{ after(grammarAccess.getInertiaAccess().getGroup_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Inertia__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Inertia__Group__7__Impl
	rule__Inertia__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Inertia__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInertiaAccess().getGroup_7()); }
	(rule__Inertia__Group_7__0)?
	{ after(grammarAccess.getInertiaAccess().getGroup_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Inertia__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Inertia__Group__8__Impl
	rule__Inertia__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__Inertia__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInertiaAccess().getGroup_8()); }
	(rule__Inertia__Group_8__0)?
	{ after(grammarAccess.getInertiaAccess().getGroup_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Inertia__Group__9
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Inertia__Group__9__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Inertia__Group__9__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInertiaAccess().getRightCurlyBracketKeyword_9()); }
	'}'
	{ after(grammarAccess.getInertiaAccess().getRightCurlyBracketKeyword_9()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Inertia__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Inertia__Group_3__0__Impl
	rule__Inertia__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Inertia__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInertiaAccess().getIxxKeyword_3_0()); }
	'ixx'
	{ after(grammarAccess.getInertiaAccess().getIxxKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Inertia__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Inertia__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Inertia__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInertiaAccess().getIxxAssignment_3_1()); }
	(rule__Inertia__IxxAssignment_3_1)
	{ after(grammarAccess.getInertiaAccess().getIxxAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Inertia__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Inertia__Group_4__0__Impl
	rule__Inertia__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Inertia__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInertiaAccess().getIxyKeyword_4_0()); }
	'ixy'
	{ after(grammarAccess.getInertiaAccess().getIxyKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Inertia__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Inertia__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Inertia__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInertiaAccess().getIxyAssignment_4_1()); }
	(rule__Inertia__IxyAssignment_4_1)
	{ after(grammarAccess.getInertiaAccess().getIxyAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Inertia__Group_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Inertia__Group_5__0__Impl
	rule__Inertia__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Inertia__Group_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInertiaAccess().getIxzKeyword_5_0()); }
	'ixz'
	{ after(grammarAccess.getInertiaAccess().getIxzKeyword_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Inertia__Group_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Inertia__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Inertia__Group_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInertiaAccess().getIxzAssignment_5_1()); }
	(rule__Inertia__IxzAssignment_5_1)
	{ after(grammarAccess.getInertiaAccess().getIxzAssignment_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Inertia__Group_6__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Inertia__Group_6__0__Impl
	rule__Inertia__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Inertia__Group_6__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInertiaAccess().getIyyKeyword_6_0()); }
	'iyy'
	{ after(grammarAccess.getInertiaAccess().getIyyKeyword_6_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Inertia__Group_6__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Inertia__Group_6__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Inertia__Group_6__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInertiaAccess().getIyyAssignment_6_1()); }
	(rule__Inertia__IyyAssignment_6_1)
	{ after(grammarAccess.getInertiaAccess().getIyyAssignment_6_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Inertia__Group_7__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Inertia__Group_7__0__Impl
	rule__Inertia__Group_7__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Inertia__Group_7__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInertiaAccess().getIyzKeyword_7_0()); }
	'iyz'
	{ after(grammarAccess.getInertiaAccess().getIyzKeyword_7_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Inertia__Group_7__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Inertia__Group_7__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Inertia__Group_7__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInertiaAccess().getIyzAssignment_7_1()); }
	(rule__Inertia__IyzAssignment_7_1)
	{ after(grammarAccess.getInertiaAccess().getIyzAssignment_7_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Inertia__Group_8__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Inertia__Group_8__0__Impl
	rule__Inertia__Group_8__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Inertia__Group_8__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInertiaAccess().getIzzKeyword_8_0()); }
	'izz'
	{ after(grammarAccess.getInertiaAccess().getIzzKeyword_8_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Inertia__Group_8__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Inertia__Group_8__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Inertia__Group_8__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInertiaAccess().getIzzAssignment_8_1()); }
	(rule__Inertia__IzzAssignment_8_1)
	{ after(grammarAccess.getInertiaAccess().getIzzAssignment_8_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Geometry__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Geometry__Group__0__Impl
	rule__Geometry__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Geometry__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGeometryAccess().getGeometryAction_0()); }
	()
	{ after(grammarAccess.getGeometryAccess().getGeometryAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Geometry__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Geometry__Group__1__Impl
	rule__Geometry__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Geometry__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGeometryAccess().getGeometryKeyword_1()); }
	'Geometry'
	{ after(grammarAccess.getGeometryAccess().getGeometryKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Geometry__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Geometry__Group__2__Impl
	rule__Geometry__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Geometry__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGeometryAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getGeometryAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Geometry__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Geometry__Group__3__Impl
	rule__Geometry__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Geometry__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGeometryAccess().getGroup_3()); }
	(rule__Geometry__Group_3__0)?
	{ after(grammarAccess.getGeometryAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Geometry__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Geometry__Group__4__Impl
	rule__Geometry__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Geometry__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGeometryAccess().getGroup_4()); }
	(rule__Geometry__Group_4__0)?
	{ after(grammarAccess.getGeometryAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Geometry__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Geometry__Group__5__Impl
	rule__Geometry__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Geometry__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGeometryAccess().getGroup_5()); }
	(rule__Geometry__Group_5__0)?
	{ after(grammarAccess.getGeometryAccess().getGroup_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Geometry__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Geometry__Group__6__Impl
	rule__Geometry__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Geometry__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGeometryAccess().getGroup_6()); }
	(rule__Geometry__Group_6__0)?
	{ after(grammarAccess.getGeometryAccess().getGroup_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Geometry__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Geometry__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Geometry__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGeometryAccess().getRightCurlyBracketKeyword_7()); }
	'}'
	{ after(grammarAccess.getGeometryAccess().getRightCurlyBracketKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Geometry__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Geometry__Group_3__0__Impl
	rule__Geometry__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Geometry__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGeometryAccess().getBoxKeyword_3_0()); }
	'box'
	{ after(grammarAccess.getGeometryAccess().getBoxKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Geometry__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Geometry__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Geometry__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGeometryAccess().getBoxAssignment_3_1()); }
	(rule__Geometry__BoxAssignment_3_1)
	{ after(grammarAccess.getGeometryAccess().getBoxAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Geometry__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Geometry__Group_4__0__Impl
	rule__Geometry__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Geometry__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGeometryAccess().getCylinderKeyword_4_0()); }
	'cylinder'
	{ after(grammarAccess.getGeometryAccess().getCylinderKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Geometry__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Geometry__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Geometry__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGeometryAccess().getCylinderAssignment_4_1()); }
	(rule__Geometry__CylinderAssignment_4_1)
	{ after(grammarAccess.getGeometryAccess().getCylinderAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Geometry__Group_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Geometry__Group_5__0__Impl
	rule__Geometry__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Geometry__Group_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGeometryAccess().getSphereKeyword_5_0()); }
	'sphere'
	{ after(grammarAccess.getGeometryAccess().getSphereKeyword_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Geometry__Group_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Geometry__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Geometry__Group_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGeometryAccess().getSphereAssignment_5_1()); }
	(rule__Geometry__SphereAssignment_5_1)
	{ after(grammarAccess.getGeometryAccess().getSphereAssignment_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Geometry__Group_6__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Geometry__Group_6__0__Impl
	rule__Geometry__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Geometry__Group_6__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGeometryAccess().getMeshKeyword_6_0()); }
	'mesh'
	{ after(grammarAccess.getGeometryAccess().getMeshKeyword_6_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Geometry__Group_6__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Geometry__Group_6__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Geometry__Group_6__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGeometryAccess().getMeshAssignment_6_1()); }
	(rule__Geometry__MeshAssignment_6_1)
	{ after(grammarAccess.getGeometryAccess().getMeshAssignment_6_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Box__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Box__Group__0__Impl
	rule__Box__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Box__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBoxAccess().getBoxAction_0()); }
	()
	{ after(grammarAccess.getBoxAccess().getBoxAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Box__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Box__Group__1__Impl
	rule__Box__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Box__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBoxAccess().getBoxKeyword_1()); }
	'Box'
	{ after(grammarAccess.getBoxAccess().getBoxKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Box__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Box__Group__2__Impl
	rule__Box__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Box__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBoxAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getBoxAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Box__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Box__Group__3__Impl
	rule__Box__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Box__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBoxAccess().getGroup_3()); }
	(rule__Box__Group_3__0)?
	{ after(grammarAccess.getBoxAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Box__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Box__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Box__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBoxAccess().getRightCurlyBracketKeyword_4()); }
	'}'
	{ after(grammarAccess.getBoxAccess().getRightCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Box__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Box__Group_3__0__Impl
	rule__Box__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Box__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBoxAccess().getSizeKeyword_3_0()); }
	'size'
	{ after(grammarAccess.getBoxAccess().getSizeKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Box__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Box__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Box__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBoxAccess().getSizeAssignment_3_1()); }
	(rule__Box__SizeAssignment_3_1)
	{ after(grammarAccess.getBoxAccess().getSizeAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Cylinder__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Cylinder__Group__0__Impl
	rule__Cylinder__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Cylinder__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCylinderAccess().getCylinderKeyword_0()); }
	'Cylinder'
	{ after(grammarAccess.getCylinderAccess().getCylinderKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Cylinder__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Cylinder__Group__1__Impl
	rule__Cylinder__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Cylinder__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCylinderAccess().getLeftCurlyBracketKeyword_1()); }
	'{'
	{ after(grammarAccess.getCylinderAccess().getLeftCurlyBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Cylinder__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Cylinder__Group__2__Impl
	rule__Cylinder__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Cylinder__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCylinderAccess().getLengthKeyword_2()); }
	'length'
	{ after(grammarAccess.getCylinderAccess().getLengthKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Cylinder__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Cylinder__Group__3__Impl
	rule__Cylinder__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Cylinder__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCylinderAccess().getLengthAssignment_3()); }
	(rule__Cylinder__LengthAssignment_3)
	{ after(grammarAccess.getCylinderAccess().getLengthAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Cylinder__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Cylinder__Group__4__Impl
	rule__Cylinder__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Cylinder__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCylinderAccess().getRadiusKeyword_4()); }
	'radius'
	{ after(grammarAccess.getCylinderAccess().getRadiusKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Cylinder__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Cylinder__Group__5__Impl
	rule__Cylinder__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Cylinder__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCylinderAccess().getRadiusAssignment_5()); }
	(rule__Cylinder__RadiusAssignment_5)
	{ after(grammarAccess.getCylinderAccess().getRadiusAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Cylinder__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Cylinder__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Cylinder__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCylinderAccess().getRightCurlyBracketKeyword_6()); }
	'}'
	{ after(grammarAccess.getCylinderAccess().getRightCurlyBracketKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Sphere__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Sphere__Group__0__Impl
	rule__Sphere__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Sphere__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSphereAccess().getSphereKeyword_0()); }
	'Sphere'
	{ after(grammarAccess.getSphereAccess().getSphereKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sphere__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Sphere__Group__1__Impl
	rule__Sphere__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Sphere__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSphereAccess().getLeftCurlyBracketKeyword_1()); }
	'{'
	{ after(grammarAccess.getSphereAccess().getLeftCurlyBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sphere__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Sphere__Group__2__Impl
	rule__Sphere__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Sphere__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSphereAccess().getRadiusKeyword_2()); }
	'radius'
	{ after(grammarAccess.getSphereAccess().getRadiusKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sphere__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Sphere__Group__3__Impl
	rule__Sphere__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Sphere__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSphereAccess().getRadiusAssignment_3()); }
	(rule__Sphere__RadiusAssignment_3)
	{ after(grammarAccess.getSphereAccess().getRadiusAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sphere__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Sphere__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Sphere__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSphereAccess().getRightCurlyBracketKeyword_4()); }
	'}'
	{ after(grammarAccess.getSphereAccess().getRightCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Mesh__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Mesh__Group__0__Impl
	rule__Mesh__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Mesh__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMeshAccess().getMeshKeyword_0()); }
	'Mesh'
	{ after(grammarAccess.getMeshAccess().getMeshKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Mesh__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Mesh__Group__1__Impl
	rule__Mesh__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Mesh__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMeshAccess().getLeftCurlyBracketKeyword_1()); }
	'{'
	{ after(grammarAccess.getMeshAccess().getLeftCurlyBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Mesh__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Mesh__Group__2__Impl
	rule__Mesh__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Mesh__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMeshAccess().getFilenameKeyword_2()); }
	'filename'
	{ after(grammarAccess.getMeshAccess().getFilenameKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Mesh__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Mesh__Group__3__Impl
	rule__Mesh__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Mesh__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMeshAccess().getFilenameAssignment_3()); }
	(rule__Mesh__FilenameAssignment_3)
	{ after(grammarAccess.getMeshAccess().getFilenameAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Mesh__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Mesh__Group__4__Impl
	rule__Mesh__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Mesh__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMeshAccess().getGroup_4()); }
	(rule__Mesh__Group_4__0)?
	{ after(grammarAccess.getMeshAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Mesh__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Mesh__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Mesh__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMeshAccess().getRightCurlyBracketKeyword_5()); }
	'}'
	{ after(grammarAccess.getMeshAccess().getRightCurlyBracketKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Mesh__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Mesh__Group_4__0__Impl
	rule__Mesh__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Mesh__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMeshAccess().getScaleKeyword_4_0()); }
	'scale'
	{ after(grammarAccess.getMeshAccess().getScaleKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Mesh__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Mesh__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Mesh__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMeshAccess().getScaleAssignment_4_1()); }
	(rule__Mesh__ScaleAssignment_4_1)
	{ after(grammarAccess.getMeshAccess().getScaleAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Axis__XyzAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAxisAccess().getXyzEStringParserRuleCall_3_1_0()); }
		ruleEString
		{ after(grammarAccess.getAxisAccess().getXyzEStringParserRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Pose__RpyAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPoseAccess().getRpyEStringParserRuleCall_3_1_0()); }
		ruleEString
		{ after(grammarAccess.getPoseAccess().getRpyEStringParserRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Pose__XyzAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPoseAccess().getXyzEStringParserRuleCall_4_1_0()); }
		ruleEString
		{ after(grammarAccess.getPoseAccess().getXyzEStringParserRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Limit__EffortAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLimitAccess().getEffortDouble0ParserRuleCall_3_1_0()); }
		ruleDouble0
		{ after(grammarAccess.getLimitAccess().getEffortDouble0ParserRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Limit__LowerAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLimitAccess().getLowerDouble0ParserRuleCall_4_1_0()); }
		ruleDouble0
		{ after(grammarAccess.getLimitAccess().getLowerDouble0ParserRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Limit__UpperAssignment_5_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLimitAccess().getUpperDouble0ParserRuleCall_5_1_0()); }
		ruleDouble0
		{ after(grammarAccess.getLimitAccess().getUpperDouble0ParserRuleCall_5_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Limit__VelocityAssignment_6_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLimitAccess().getVelocityDouble0ParserRuleCall_6_1_0()); }
		ruleDouble0
		{ after(grammarAccess.getLimitAccess().getVelocityDouble0ParserRuleCall_6_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Inertial__OriginAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInertialAccess().getOriginPoseParserRuleCall_3_1_0()); }
		rulePose
		{ after(grammarAccess.getInertialAccess().getOriginPoseParserRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Inertial__MassAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInertialAccess().getMassMassParserRuleCall_4_1_0()); }
		ruleMass
		{ after(grammarAccess.getInertialAccess().getMassMassParserRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Inertial__InertiaAssignment_5_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInertialAccess().getInertiaInertiaParserRuleCall_5_1_0()); }
		ruleInertia
		{ after(grammarAccess.getInertialAccess().getInertiaInertiaParserRuleCall_5_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Visual__OriginAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVisualAccess().getOriginPoseParserRuleCall_2_1_0()); }
		rulePose
		{ after(grammarAccess.getVisualAccess().getOriginPoseParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Visual__GeometryAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVisualAccess().getGeometryGeometryParserRuleCall_4_0()); }
		ruleGeometry
		{ after(grammarAccess.getVisualAccess().getGeometryGeometryParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Collision__OriginAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCollisionAccess().getOriginPoseParserRuleCall_2_1_0()); }
		rulePose
		{ after(grammarAccess.getCollisionAccess().getOriginPoseParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Collision__GeometryAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCollisionAccess().getGeometryGeometryParserRuleCall_4_0()); }
		ruleGeometry
		{ after(grammarAccess.getCollisionAccess().getGeometryGeometryParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Mass__ValueAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMassAccess().getValueDouble0ParserRuleCall_3_1_0()); }
		ruleDouble0
		{ after(grammarAccess.getMassAccess().getValueDouble0ParserRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Inertia__IxxAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInertiaAccess().getIxxDouble0ParserRuleCall_3_1_0()); }
		ruleDouble0
		{ after(grammarAccess.getInertiaAccess().getIxxDouble0ParserRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Inertia__IxyAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInertiaAccess().getIxyDouble0ParserRuleCall_4_1_0()); }
		ruleDouble0
		{ after(grammarAccess.getInertiaAccess().getIxyDouble0ParserRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Inertia__IxzAssignment_5_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInertiaAccess().getIxzDouble0ParserRuleCall_5_1_0()); }
		ruleDouble0
		{ after(grammarAccess.getInertiaAccess().getIxzDouble0ParserRuleCall_5_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Inertia__IyyAssignment_6_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInertiaAccess().getIyyDouble0ParserRuleCall_6_1_0()); }
		ruleDouble0
		{ after(grammarAccess.getInertiaAccess().getIyyDouble0ParserRuleCall_6_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Inertia__IyzAssignment_7_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInertiaAccess().getIyzDouble0ParserRuleCall_7_1_0()); }
		ruleDouble0
		{ after(grammarAccess.getInertiaAccess().getIyzDouble0ParserRuleCall_7_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Inertia__IzzAssignment_8_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInertiaAccess().getIzzDouble0ParserRuleCall_8_1_0()); }
		ruleDouble0
		{ after(grammarAccess.getInertiaAccess().getIzzDouble0ParserRuleCall_8_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Geometry__BoxAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGeometryAccess().getBoxBoxParserRuleCall_3_1_0()); }
		ruleBox
		{ after(grammarAccess.getGeometryAccess().getBoxBoxParserRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Geometry__CylinderAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGeometryAccess().getCylinderCylinderParserRuleCall_4_1_0()); }
		ruleCylinder
		{ after(grammarAccess.getGeometryAccess().getCylinderCylinderParserRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Geometry__SphereAssignment_5_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGeometryAccess().getSphereSphereParserRuleCall_5_1_0()); }
		ruleSphere
		{ after(grammarAccess.getGeometryAccess().getSphereSphereParserRuleCall_5_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Geometry__MeshAssignment_6_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGeometryAccess().getMeshMeshParserRuleCall_6_1_0()); }
		ruleMesh
		{ after(grammarAccess.getGeometryAccess().getMeshMeshParserRuleCall_6_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Box__SizeAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBoxAccess().getSizeEStringParserRuleCall_3_1_0()); }
		ruleEString
		{ after(grammarAccess.getBoxAccess().getSizeEStringParserRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Cylinder__LengthAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCylinderAccess().getLengthDouble0ParserRuleCall_3_0()); }
		ruleDouble0
		{ after(grammarAccess.getCylinderAccess().getLengthDouble0ParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Cylinder__RadiusAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCylinderAccess().getRadiusDouble0ParserRuleCall_5_0()); }
		ruleDouble0
		{ after(grammarAccess.getCylinderAccess().getRadiusDouble0ParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sphere__RadiusAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSphereAccess().getRadiusDouble0ParserRuleCall_3_0()); }
		ruleDouble0
		{ after(grammarAccess.getSphereAccess().getRadiusDouble0ParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Mesh__FilenameAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMeshAccess().getFilenameSTRINGTerminalRuleCall_3_0()); }
		RULE_STRING
		{ after(grammarAccess.getMeshAccess().getFilenameSTRINGTerminalRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Mesh__ScaleAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMeshAccess().getScaleEStringParserRuleCall_4_1_0()); }
		ruleEString
		{ after(grammarAccess.getMeshAccess().getScaleEStringParserRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

fragment RULE_DIGIT : '0'..'9';

RULE_BOOLEAN : ('true'|'false');

RULE_DOUBLE : RULE_DECINT ('.' RULE_DIGIT*|('.' RULE_DIGIT*)? ('E'|'e') ('-'|'+')? RULE_DECINT);

RULE_DECINT : ('0'|'1'..'9' RULE_DIGIT*|'-' '0'..'9' RULE_DIGIT*);

RULE_JOINTTYPE : ('revolute'|'continuous'|'prismatic'|'fixed'|'floating'|'planar');

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
