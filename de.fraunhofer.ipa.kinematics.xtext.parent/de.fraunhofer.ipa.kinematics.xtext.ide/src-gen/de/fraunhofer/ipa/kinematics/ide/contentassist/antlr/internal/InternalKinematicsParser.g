/*
 * generated by Xtext 2.26.0
 */
parser grammar InternalKinematicsParser;

options {
	tokenVocab=InternalKinematicsLexer;
	superClass=AbstractInternalContentAssistParser;
}

@header {
package de.fraunhofer.ipa.kinematics.ide.contentassist.antlr.internal;
import java.util.Map;
import java.util.HashMap;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import de.fraunhofer.ipa.kinematics.services.KinematicsGrammarAccess;

}
@members {
	private KinematicsGrammarAccess grammarAccess;
	private final Map<String, String> tokenNameToValue = new HashMap<String, String>();
	
	{
		tokenNameToValue.put("HyphenMinus", "'-'");
		tokenNameToValue.put("DigitZero", "'0'");
		tokenNameToValue.put("DigitOne", "'1'");
		tokenNameToValue.put("DigitTwo", "'2'");
		tokenNameToValue.put("Colon", "':'");
		tokenNameToValue.put("Box", "'box:'");
		tokenNameToValue.put("Ixx", "'ixx:'");
		tokenNameToValue.put("Ixy", "'ixy:'");
		tokenNameToValue.put("Ixz", "'ixz:'");
		tokenNameToValue.put("Iyy", "'iyy:'");
		tokenNameToValue.put("Iyz", "'iyz:'");
		tokenNameToValue.put("Izz", "'izz:'");
		tokenNameToValue.put("Rpy", "'rpy:'");
		tokenNameToValue.put("Size", "'size'");
		tokenNameToValue.put("Xyz", "'xyz:'");
		tokenNameToValue.put("Axis", "'axis:'");
		tokenNameToValue.put("Link", "'link:'");
		tokenNameToValue.put("Mass", "'mass:'");
		tokenNameToValue.put("Mesh", "'mesh:'");
		tokenNameToValue.put("Name", "'name:'");
		tokenNameToValue.put("Type", "'type:'");
		tokenNameToValue.put("Value", "'value'");
		tokenNameToValue.put("AnyURI", "'AnyURI'");
		tokenNameToValue.put("Child", "'child:'");
		tokenNameToValue.put("Joint", "'joint:'");
		tokenNameToValue.put("Limit", "'limit:'");
		tokenNameToValue.put("Lower", "'lower:'");
		tokenNameToValue.put("Scale", "'scale:'");
		tokenNameToValue.put("Upper", "'upper:'");
		tokenNameToValue.put("Default", "'default'");
		tokenNameToValue.put("Effort", "'effort:'");
		tokenNameToValue.put("Length", "'length:'");
		tokenNameToValue.put("Macros", "'macros:'");
		tokenNameToValue.put("Origin", "'origin:'");
		tokenNameToValue.put("Parent", "'parent:'");
		tokenNameToValue.put("Radius", "'radius:'");
		tokenNameToValue.put("Sphere", "'sphere:'");
		tokenNameToValue.put("Visual", "'visual:'");
		tokenNameToValue.put("Inertia", "'inertia:'");
		tokenNameToValue.put("Cylinder", "'cylinder:'");
		tokenNameToValue.put("Filename", "'filename:'");
		tokenNameToValue.put("Geometry", "'geometry:'");
		tokenNameToValue.put("Inertial", "'inertial:'");
		tokenNameToValue.put("Velocity", "'velocity:'");
		tokenNameToValue.put("Collision", "'collision:'");
		tokenNameToValue.put("Parameters", "'parameters:'");
		tokenNameToValue.put("Xacrorobot", "'xacrorobot:'");
	}

	public void setGrammarAccess(KinematicsGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		String result = tokenNameToValue.get(tokenName);
		if (result == null)
			result = tokenName;
		return result;
	}
}

// Entry rule entryRuleRobot
entryRuleRobot
:
{ before(grammarAccess.getRobotRule()); }
	 ruleRobot
{ after(grammarAccess.getRobotRule()); } 
	 EOF 
;

// Rule Robot
ruleRobot 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRobotAccess().getGroup()); }
		(rule__Robot__Group__0)
		{ after(grammarAccess.getRobotAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMacro
entryRuleMacro
:
{ before(grammarAccess.getMacroRule()); }
	 ruleMacro
{ after(grammarAccess.getMacroRule()); } 
	 EOF 
;

// Rule Macro
ruleMacro 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMacroAccess().getGroup()); }
		(rule__Macro__Group__0)
		{ after(grammarAccess.getMacroAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleParameter
entryRuleParameter
:
{ before(grammarAccess.getParameterRule()); }
	 ruleParameter
{ after(grammarAccess.getParameterRule()); } 
	 EOF 
;

// Rule Parameter
ruleParameter 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getParameterAccess().getGroup()); }
		(rule__Parameter__Group__0)
		{ after(grammarAccess.getParameterAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleJoint
entryRuleJoint
:
{ before(grammarAccess.getJointRule()); }
	 ruleJoint
{ after(grammarAccess.getJointRule()); } 
	 EOF 
;

// Rule Joint
ruleJoint 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getJointAccess().getGroup()); }
		(rule__Joint__Group__0)
		{ after(grammarAccess.getJointAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLink
entryRuleLink
:
{ before(grammarAccess.getLinkRule()); }
	 ruleLink
{ after(grammarAccess.getLinkRule()); } 
	 EOF 
;

// Rule Link
ruleLink 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLinkAccess().getGroup()); }
		(rule__Link__Group__0)
		{ after(grammarAccess.getLinkAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePose
entryRulePose
:
{ before(grammarAccess.getPoseRule()); }
	 rulePose
{ after(grammarAccess.getPoseRule()); } 
	 EOF 
;

// Rule Pose
rulePose 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPoseAccess().getGroup()); }
		(rule__Pose__Group__0)
		{ after(grammarAccess.getPoseAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleVector3
entryRuleVector3
:
{ before(grammarAccess.getVector3Rule()); }
	 ruleVector3
{ after(grammarAccess.getVector3Rule()); } 
	 EOF 
;

// Rule Vector3
ruleVector3 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getVector3Access().getGroup()); }
		(rule__Vector3__Group__0)
		{ after(grammarAccess.getVector3Access().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLimit
entryRuleLimit
:
{ before(grammarAccess.getLimitRule()); }
	 ruleLimit
{ after(grammarAccess.getLimitRule()); } 
	 EOF 
;

// Rule Limit
ruleLimit 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLimitAccess().getGroup()); }
		(rule__Limit__Group__0)
		{ after(grammarAccess.getLimitAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleInertial
entryRuleInertial
:
{ before(grammarAccess.getInertialRule()); }
	 ruleInertial
{ after(grammarAccess.getInertialRule()); } 
	 EOF 
;

// Rule Inertial
ruleInertial 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getInertialAccess().getGroup()); }
		(rule__Inertial__Group__0)
		{ after(grammarAccess.getInertialAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleVisual
entryRuleVisual
:
{ before(grammarAccess.getVisualRule()); }
	 ruleVisual
{ after(grammarAccess.getVisualRule()); } 
	 EOF 
;

// Rule Visual
ruleVisual 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getVisualAccess().getGroup()); }
		(rule__Visual__Group__0)
		{ after(grammarAccess.getVisualAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCollision
entryRuleCollision
:
{ before(grammarAccess.getCollisionRule()); }
	 ruleCollision
{ after(grammarAccess.getCollisionRule()); } 
	 EOF 
;

// Rule Collision
ruleCollision 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCollisionAccess().getGroup()); }
		(rule__Collision__Group__0)
		{ after(grammarAccess.getCollisionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMass
entryRuleMass
:
{ before(grammarAccess.getMassRule()); }
	 ruleMass
{ after(grammarAccess.getMassRule()); } 
	 EOF 
;

// Rule Mass
ruleMass 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMassAccess().getGroup()); }
		(rule__Mass__Group__0)
		{ after(grammarAccess.getMassAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleInertia
entryRuleInertia
:
{ before(grammarAccess.getInertiaRule()); }
	 ruleInertia
{ after(grammarAccess.getInertiaRule()); } 
	 EOF 
;

// Rule Inertia
ruleInertia 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getInertiaAccess().getGroup()); }
		(rule__Inertia__Group__0)
		{ after(grammarAccess.getInertiaAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleGeometry
entryRuleGeometry
:
{ before(grammarAccess.getGeometryRule()); }
	 ruleGeometry
{ after(grammarAccess.getGeometryRule()); } 
	 EOF 
;

// Rule Geometry
ruleGeometry 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getGeometryAccess().getGroup()); }
		(rule__Geometry__Group__0)
		{ after(grammarAccess.getGeometryAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBox
entryRuleBox
:
{ before(grammarAccess.getBoxRule()); }
	 ruleBox
{ after(grammarAccess.getBoxRule()); } 
	 EOF 
;

// Rule Box
ruleBox 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBoxAccess().getGroup()); }
		(rule__Box__Group__0)
		{ after(grammarAccess.getBoxAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCylinder
entryRuleCylinder
:
{ before(grammarAccess.getCylinderRule()); }
	 ruleCylinder
{ after(grammarAccess.getCylinderRule()); } 
	 EOF 
;

// Rule Cylinder
ruleCylinder 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCylinderAccess().getGroup()); }
		(rule__Cylinder__Group__0)
		{ after(grammarAccess.getCylinderAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSphere
entryRuleSphere
:
{ before(grammarAccess.getSphereRule()); }
	 ruleSphere
{ after(grammarAccess.getSphereRule()); } 
	 EOF 
;

// Rule Sphere
ruleSphere 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSphereAccess().getGroup()); }
		(rule__Sphere__Group__0)
		{ after(grammarAccess.getSphereAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMesh
entryRuleMesh
:
{ before(grammarAccess.getMeshRule()); }
	 ruleMesh
{ after(grammarAccess.getMeshRule()); } 
	 EOF 
;

// Rule Mesh
ruleMesh 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMeshAccess().getGroup()); }
		(rule__Mesh__Group__0)
		{ after(grammarAccess.getMeshAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEString
entryRuleEString
:
{ before(grammarAccess.getEStringRule()); }
	 ruleEString
{ after(grammarAccess.getEStringRule()); } 
	 EOF 
;

// Rule EString
ruleEString 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall()); }
		RULE_STRING
		{ after(grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDouble0
entryRuleDouble0
:
{ before(grammarAccess.getDouble0Rule()); }
	 ruleDouble0
{ after(grammarAccess.getDouble0Rule()); } 
	 EOF 
;

// Rule Double0
ruleDouble0 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDouble0Access().getDOUBLETerminalRuleCall()); }
		RULE_DOUBLE
		{ after(grammarAccess.getDouble0Access().getDOUBLETerminalRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule ParameterType
ruleParameterType
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParameterTypeAccess().getAlternatives()); }
		(rule__ParameterType__Alternatives)
		{ after(grammarAccess.getParameterTypeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterType__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParameterTypeAccess().getLinkEnumLiteralDeclaration_0()); }
		(DigitZero)
		{ after(grammarAccess.getParameterTypeAccess().getLinkEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getParameterTypeAccess().getStringEnumLiteralDeclaration_1()); }
		(DigitOne)
		{ after(grammarAccess.getParameterTypeAccess().getStringEnumLiteralDeclaration_1()); }
	)
	|
	(
		{ before(grammarAccess.getParameterTypeAccess().getPoseEnumLiteralDeclaration_2()); }
		(DigitTwo)
		{ after(grammarAccess.getParameterTypeAccess().getPoseEnumLiteralDeclaration_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Robot__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Robot__Group__0__Impl
	rule__Robot__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Robot__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRobotAccess().getXacroRobotAction_0()); }
	()
	{ after(grammarAccess.getRobotAccess().getXacroRobotAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Robot__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Robot__Group__1__Impl
	rule__Robot__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Robot__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRobotAccess().getXacrorobotKeyword_1()); }
	Xacrorobot
	{ after(grammarAccess.getRobotAccess().getXacrorobotKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Robot__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Robot__Group__2__Impl
	rule__Robot__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Robot__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRobotAccess().getBEGINTerminalRuleCall_2()); }
	RULE_BEGIN
	{ after(grammarAccess.getRobotAccess().getBEGINTerminalRuleCall_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Robot__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Robot__Group__3__Impl
	rule__Robot__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Robot__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRobotAccess().getNameKeyword_3()); }
	Name
	{ after(grammarAccess.getRobotAccess().getNameKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Robot__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Robot__Group__4__Impl
	rule__Robot__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Robot__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRobotAccess().getNameAssignment_4()); }
	(rule__Robot__NameAssignment_4)
	{ after(grammarAccess.getRobotAccess().getNameAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Robot__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Robot__Group__5__Impl
	rule__Robot__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Robot__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRobotAccess().getGroup_5()); }
	(rule__Robot__Group_5__0)?
	{ after(grammarAccess.getRobotAccess().getGroup_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Robot__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Robot__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Robot__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRobotAccess().getENDTerminalRuleCall_6()); }
	RULE_END
	{ after(grammarAccess.getRobotAccess().getENDTerminalRuleCall_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Robot__Group_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Robot__Group_5__0__Impl
	rule__Robot__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Robot__Group_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRobotAccess().getMacrosKeyword_5_0()); }
	Macros
	{ after(grammarAccess.getRobotAccess().getMacrosKeyword_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Robot__Group_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Robot__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Robot__Group_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRobotAccess().getMacrosAssignment_5_1()); }
	(rule__Robot__MacrosAssignment_5_1)*
	{ after(grammarAccess.getRobotAccess().getMacrosAssignment_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Macro__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Macro__Group__0__Impl
	rule__Macro__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Macro__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMacroAccess().getHyphenMinusKeyword_0()); }
	HyphenMinus
	{ after(grammarAccess.getMacroAccess().getHyphenMinusKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Macro__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Macro__Group__1__Impl
	rule__Macro__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Macro__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMacroAccess().getNameKeyword_1()); }
	Name
	{ after(grammarAccess.getMacroAccess().getNameKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Macro__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Macro__Group__2__Impl
	rule__Macro__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Macro__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMacroAccess().getNameAssignment_2()); }
	(rule__Macro__NameAssignment_2)
	{ after(grammarAccess.getMacroAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Macro__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Macro__Group__3__Impl
	rule__Macro__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Macro__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMacroAccess().getBEGINTerminalRuleCall_3()); }
	RULE_BEGIN
	{ after(grammarAccess.getMacroAccess().getBEGINTerminalRuleCall_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Macro__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Macro__Group__4__Impl
	rule__Macro__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Macro__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMacroAccess().getGroup_4()); }
	(rule__Macro__Group_4__0)?
	{ after(grammarAccess.getMacroAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Macro__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Macro__Group__5__Impl
	rule__Macro__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Macro__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMacroAccess().getGroup_5()); }
	(rule__Macro__Group_5__0)?
	{ after(grammarAccess.getMacroAccess().getGroup_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Macro__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Macro__Group__6__Impl
	rule__Macro__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Macro__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMacroAccess().getGroup_6()); }
	(rule__Macro__Group_6__0)?
	{ after(grammarAccess.getMacroAccess().getGroup_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Macro__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Macro__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Macro__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMacroAccess().getENDTerminalRuleCall_7()); }
	RULE_END
	{ after(grammarAccess.getMacroAccess().getENDTerminalRuleCall_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Macro__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Macro__Group_4__0__Impl
	rule__Macro__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Macro__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMacroAccess().getParametersKeyword_4_0()); }
	Parameters
	{ after(grammarAccess.getMacroAccess().getParametersKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Macro__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Macro__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Macro__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMacroAccess().getParametersAssignment_4_1()); }
	(rule__Macro__ParametersAssignment_4_1)*
	{ after(grammarAccess.getMacroAccess().getParametersAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Macro__Group_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Macro__Group_5__0__Impl
	rule__Macro__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Macro__Group_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMacroAccess().getLinkKeyword_5_0()); }
	Link
	{ after(grammarAccess.getMacroAccess().getLinkKeyword_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Macro__Group_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Macro__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Macro__Group_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMacroAccess().getLinkAssignment_5_1()); }
	(rule__Macro__LinkAssignment_5_1)*
	{ after(grammarAccess.getMacroAccess().getLinkAssignment_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Macro__Group_6__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Macro__Group_6__0__Impl
	rule__Macro__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Macro__Group_6__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMacroAccess().getJointKeyword_6_0()); }
	Joint
	{ after(grammarAccess.getMacroAccess().getJointKeyword_6_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Macro__Group_6__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Macro__Group_6__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Macro__Group_6__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMacroAccess().getJointAssignment_6_1()); }
	(rule__Macro__JointAssignment_6_1)*
	{ after(grammarAccess.getMacroAccess().getJointAssignment_6_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Parameter__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parameter__Group__0__Impl
	rule__Parameter__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterAccess().getParameterAction_0()); }
	()
	{ after(grammarAccess.getParameterAccess().getParameterAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parameter__Group__1__Impl
	rule__Parameter__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterAccess().getHyphenMinusKeyword_1()); }
	HyphenMinus
	{ after(grammarAccess.getParameterAccess().getHyphenMinusKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parameter__Group__2__Impl
	rule__Parameter__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterAccess().getNameKeyword_2()); }
	Name
	{ after(grammarAccess.getParameterAccess().getNameKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parameter__Group__3__Impl
	rule__Parameter__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterAccess().getNameAssignment_3()); }
	(rule__Parameter__NameAssignment_3)
	{ after(grammarAccess.getParameterAccess().getNameAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parameter__Group__4__Impl
	rule__Parameter__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterAccess().getBEGINTerminalRuleCall_4()); }
	RULE_BEGIN
	{ after(grammarAccess.getParameterAccess().getBEGINTerminalRuleCall_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parameter__Group__5__Impl
	rule__Parameter__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterAccess().getTypeKeyword_5()); }
	Type
	{ after(grammarAccess.getParameterAccess().getTypeKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parameter__Group__6__Impl
	rule__Parameter__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterAccess().getTypeAssignment_6()); }
	(rule__Parameter__TypeAssignment_6)
	{ after(grammarAccess.getParameterAccess().getTypeAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parameter__Group__7__Impl
	rule__Parameter__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterAccess().getGroup_7()); }
	(rule__Parameter__Group_7__0)?
	{ after(grammarAccess.getParameterAccess().getGroup_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parameter__Group__8__Impl
	rule__Parameter__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterAccess().getGroup_8()); }
	(rule__Parameter__Group_8__0)?
	{ after(grammarAccess.getParameterAccess().getGroup_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group__9
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parameter__Group__9__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group__9__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterAccess().getENDTerminalRuleCall_9()); }
	RULE_END
	{ after(grammarAccess.getParameterAccess().getENDTerminalRuleCall_9()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Parameter__Group_7__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parameter__Group_7__0__Impl
	rule__Parameter__Group_7__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group_7__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterAccess().getDefaultKeyword_7_0()); }
	Default
	{ after(grammarAccess.getParameterAccess().getDefaultKeyword_7_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group_7__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parameter__Group_7__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group_7__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterAccess().getDefaultAssignment_7_1()); }
	(rule__Parameter__DefaultAssignment_7_1)
	{ after(grammarAccess.getParameterAccess().getDefaultAssignment_7_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Parameter__Group_8__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parameter__Group_8__0__Impl
	rule__Parameter__Group_8__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group_8__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterAccess().getValueKeyword_8_0()); }
	Value
	{ after(grammarAccess.getParameterAccess().getValueKeyword_8_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group_8__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parameter__Group_8__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group_8__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterAccess().getValueAssignment_8_1()); }
	(rule__Parameter__ValueAssignment_8_1)
	{ after(grammarAccess.getParameterAccess().getValueAssignment_8_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Joint__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Joint__Group__0__Impl
	rule__Joint__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Joint__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJointAccess().getHyphenMinusKeyword_0()); }
	HyphenMinus
	{ after(grammarAccess.getJointAccess().getHyphenMinusKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Joint__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Joint__Group__1__Impl
	rule__Joint__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Joint__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJointAccess().getNameKeyword_1()); }
	Name
	{ after(grammarAccess.getJointAccess().getNameKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Joint__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Joint__Group__2__Impl
	rule__Joint__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Joint__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJointAccess().getNameAssignment_2()); }
	(rule__Joint__NameAssignment_2)
	{ after(grammarAccess.getJointAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Joint__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Joint__Group__3__Impl
	rule__Joint__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Joint__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJointAccess().getBEGINTerminalRuleCall_3()); }
	RULE_BEGIN
	{ after(grammarAccess.getJointAccess().getBEGINTerminalRuleCall_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Joint__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Joint__Group__4__Impl
	rule__Joint__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Joint__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJointAccess().getTypeKeyword_4()); }
	Type
	{ after(grammarAccess.getJointAccess().getTypeKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Joint__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Joint__Group__5__Impl
	rule__Joint__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Joint__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJointAccess().getTypeAssignment_5()); }
	(rule__Joint__TypeAssignment_5)
	{ after(grammarAccess.getJointAccess().getTypeAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Joint__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Joint__Group__6__Impl
	rule__Joint__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Joint__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJointAccess().getParentKeyword_6()); }
	Parent
	{ after(grammarAccess.getJointAccess().getParentKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Joint__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Joint__Group__7__Impl
	rule__Joint__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Joint__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJointAccess().getParentAssignment_7()); }
	(rule__Joint__ParentAssignment_7)
	{ after(grammarAccess.getJointAccess().getParentAssignment_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Joint__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Joint__Group__8__Impl
	rule__Joint__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__Joint__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJointAccess().getChildKeyword_8()); }
	Child
	{ after(grammarAccess.getJointAccess().getChildKeyword_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Joint__Group__9
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Joint__Group__9__Impl
	rule__Joint__Group__10
;
finally {
	restoreStackSize(stackSize);
}

rule__Joint__Group__9__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJointAccess().getChildAssignment_9()); }
	(rule__Joint__ChildAssignment_9)
	{ after(grammarAccess.getJointAccess().getChildAssignment_9()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Joint__Group__10
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Joint__Group__10__Impl
	rule__Joint__Group__11
;
finally {
	restoreStackSize(stackSize);
}

rule__Joint__Group__10__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJointAccess().getOriginKeyword_10()); }
	Origin
	{ after(grammarAccess.getJointAccess().getOriginKeyword_10()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Joint__Group__11
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Joint__Group__11__Impl
	rule__Joint__Group__12
;
finally {
	restoreStackSize(stackSize);
}

rule__Joint__Group__11__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJointAccess().getOriginAssignment_11()); }
	(rule__Joint__OriginAssignment_11)
	{ after(grammarAccess.getJointAccess().getOriginAssignment_11()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Joint__Group__12
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Joint__Group__12__Impl
	rule__Joint__Group__13
;
finally {
	restoreStackSize(stackSize);
}

rule__Joint__Group__12__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJointAccess().getGroup_12()); }
	(rule__Joint__Group_12__0)?
	{ after(grammarAccess.getJointAccess().getGroup_12()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Joint__Group__13
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Joint__Group__13__Impl
	rule__Joint__Group__14
;
finally {
	restoreStackSize(stackSize);
}

rule__Joint__Group__13__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJointAccess().getGroup_13()); }
	(rule__Joint__Group_13__0)?
	{ after(grammarAccess.getJointAccess().getGroup_13()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Joint__Group__14
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Joint__Group__14__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Joint__Group__14__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJointAccess().getENDTerminalRuleCall_14()); }
	RULE_END
	{ after(grammarAccess.getJointAccess().getENDTerminalRuleCall_14()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Joint__Group_12__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Joint__Group_12__0__Impl
	rule__Joint__Group_12__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Joint__Group_12__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJointAccess().getAxisKeyword_12_0()); }
	Axis
	{ after(grammarAccess.getJointAccess().getAxisKeyword_12_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Joint__Group_12__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Joint__Group_12__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Joint__Group_12__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJointAccess().getAxisAssignment_12_1()); }
	(rule__Joint__AxisAssignment_12_1)
	{ after(grammarAccess.getJointAccess().getAxisAssignment_12_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Joint__Group_13__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Joint__Group_13__0__Impl
	rule__Joint__Group_13__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Joint__Group_13__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJointAccess().getLimitKeyword_13_0()); }
	Limit
	{ after(grammarAccess.getJointAccess().getLimitKeyword_13_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Joint__Group_13__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Joint__Group_13__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Joint__Group_13__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJointAccess().getLimitAssignment_13_1()); }
	(rule__Joint__LimitAssignment_13_1)
	{ after(grammarAccess.getJointAccess().getLimitAssignment_13_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Link__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Link__Group__0__Impl
	rule__Link__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Link__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLinkAccess().getHyphenMinusKeyword_0()); }
	HyphenMinus
	{ after(grammarAccess.getLinkAccess().getHyphenMinusKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Link__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Link__Group__1__Impl
	rule__Link__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Link__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLinkAccess().getNameKeyword_1()); }
	Name
	{ after(grammarAccess.getLinkAccess().getNameKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Link__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Link__Group__2__Impl
	rule__Link__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Link__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLinkAccess().getNameAssignment_2()); }
	(rule__Link__NameAssignment_2)
	{ after(grammarAccess.getLinkAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Link__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Link__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Link__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLinkAccess().getGroup_3()); }
	(rule__Link__Group_3__0)?
	{ after(grammarAccess.getLinkAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Link__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Link__Group_3__0__Impl
	rule__Link__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Link__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLinkAccess().getColonKeyword_3_0()); }
	Colon
	{ after(grammarAccess.getLinkAccess().getColonKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Link__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Link__Group_3__1__Impl
	rule__Link__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Link__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLinkAccess().getBEGINTerminalRuleCall_3_1()); }
	RULE_BEGIN
	{ after(grammarAccess.getLinkAccess().getBEGINTerminalRuleCall_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Link__Group_3__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Link__Group_3__2__Impl
	rule__Link__Group_3__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Link__Group_3__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLinkAccess().getGroup_3_2()); }
	(rule__Link__Group_3_2__0)?
	{ after(grammarAccess.getLinkAccess().getGroup_3_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Link__Group_3__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Link__Group_3__3__Impl
	rule__Link__Group_3__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Link__Group_3__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLinkAccess().getGroup_3_3()); }
	(rule__Link__Group_3_3__0)?
	{ after(grammarAccess.getLinkAccess().getGroup_3_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Link__Group_3__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Link__Group_3__4__Impl
	rule__Link__Group_3__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Link__Group_3__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLinkAccess().getGroup_3_4()); }
	(rule__Link__Group_3_4__0)?
	{ after(grammarAccess.getLinkAccess().getGroup_3_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Link__Group_3__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Link__Group_3__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Link__Group_3__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLinkAccess().getENDTerminalRuleCall_3_5()); }
	RULE_END
	{ after(grammarAccess.getLinkAccess().getENDTerminalRuleCall_3_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Link__Group_3_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Link__Group_3_2__0__Impl
	rule__Link__Group_3_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Link__Group_3_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLinkAccess().getInertialKeyword_3_2_0()); }
	Inertial
	{ after(grammarAccess.getLinkAccess().getInertialKeyword_3_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Link__Group_3_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Link__Group_3_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Link__Group_3_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLinkAccess().getInertialAssignment_3_2_1()); }
	(rule__Link__InertialAssignment_3_2_1)
	{ after(grammarAccess.getLinkAccess().getInertialAssignment_3_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Link__Group_3_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Link__Group_3_3__0__Impl
	rule__Link__Group_3_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Link__Group_3_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLinkAccess().getVisualKeyword_3_3_0()); }
	Visual
	{ after(grammarAccess.getLinkAccess().getVisualKeyword_3_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Link__Group_3_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Link__Group_3_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Link__Group_3_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLinkAccess().getVisualAssignment_3_3_1()); }
	(rule__Link__VisualAssignment_3_3_1)
	{ after(grammarAccess.getLinkAccess().getVisualAssignment_3_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Link__Group_3_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Link__Group_3_4__0__Impl
	rule__Link__Group_3_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Link__Group_3_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLinkAccess().getCollisionKeyword_3_4_0()); }
	Collision
	{ after(grammarAccess.getLinkAccess().getCollisionKeyword_3_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Link__Group_3_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Link__Group_3_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Link__Group_3_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLinkAccess().getCollisionAssignment_3_4_1()); }
	(rule__Link__CollisionAssignment_3_4_1)
	{ after(grammarAccess.getLinkAccess().getCollisionAssignment_3_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Pose__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Pose__Group__0__Impl
	rule__Pose__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Pose__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPoseAccess().getPoseAction_0()); }
	()
	{ after(grammarAccess.getPoseAccess().getPoseAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Pose__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Pose__Group__1__Impl
	rule__Pose__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Pose__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPoseAccess().getBEGINTerminalRuleCall_1()); }
	RULE_BEGIN
	{ after(grammarAccess.getPoseAccess().getBEGINTerminalRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Pose__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Pose__Group__2__Impl
	rule__Pose__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Pose__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPoseAccess().getGroup_2()); }
	(rule__Pose__Group_2__0)?
	{ after(grammarAccess.getPoseAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Pose__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Pose__Group__3__Impl
	rule__Pose__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Pose__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPoseAccess().getGroup_3()); }
	(rule__Pose__Group_3__0)?
	{ after(grammarAccess.getPoseAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Pose__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Pose__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Pose__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPoseAccess().getENDTerminalRuleCall_4()); }
	RULE_END
	{ after(grammarAccess.getPoseAccess().getENDTerminalRuleCall_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Pose__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Pose__Group_2__0__Impl
	rule__Pose__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Pose__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPoseAccess().getRpyKeyword_2_0()); }
	Rpy
	{ after(grammarAccess.getPoseAccess().getRpyKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Pose__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Pose__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Pose__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPoseAccess().getRpyAssignment_2_1()); }
	(rule__Pose__RpyAssignment_2_1)
	{ after(grammarAccess.getPoseAccess().getRpyAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Pose__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Pose__Group_3__0__Impl
	rule__Pose__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Pose__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPoseAccess().getXyzKeyword_3_0()); }
	Xyz
	{ after(grammarAccess.getPoseAccess().getXyzKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Pose__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Pose__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Pose__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPoseAccess().getXyzAssignment_3_1()); }
	(rule__Pose__XyzAssignment_3_1)
	{ after(grammarAccess.getPoseAccess().getXyzAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Vector3__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Vector3__Group__0__Impl
	rule__Vector3__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Vector3__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVector3Access().getAxisAction_0()); }
	()
	{ after(grammarAccess.getVector3Access().getAxisAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Vector3__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Vector3__Group__1__Impl
	rule__Vector3__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Vector3__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVector3Access().getBEGINTerminalRuleCall_1()); }
	RULE_BEGIN
	{ after(grammarAccess.getVector3Access().getBEGINTerminalRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Vector3__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Vector3__Group__2__Impl
	rule__Vector3__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Vector3__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVector3Access().getGroup_2()); }
	(rule__Vector3__Group_2__0)?
	{ after(grammarAccess.getVector3Access().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Vector3__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Vector3__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Vector3__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVector3Access().getENDTerminalRuleCall_3()); }
	RULE_END
	{ after(grammarAccess.getVector3Access().getENDTerminalRuleCall_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Vector3__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Vector3__Group_2__0__Impl
	rule__Vector3__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Vector3__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVector3Access().getXyzKeyword_2_0()); }
	Xyz
	{ after(grammarAccess.getVector3Access().getXyzKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Vector3__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Vector3__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Vector3__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVector3Access().getXyzAssignment_2_1()); }
	(rule__Vector3__XyzAssignment_2_1)
	{ after(grammarAccess.getVector3Access().getXyzAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Limit__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Limit__Group__0__Impl
	rule__Limit__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Limit__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLimitAccess().getLimitAction_0()); }
	()
	{ after(grammarAccess.getLimitAccess().getLimitAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Limit__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Limit__Group__1__Impl
	rule__Limit__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Limit__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLimitAccess().getBEGINTerminalRuleCall_1()); }
	RULE_BEGIN
	{ after(grammarAccess.getLimitAccess().getBEGINTerminalRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Limit__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Limit__Group__2__Impl
	rule__Limit__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Limit__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLimitAccess().getGroup_2()); }
	(rule__Limit__Group_2__0)?
	{ after(grammarAccess.getLimitAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Limit__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Limit__Group__3__Impl
	rule__Limit__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Limit__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLimitAccess().getGroup_3()); }
	(rule__Limit__Group_3__0)?
	{ after(grammarAccess.getLimitAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Limit__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Limit__Group__4__Impl
	rule__Limit__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Limit__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLimitAccess().getGroup_4()); }
	(rule__Limit__Group_4__0)?
	{ after(grammarAccess.getLimitAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Limit__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Limit__Group__5__Impl
	rule__Limit__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Limit__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLimitAccess().getGroup_5()); }
	(rule__Limit__Group_5__0)?
	{ after(grammarAccess.getLimitAccess().getGroup_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Limit__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Limit__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Limit__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLimitAccess().getENDTerminalRuleCall_6()); }
	RULE_END
	{ after(grammarAccess.getLimitAccess().getENDTerminalRuleCall_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Limit__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Limit__Group_2__0__Impl
	rule__Limit__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Limit__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLimitAccess().getEffortKeyword_2_0()); }
	Effort
	{ after(grammarAccess.getLimitAccess().getEffortKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Limit__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Limit__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Limit__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLimitAccess().getEffortAssignment_2_1()); }
	(rule__Limit__EffortAssignment_2_1)
	{ after(grammarAccess.getLimitAccess().getEffortAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Limit__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Limit__Group_3__0__Impl
	rule__Limit__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Limit__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLimitAccess().getLowerKeyword_3_0()); }
	Lower
	{ after(grammarAccess.getLimitAccess().getLowerKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Limit__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Limit__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Limit__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLimitAccess().getLowerAssignment_3_1()); }
	(rule__Limit__LowerAssignment_3_1)
	{ after(grammarAccess.getLimitAccess().getLowerAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Limit__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Limit__Group_4__0__Impl
	rule__Limit__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Limit__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLimitAccess().getUpperKeyword_4_0()); }
	Upper
	{ after(grammarAccess.getLimitAccess().getUpperKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Limit__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Limit__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Limit__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLimitAccess().getUpperAssignment_4_1()); }
	(rule__Limit__UpperAssignment_4_1)
	{ after(grammarAccess.getLimitAccess().getUpperAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Limit__Group_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Limit__Group_5__0__Impl
	rule__Limit__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Limit__Group_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLimitAccess().getVelocityKeyword_5_0()); }
	Velocity
	{ after(grammarAccess.getLimitAccess().getVelocityKeyword_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Limit__Group_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Limit__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Limit__Group_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLimitAccess().getVelocityAssignment_5_1()); }
	(rule__Limit__VelocityAssignment_5_1)
	{ after(grammarAccess.getLimitAccess().getVelocityAssignment_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Inertial__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Inertial__Group__0__Impl
	rule__Inertial__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Inertial__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInertialAccess().getInertialAction_0()); }
	()
	{ after(grammarAccess.getInertialAccess().getInertialAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Inertial__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Inertial__Group__1__Impl
	rule__Inertial__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Inertial__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInertialAccess().getBEGINTerminalRuleCall_1()); }
	RULE_BEGIN
	{ after(grammarAccess.getInertialAccess().getBEGINTerminalRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Inertial__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Inertial__Group__2__Impl
	rule__Inertial__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Inertial__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInertialAccess().getGroup_2()); }
	(rule__Inertial__Group_2__0)?
	{ after(grammarAccess.getInertialAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Inertial__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Inertial__Group__3__Impl
	rule__Inertial__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Inertial__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInertialAccess().getGroup_3()); }
	(rule__Inertial__Group_3__0)?
	{ after(grammarAccess.getInertialAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Inertial__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Inertial__Group__4__Impl
	rule__Inertial__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Inertial__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInertialAccess().getGroup_4()); }
	(rule__Inertial__Group_4__0)?
	{ after(grammarAccess.getInertialAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Inertial__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Inertial__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Inertial__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInertialAccess().getENDTerminalRuleCall_5()); }
	RULE_END
	{ after(grammarAccess.getInertialAccess().getENDTerminalRuleCall_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Inertial__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Inertial__Group_2__0__Impl
	rule__Inertial__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Inertial__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInertialAccess().getOriginKeyword_2_0()); }
	Origin
	{ after(grammarAccess.getInertialAccess().getOriginKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Inertial__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Inertial__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Inertial__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInertialAccess().getOriginAssignment_2_1()); }
	(rule__Inertial__OriginAssignment_2_1)
	{ after(grammarAccess.getInertialAccess().getOriginAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Inertial__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Inertial__Group_3__0__Impl
	rule__Inertial__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Inertial__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInertialAccess().getMassKeyword_3_0()); }
	Mass
	{ after(grammarAccess.getInertialAccess().getMassKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Inertial__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Inertial__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Inertial__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInertialAccess().getMassAssignment_3_1()); }
	(rule__Inertial__MassAssignment_3_1)
	{ after(grammarAccess.getInertialAccess().getMassAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Inertial__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Inertial__Group_4__0__Impl
	rule__Inertial__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Inertial__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInertialAccess().getInertiaKeyword_4_0()); }
	Inertia
	{ after(grammarAccess.getInertialAccess().getInertiaKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Inertial__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Inertial__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Inertial__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInertialAccess().getInertiaAssignment_4_1()); }
	(rule__Inertial__InertiaAssignment_4_1)
	{ after(grammarAccess.getInertialAccess().getInertiaAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Visual__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Visual__Group__0__Impl
	rule__Visual__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Visual__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVisualAccess().getBEGINTerminalRuleCall_0()); }
	RULE_BEGIN
	{ after(grammarAccess.getVisualAccess().getBEGINTerminalRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Visual__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Visual__Group__1__Impl
	rule__Visual__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Visual__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVisualAccess().getGroup_1()); }
	(rule__Visual__Group_1__0)?
	{ after(grammarAccess.getVisualAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Visual__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Visual__Group__2__Impl
	rule__Visual__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Visual__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVisualAccess().getGeometryKeyword_2()); }
	Geometry
	{ after(grammarAccess.getVisualAccess().getGeometryKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Visual__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Visual__Group__3__Impl
	rule__Visual__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Visual__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVisualAccess().getGeometryAssignment_3()); }
	(rule__Visual__GeometryAssignment_3)
	{ after(grammarAccess.getVisualAccess().getGeometryAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Visual__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Visual__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Visual__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVisualAccess().getENDTerminalRuleCall_4()); }
	RULE_END
	{ after(grammarAccess.getVisualAccess().getENDTerminalRuleCall_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Visual__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Visual__Group_1__0__Impl
	rule__Visual__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Visual__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVisualAccess().getOriginKeyword_1_0()); }
	Origin
	{ after(grammarAccess.getVisualAccess().getOriginKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Visual__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Visual__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Visual__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVisualAccess().getOriginAssignment_1_1()); }
	(rule__Visual__OriginAssignment_1_1)
	{ after(grammarAccess.getVisualAccess().getOriginAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Collision__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Collision__Group__0__Impl
	rule__Collision__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Collision__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCollisionAccess().getBEGINTerminalRuleCall_0()); }
	RULE_BEGIN
	{ after(grammarAccess.getCollisionAccess().getBEGINTerminalRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Collision__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Collision__Group__1__Impl
	rule__Collision__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Collision__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCollisionAccess().getGroup_1()); }
	(rule__Collision__Group_1__0)?
	{ after(grammarAccess.getCollisionAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Collision__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Collision__Group__2__Impl
	rule__Collision__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Collision__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCollisionAccess().getGeometryKeyword_2()); }
	Geometry
	{ after(grammarAccess.getCollisionAccess().getGeometryKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Collision__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Collision__Group__3__Impl
	rule__Collision__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Collision__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCollisionAccess().getGeometryAssignment_3()); }
	(rule__Collision__GeometryAssignment_3)
	{ after(grammarAccess.getCollisionAccess().getGeometryAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Collision__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Collision__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Collision__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCollisionAccess().getENDTerminalRuleCall_4()); }
	RULE_END
	{ after(grammarAccess.getCollisionAccess().getENDTerminalRuleCall_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Collision__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Collision__Group_1__0__Impl
	rule__Collision__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Collision__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCollisionAccess().getOriginKeyword_1_0()); }
	Origin
	{ after(grammarAccess.getCollisionAccess().getOriginKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Collision__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Collision__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Collision__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCollisionAccess().getOriginAssignment_1_1()); }
	(rule__Collision__OriginAssignment_1_1)
	{ after(grammarAccess.getCollisionAccess().getOriginAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Mass__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Mass__Group__0__Impl
	rule__Mass__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Mass__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMassAccess().getMassAction_0()); }
	()
	{ after(grammarAccess.getMassAccess().getMassAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Mass__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Mass__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Mass__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMassAccess().getValueAssignment_1()); }
	(rule__Mass__ValueAssignment_1)
	{ after(grammarAccess.getMassAccess().getValueAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Inertia__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Inertia__Group__0__Impl
	rule__Inertia__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Inertia__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInertiaAccess().getInertiaAction_0()); }
	()
	{ after(grammarAccess.getInertiaAccess().getInertiaAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Inertia__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Inertia__Group__1__Impl
	rule__Inertia__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Inertia__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInertiaAccess().getBEGINTerminalRuleCall_1()); }
	RULE_BEGIN
	{ after(grammarAccess.getInertiaAccess().getBEGINTerminalRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Inertia__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Inertia__Group__2__Impl
	rule__Inertia__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Inertia__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInertiaAccess().getGroup_2()); }
	(rule__Inertia__Group_2__0)?
	{ after(grammarAccess.getInertiaAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Inertia__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Inertia__Group__3__Impl
	rule__Inertia__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Inertia__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInertiaAccess().getGroup_3()); }
	(rule__Inertia__Group_3__0)?
	{ after(grammarAccess.getInertiaAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Inertia__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Inertia__Group__4__Impl
	rule__Inertia__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Inertia__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInertiaAccess().getGroup_4()); }
	(rule__Inertia__Group_4__0)?
	{ after(grammarAccess.getInertiaAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Inertia__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Inertia__Group__5__Impl
	rule__Inertia__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Inertia__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInertiaAccess().getGroup_5()); }
	(rule__Inertia__Group_5__0)?
	{ after(grammarAccess.getInertiaAccess().getGroup_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Inertia__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Inertia__Group__6__Impl
	rule__Inertia__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Inertia__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInertiaAccess().getGroup_6()); }
	(rule__Inertia__Group_6__0)?
	{ after(grammarAccess.getInertiaAccess().getGroup_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Inertia__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Inertia__Group__7__Impl
	rule__Inertia__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Inertia__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInertiaAccess().getGroup_7()); }
	(rule__Inertia__Group_7__0)?
	{ after(grammarAccess.getInertiaAccess().getGroup_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Inertia__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Inertia__Group__8__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Inertia__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInertiaAccess().getENDTerminalRuleCall_8()); }
	RULE_END
	{ after(grammarAccess.getInertiaAccess().getENDTerminalRuleCall_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Inertia__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Inertia__Group_2__0__Impl
	rule__Inertia__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Inertia__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInertiaAccess().getIxxKeyword_2_0()); }
	Ixx
	{ after(grammarAccess.getInertiaAccess().getIxxKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Inertia__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Inertia__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Inertia__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInertiaAccess().getIxxAssignment_2_1()); }
	(rule__Inertia__IxxAssignment_2_1)
	{ after(grammarAccess.getInertiaAccess().getIxxAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Inertia__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Inertia__Group_3__0__Impl
	rule__Inertia__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Inertia__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInertiaAccess().getIxyKeyword_3_0()); }
	Ixy
	{ after(grammarAccess.getInertiaAccess().getIxyKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Inertia__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Inertia__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Inertia__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInertiaAccess().getIxyAssignment_3_1()); }
	(rule__Inertia__IxyAssignment_3_1)
	{ after(grammarAccess.getInertiaAccess().getIxyAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Inertia__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Inertia__Group_4__0__Impl
	rule__Inertia__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Inertia__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInertiaAccess().getIxzKeyword_4_0()); }
	Ixz
	{ after(grammarAccess.getInertiaAccess().getIxzKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Inertia__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Inertia__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Inertia__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInertiaAccess().getIxzAssignment_4_1()); }
	(rule__Inertia__IxzAssignment_4_1)
	{ after(grammarAccess.getInertiaAccess().getIxzAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Inertia__Group_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Inertia__Group_5__0__Impl
	rule__Inertia__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Inertia__Group_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInertiaAccess().getIyyKeyword_5_0()); }
	Iyy
	{ after(grammarAccess.getInertiaAccess().getIyyKeyword_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Inertia__Group_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Inertia__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Inertia__Group_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInertiaAccess().getIyyAssignment_5_1()); }
	(rule__Inertia__IyyAssignment_5_1)
	{ after(grammarAccess.getInertiaAccess().getIyyAssignment_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Inertia__Group_6__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Inertia__Group_6__0__Impl
	rule__Inertia__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Inertia__Group_6__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInertiaAccess().getIyzKeyword_6_0()); }
	Iyz
	{ after(grammarAccess.getInertiaAccess().getIyzKeyword_6_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Inertia__Group_6__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Inertia__Group_6__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Inertia__Group_6__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInertiaAccess().getIyzAssignment_6_1()); }
	(rule__Inertia__IyzAssignment_6_1)
	{ after(grammarAccess.getInertiaAccess().getIyzAssignment_6_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Inertia__Group_7__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Inertia__Group_7__0__Impl
	rule__Inertia__Group_7__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Inertia__Group_7__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInertiaAccess().getIzzKeyword_7_0()); }
	Izz
	{ after(grammarAccess.getInertiaAccess().getIzzKeyword_7_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Inertia__Group_7__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Inertia__Group_7__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Inertia__Group_7__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInertiaAccess().getIzzAssignment_7_1()); }
	(rule__Inertia__IzzAssignment_7_1)
	{ after(grammarAccess.getInertiaAccess().getIzzAssignment_7_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Geometry__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Geometry__Group__0__Impl
	rule__Geometry__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Geometry__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGeometryAccess().getGeometryAction_0()); }
	()
	{ after(grammarAccess.getGeometryAccess().getGeometryAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Geometry__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Geometry__Group__1__Impl
	rule__Geometry__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Geometry__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGeometryAccess().getBEGINTerminalRuleCall_1()); }
	RULE_BEGIN
	{ after(grammarAccess.getGeometryAccess().getBEGINTerminalRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Geometry__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Geometry__Group__2__Impl
	rule__Geometry__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Geometry__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGeometryAccess().getGroup_2()); }
	(rule__Geometry__Group_2__0)?
	{ after(grammarAccess.getGeometryAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Geometry__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Geometry__Group__3__Impl
	rule__Geometry__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Geometry__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGeometryAccess().getGroup_3()); }
	(rule__Geometry__Group_3__0)?
	{ after(grammarAccess.getGeometryAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Geometry__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Geometry__Group__4__Impl
	rule__Geometry__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Geometry__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGeometryAccess().getGroup_4()); }
	(rule__Geometry__Group_4__0)?
	{ after(grammarAccess.getGeometryAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Geometry__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Geometry__Group__5__Impl
	rule__Geometry__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Geometry__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGeometryAccess().getGroup_5()); }
	(rule__Geometry__Group_5__0)?
	{ after(grammarAccess.getGeometryAccess().getGroup_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Geometry__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Geometry__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Geometry__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGeometryAccess().getENDTerminalRuleCall_6()); }
	RULE_END
	{ after(grammarAccess.getGeometryAccess().getENDTerminalRuleCall_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Geometry__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Geometry__Group_2__0__Impl
	rule__Geometry__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Geometry__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGeometryAccess().getBoxKeyword_2_0()); }
	Box
	{ after(grammarAccess.getGeometryAccess().getBoxKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Geometry__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Geometry__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Geometry__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGeometryAccess().getBoxAssignment_2_1()); }
	(rule__Geometry__BoxAssignment_2_1)
	{ after(grammarAccess.getGeometryAccess().getBoxAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Geometry__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Geometry__Group_3__0__Impl
	rule__Geometry__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Geometry__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGeometryAccess().getCylinderKeyword_3_0()); }
	Cylinder
	{ after(grammarAccess.getGeometryAccess().getCylinderKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Geometry__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Geometry__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Geometry__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGeometryAccess().getCylinderAssignment_3_1()); }
	(rule__Geometry__CylinderAssignment_3_1)
	{ after(grammarAccess.getGeometryAccess().getCylinderAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Geometry__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Geometry__Group_4__0__Impl
	rule__Geometry__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Geometry__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGeometryAccess().getSphereKeyword_4_0()); }
	Sphere
	{ after(grammarAccess.getGeometryAccess().getSphereKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Geometry__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Geometry__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Geometry__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGeometryAccess().getSphereAssignment_4_1()); }
	(rule__Geometry__SphereAssignment_4_1)
	{ after(grammarAccess.getGeometryAccess().getSphereAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Geometry__Group_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Geometry__Group_5__0__Impl
	rule__Geometry__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Geometry__Group_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGeometryAccess().getMeshKeyword_5_0()); }
	Mesh
	{ after(grammarAccess.getGeometryAccess().getMeshKeyword_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Geometry__Group_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Geometry__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Geometry__Group_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGeometryAccess().getMeshAssignment_5_1()); }
	(rule__Geometry__MeshAssignment_5_1)
	{ after(grammarAccess.getGeometryAccess().getMeshAssignment_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Box__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Box__Group__0__Impl
	rule__Box__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Box__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBoxAccess().getBoxAction_0()); }
	()
	{ after(grammarAccess.getBoxAccess().getBoxAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Box__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Box__Group__1__Impl
	rule__Box__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Box__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBoxAccess().getBEGINTerminalRuleCall_1()); }
	RULE_BEGIN
	{ after(grammarAccess.getBoxAccess().getBEGINTerminalRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Box__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Box__Group__2__Impl
	rule__Box__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Box__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBoxAccess().getSizeKeyword_2()); }
	Size
	{ after(grammarAccess.getBoxAccess().getSizeKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Box__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Box__Group__3__Impl
	rule__Box__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Box__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBoxAccess().getSizeAssignment_3()); }
	(rule__Box__SizeAssignment_3)
	{ after(grammarAccess.getBoxAccess().getSizeAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Box__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Box__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Box__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBoxAccess().getENDTerminalRuleCall_4()); }
	RULE_END
	{ after(grammarAccess.getBoxAccess().getENDTerminalRuleCall_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Cylinder__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Cylinder__Group__0__Impl
	rule__Cylinder__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Cylinder__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCylinderAccess().getBEGINTerminalRuleCall_0()); }
	RULE_BEGIN
	{ after(grammarAccess.getCylinderAccess().getBEGINTerminalRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Cylinder__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Cylinder__Group__1__Impl
	rule__Cylinder__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Cylinder__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCylinderAccess().getLengthKeyword_1()); }
	Length
	{ after(grammarAccess.getCylinderAccess().getLengthKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Cylinder__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Cylinder__Group__2__Impl
	rule__Cylinder__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Cylinder__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCylinderAccess().getLengthAssignment_2()); }
	(rule__Cylinder__LengthAssignment_2)
	{ after(grammarAccess.getCylinderAccess().getLengthAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Cylinder__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Cylinder__Group__3__Impl
	rule__Cylinder__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Cylinder__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCylinderAccess().getRadiusKeyword_3()); }
	Radius
	{ after(grammarAccess.getCylinderAccess().getRadiusKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Cylinder__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Cylinder__Group__4__Impl
	rule__Cylinder__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Cylinder__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCylinderAccess().getRadiusAssignment_4()); }
	(rule__Cylinder__RadiusAssignment_4)
	{ after(grammarAccess.getCylinderAccess().getRadiusAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Cylinder__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Cylinder__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Cylinder__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCylinderAccess().getENDTerminalRuleCall_5()); }
	RULE_END
	{ after(grammarAccess.getCylinderAccess().getENDTerminalRuleCall_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Sphere__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Sphere__Group__0__Impl
	rule__Sphere__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Sphere__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSphereAccess().getBEGINTerminalRuleCall_0()); }
	RULE_BEGIN
	{ after(grammarAccess.getSphereAccess().getBEGINTerminalRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sphere__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Sphere__Group__1__Impl
	rule__Sphere__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Sphere__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSphereAccess().getRadiusKeyword_1()); }
	Radius
	{ after(grammarAccess.getSphereAccess().getRadiusKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sphere__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Sphere__Group__2__Impl
	rule__Sphere__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Sphere__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSphereAccess().getRadiusAssignment_2()); }
	(rule__Sphere__RadiusAssignment_2)
	{ after(grammarAccess.getSphereAccess().getRadiusAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sphere__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Sphere__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Sphere__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSphereAccess().getENDTerminalRuleCall_3()); }
	RULE_END
	{ after(grammarAccess.getSphereAccess().getENDTerminalRuleCall_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Mesh__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Mesh__Group__0__Impl
	rule__Mesh__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Mesh__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMeshAccess().getBEGINTerminalRuleCall_0()); }
	RULE_BEGIN
	{ after(grammarAccess.getMeshAccess().getBEGINTerminalRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Mesh__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Mesh__Group__1__Impl
	rule__Mesh__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Mesh__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMeshAccess().getFilenameKeyword_1()); }
	Filename
	{ after(grammarAccess.getMeshAccess().getFilenameKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Mesh__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Mesh__Group__2__Impl
	rule__Mesh__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Mesh__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMeshAccess().getFilenameAssignment_2()); }
	(rule__Mesh__FilenameAssignment_2)
	{ after(grammarAccess.getMeshAccess().getFilenameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Mesh__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Mesh__Group__3__Impl
	rule__Mesh__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Mesh__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMeshAccess().getGroup_3()); }
	(rule__Mesh__Group_3__0)?
	{ after(grammarAccess.getMeshAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Mesh__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Mesh__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Mesh__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMeshAccess().getENDTerminalRuleCall_4()); }
	RULE_END
	{ after(grammarAccess.getMeshAccess().getENDTerminalRuleCall_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Mesh__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Mesh__Group_3__0__Impl
	rule__Mesh__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Mesh__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMeshAccess().getScaleKeyword_3_0()); }
	Scale
	{ after(grammarAccess.getMeshAccess().getScaleKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Mesh__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Mesh__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Mesh__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMeshAccess().getScaleAssignment_3_1()); }
	(rule__Mesh__ScaleAssignment_3_1)
	{ after(grammarAccess.getMeshAccess().getScaleAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Robot__NameAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRobotAccess().getNameEStringParserRuleCall_4_0()); }
		ruleEString
		{ after(grammarAccess.getRobotAccess().getNameEStringParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Robot__MacrosAssignment_5_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRobotAccess().getMacrosMacroParserRuleCall_5_1_0()); }
		ruleMacro
		{ after(grammarAccess.getRobotAccess().getMacrosMacroParserRuleCall_5_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Macro__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMacroAccess().getNameEStringParserRuleCall_2_0()); }
		ruleEString
		{ after(grammarAccess.getMacroAccess().getNameEStringParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Macro__ParametersAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMacroAccess().getParametersParameterParserRuleCall_4_1_0()); }
		ruleParameter
		{ after(grammarAccess.getMacroAccess().getParametersParameterParserRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Macro__LinkAssignment_5_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMacroAccess().getLinkLinkParserRuleCall_5_1_0()); }
		ruleLink
		{ after(grammarAccess.getMacroAccess().getLinkLinkParserRuleCall_5_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Macro__JointAssignment_6_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMacroAccess().getJointJointParserRuleCall_6_1_0()); }
		ruleJoint
		{ after(grammarAccess.getMacroAccess().getJointJointParserRuleCall_6_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__NameAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParameterAccess().getNameEStringParserRuleCall_3_0()); }
		ruleEString
		{ after(grammarAccess.getParameterAccess().getNameEStringParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__TypeAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParameterAccess().getTypeParameterTypeEnumRuleCall_6_0()); }
		ruleParameterType
		{ after(grammarAccess.getParameterAccess().getTypeParameterTypeEnumRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__DefaultAssignment_7_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParameterAccess().getDefaultEStringParserRuleCall_7_1_0()); }
		ruleEString
		{ after(grammarAccess.getParameterAccess().getDefaultEStringParserRuleCall_7_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__ValueAssignment_8_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParameterAccess().getValueEStringParserRuleCall_8_1_0()); }
		ruleEString
		{ after(grammarAccess.getParameterAccess().getValueEStringParserRuleCall_8_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Joint__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getJointAccess().getNameEStringParserRuleCall_2_0()); }
		ruleEString
		{ after(grammarAccess.getJointAccess().getNameEStringParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Joint__TypeAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getJointAccess().getTypeJOINTTYPETerminalRuleCall_5_0()); }
		RULE_JOINTTYPE
		{ after(grammarAccess.getJointAccess().getTypeJOINTTYPETerminalRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Joint__ParentAssignment_7
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getJointAccess().getParentLinkCrossReference_7_0()); }
		(
			{ before(grammarAccess.getJointAccess().getParentLinkIDTerminalRuleCall_7_0_1()); }
			RULE_ID
			{ after(grammarAccess.getJointAccess().getParentLinkIDTerminalRuleCall_7_0_1()); }
		)
		{ after(grammarAccess.getJointAccess().getParentLinkCrossReference_7_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Joint__ChildAssignment_9
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getJointAccess().getChildLinkCrossReference_9_0()); }
		(
			{ before(grammarAccess.getJointAccess().getChildLinkIDTerminalRuleCall_9_0_1()); }
			RULE_ID
			{ after(grammarAccess.getJointAccess().getChildLinkIDTerminalRuleCall_9_0_1()); }
		)
		{ after(grammarAccess.getJointAccess().getChildLinkCrossReference_9_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Joint__OriginAssignment_11
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getJointAccess().getOriginPoseParserRuleCall_11_0()); }
		rulePose
		{ after(grammarAccess.getJointAccess().getOriginPoseParserRuleCall_11_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Joint__AxisAssignment_12_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getJointAccess().getAxisVector3ParserRuleCall_12_1_0()); }
		ruleVector3
		{ after(grammarAccess.getJointAccess().getAxisVector3ParserRuleCall_12_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Joint__LimitAssignment_13_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getJointAccess().getLimitLimitParserRuleCall_13_1_0()); }
		ruleLimit
		{ after(grammarAccess.getJointAccess().getLimitLimitParserRuleCall_13_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Link__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLinkAccess().getNameEStringParserRuleCall_2_0()); }
		ruleEString
		{ after(grammarAccess.getLinkAccess().getNameEStringParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Link__InertialAssignment_3_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLinkAccess().getInertialInertialParserRuleCall_3_2_1_0()); }
		ruleInertial
		{ after(grammarAccess.getLinkAccess().getInertialInertialParserRuleCall_3_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Link__VisualAssignment_3_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLinkAccess().getVisualVisualParserRuleCall_3_3_1_0()); }
		ruleVisual
		{ after(grammarAccess.getLinkAccess().getVisualVisualParserRuleCall_3_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Link__CollisionAssignment_3_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLinkAccess().getCollisionCollisionParserRuleCall_3_4_1_0()); }
		ruleCollision
		{ after(grammarAccess.getLinkAccess().getCollisionCollisionParserRuleCall_3_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Pose__RpyAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPoseAccess().getRpyEStringParserRuleCall_2_1_0()); }
		ruleEString
		{ after(grammarAccess.getPoseAccess().getRpyEStringParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Pose__XyzAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPoseAccess().getXyzEStringParserRuleCall_3_1_0()); }
		ruleEString
		{ after(grammarAccess.getPoseAccess().getXyzEStringParserRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Vector3__XyzAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVector3Access().getXyzEStringParserRuleCall_2_1_0()); }
		ruleEString
		{ after(grammarAccess.getVector3Access().getXyzEStringParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Limit__EffortAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLimitAccess().getEffortDouble0ParserRuleCall_2_1_0()); }
		ruleDouble0
		{ after(grammarAccess.getLimitAccess().getEffortDouble0ParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Limit__LowerAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLimitAccess().getLowerDouble0ParserRuleCall_3_1_0()); }
		ruleDouble0
		{ after(grammarAccess.getLimitAccess().getLowerDouble0ParserRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Limit__UpperAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLimitAccess().getUpperDouble0ParserRuleCall_4_1_0()); }
		ruleDouble0
		{ after(grammarAccess.getLimitAccess().getUpperDouble0ParserRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Limit__VelocityAssignment_5_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLimitAccess().getVelocityDouble0ParserRuleCall_5_1_0()); }
		ruleDouble0
		{ after(grammarAccess.getLimitAccess().getVelocityDouble0ParserRuleCall_5_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Inertial__OriginAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInertialAccess().getOriginPoseParserRuleCall_2_1_0()); }
		rulePose
		{ after(grammarAccess.getInertialAccess().getOriginPoseParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Inertial__MassAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInertialAccess().getMassMassParserRuleCall_3_1_0()); }
		ruleMass
		{ after(grammarAccess.getInertialAccess().getMassMassParserRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Inertial__InertiaAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInertialAccess().getInertiaInertiaParserRuleCall_4_1_0()); }
		ruleInertia
		{ after(grammarAccess.getInertialAccess().getInertiaInertiaParserRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Visual__OriginAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVisualAccess().getOriginPoseParserRuleCall_1_1_0()); }
		rulePose
		{ after(grammarAccess.getVisualAccess().getOriginPoseParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Visual__GeometryAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVisualAccess().getGeometryGeometryParserRuleCall_3_0()); }
		ruleGeometry
		{ after(grammarAccess.getVisualAccess().getGeometryGeometryParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Collision__OriginAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCollisionAccess().getOriginPoseParserRuleCall_1_1_0()); }
		rulePose
		{ after(grammarAccess.getCollisionAccess().getOriginPoseParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Collision__GeometryAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCollisionAccess().getGeometryGeometryParserRuleCall_3_0()); }
		ruleGeometry
		{ after(grammarAccess.getCollisionAccess().getGeometryGeometryParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Mass__ValueAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMassAccess().getValueDouble0ParserRuleCall_1_0()); }
		ruleDouble0
		{ after(grammarAccess.getMassAccess().getValueDouble0ParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Inertia__IxxAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInertiaAccess().getIxxDouble0ParserRuleCall_2_1_0()); }
		ruleDouble0
		{ after(grammarAccess.getInertiaAccess().getIxxDouble0ParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Inertia__IxyAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInertiaAccess().getIxyDouble0ParserRuleCall_3_1_0()); }
		ruleDouble0
		{ after(grammarAccess.getInertiaAccess().getIxyDouble0ParserRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Inertia__IxzAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInertiaAccess().getIxzDouble0ParserRuleCall_4_1_0()); }
		ruleDouble0
		{ after(grammarAccess.getInertiaAccess().getIxzDouble0ParserRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Inertia__IyyAssignment_5_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInertiaAccess().getIyyDouble0ParserRuleCall_5_1_0()); }
		ruleDouble0
		{ after(grammarAccess.getInertiaAccess().getIyyDouble0ParserRuleCall_5_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Inertia__IyzAssignment_6_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInertiaAccess().getIyzDouble0ParserRuleCall_6_1_0()); }
		ruleDouble0
		{ after(grammarAccess.getInertiaAccess().getIyzDouble0ParserRuleCall_6_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Inertia__IzzAssignment_7_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInertiaAccess().getIzzDouble0ParserRuleCall_7_1_0()); }
		ruleDouble0
		{ after(grammarAccess.getInertiaAccess().getIzzDouble0ParserRuleCall_7_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Geometry__BoxAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGeometryAccess().getBoxBoxParserRuleCall_2_1_0()); }
		ruleBox
		{ after(grammarAccess.getGeometryAccess().getBoxBoxParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Geometry__CylinderAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGeometryAccess().getCylinderCylinderParserRuleCall_3_1_0()); }
		ruleCylinder
		{ after(grammarAccess.getGeometryAccess().getCylinderCylinderParserRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Geometry__SphereAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGeometryAccess().getSphereSphereParserRuleCall_4_1_0()); }
		ruleSphere
		{ after(grammarAccess.getGeometryAccess().getSphereSphereParserRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Geometry__MeshAssignment_5_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGeometryAccess().getMeshMeshParserRuleCall_5_1_0()); }
		ruleMesh
		{ after(grammarAccess.getGeometryAccess().getMeshMeshParserRuleCall_5_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Box__SizeAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBoxAccess().getSizeEStringParserRuleCall_3_0()); }
		ruleEString
		{ after(grammarAccess.getBoxAccess().getSizeEStringParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Cylinder__LengthAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCylinderAccess().getLengthDouble0ParserRuleCall_2_0()); }
		ruleDouble0
		{ after(grammarAccess.getCylinderAccess().getLengthDouble0ParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Cylinder__RadiusAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCylinderAccess().getRadiusDouble0ParserRuleCall_4_0()); }
		ruleDouble0
		{ after(grammarAccess.getCylinderAccess().getRadiusDouble0ParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sphere__RadiusAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSphereAccess().getRadiusDouble0ParserRuleCall_2_0()); }
		ruleDouble0
		{ after(grammarAccess.getSphereAccess().getRadiusDouble0ParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Mesh__FilenameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMeshAccess().getFilenameEStringParserRuleCall_2_0()); }
		ruleEString
		{ after(grammarAccess.getMeshAccess().getFilenameEStringParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Mesh__ScaleAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMeshAccess().getScaleEStringParserRuleCall_3_1_0()); }
		ruleEString
		{ after(grammarAccess.getMeshAccess().getScaleEStringParserRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}
