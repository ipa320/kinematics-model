/*
 * generated by Xtext 2.26.0
 */
parser grammar InternalKinematicsParser;

options {
	tokenVocab=InternalKinematicsLexer;
	superClass=AbstractInternalContentAssistParser;
}

@header {
package de.fraunhofer.ipa.kinematics.ide.contentassist.antlr.internal;
import java.util.Map;
import java.util.HashMap;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import de.fraunhofer.ipa.kinematics.services.KinematicsGrammarAccess;

}
@members {
	private KinematicsGrammarAccess grammarAccess;
	private final Map<String, String> tokenNameToValue = new HashMap<String, String>();
	
	{
		tokenNameToValue.put("Comma", "','");
		tokenNameToValue.put("HyphenMinus", "'-'");
		tokenNameToValue.put("LeftSquareBracket", "'['");
		tokenNameToValue.put("RightSquareBracket", "']'");
		tokenNameToValue.put("Box", "'box:'");
		tokenNameToValue.put("Ixx", "'ixx:'");
		tokenNameToValue.put("Ixy", "'ixy:'");
		tokenNameToValue.put("Ixz", "'ixz:'");
		tokenNameToValue.put("Iyy", "'iyy:'");
		tokenNameToValue.put("Iyz", "'iyz:'");
		tokenNameToValue.put("Izz", "'izz:'");
		tokenNameToValue.put("Rpy", "'rpy:'");
		tokenNameToValue.put("Xyz", "'xyz:'");
		tokenNameToValue.put("Axis", "'axis:'");
		tokenNameToValue.put("Link", "'link:'");
		tokenNameToValue.put("Mass", "'mass:'");
		tokenNameToValue.put("Mesh", "'mesh:'");
		tokenNameToValue.put("Name", "'name:'");
		tokenNameToValue.put("Repo", "'repo:'");
		tokenNameToValue.put("Size", "'size:'");
		tokenNameToValue.put("Type", "'type:'");
		tokenNameToValue.put("AnyURI", "'AnyURI'");
		tokenNameToValue.put("Child", "'child:'");
		tokenNameToValue.put("Group", "'group:'");
		tokenNameToValue.put("Joint", "'joint:'");
		tokenNameToValue.put("Limit", "'limit:'");
		tokenNameToValue.put("Lower", "'lower:'");
		tokenNameToValue.put("Scale", "'scale:'");
		tokenNameToValue.put("Upper", "'upper:'");
		tokenNameToValue.put("Value", "'value:'");
		tokenNameToValue.put("Branch", "'branch:'");
		tokenNameToValue.put("Distro", "'distro:'");
		tokenNameToValue.put("Effort", "'effort:'");
		tokenNameToValue.put("Length", "'length:'");
		tokenNameToValue.put("Origin", "'origin:'");
		tokenNameToValue.put("Parent", "'parent:'");
		tokenNameToValue.put("Prefix", "'prefix:'");
		tokenNameToValue.put("Radius", "'radius:'");
		tokenNameToValue.put("Sphere", "'sphere:'");
		tokenNameToValue.put("Visual", "'visual:'");
		tokenNameToValue.put("EndLink", "'endLink:'");
		tokenNameToValue.put("GitRepo", "'gitRepo:'");
		tokenNameToValue.put("Inertia", "'inertia:'");
		tokenNameToValue.put("Package", "'package:'");
		tokenNameToValue.put("Version", "'version:'");
		tokenNameToValue.put("BaseLink", "'baseLink:'");
		tokenNameToValue.put("Category", "'category:'");
		tokenNameToValue.put("Cylinder", "'cylinder:'");
		tokenNameToValue.put("Filename", "'filename:'");
		tokenNameToValue.put("Geometry", "'geometry:'");
		tokenNameToValue.put("Inertial", "'inertial:'");
		tokenNameToValue.put("Velocity", "'velocity:'");
		tokenNameToValue.put("Collision", "'collision:'");
		tokenNameToValue.put("Component", "'component:'");
		tokenNameToValue.put("Connection", "'connection:'");
		tokenNameToValue.put("Ros2_control", "'ros2_control:'");
		tokenNameToValue.put("BaseAttachment", "'baseAttachment:'");
		tokenNameToValue.put("FlangeAttachment", "'flangeAttachment:'");
	}

	public void setGrammarAccess(KinematicsGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		String result = tokenNameToValue.get(tokenName);
		if (result == null)
			result = tokenName;
		return result;
	}
}

// Entry rule entryRuleComponent
entryRuleComponent
:
{ before(grammarAccess.getComponentRule()); }
	 ruleComponent
{ after(grammarAccess.getComponentRule()); } 
	 EOF 
;

// Rule Component
ruleComponent 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getComponentAccess().getGroup()); }
		(rule__Component__Group__0)
		{ after(grammarAccess.getComponentAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleConfiguredComponent
entryRuleConfiguredComponent
:
{ before(grammarAccess.getConfiguredComponentRule()); }
	 ruleConfiguredComponent
{ after(grammarAccess.getConfiguredComponentRule()); } 
	 EOF 
;

// Rule ConfiguredComponent
ruleConfiguredComponent 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getConfiguredComponentAccess().getGroup()); }
		(rule__ConfiguredComponent__Group__0)
		{ after(grammarAccess.getConfiguredComponentAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleGitRepo
entryRuleGitRepo
:
{ before(grammarAccess.getGitRepoRule()); }
	 ruleGitRepo
{ after(grammarAccess.getGitRepoRule()); } 
	 EOF 
;

// Rule GitRepo
ruleGitRepo 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getGitRepoAccess().getGroup()); }
		(rule__GitRepo__Group__0)
		{ after(grammarAccess.getGitRepoAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleGroup
entryRuleGroup
:
{ before(grammarAccess.getGroupRule()); }
	 ruleGroup
{ after(grammarAccess.getGroupRule()); } 
	 EOF 
;

// Rule Group
ruleGroup 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getGroupAccess().getGroup()); }
		(rule__Group__Group__0)
		{ after(grammarAccess.getGroupAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBaseAttachment
entryRuleBaseAttachment
:
{ before(grammarAccess.getBaseAttachmentRule()); }
	 ruleBaseAttachment
{ after(grammarAccess.getBaseAttachmentRule()); } 
	 EOF 
;

// Rule BaseAttachment
ruleBaseAttachment 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBaseAttachmentAccess().getGroup()); }
		(rule__BaseAttachment__Group__0)
		{ after(grammarAccess.getBaseAttachmentAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFlangeAttachment
entryRuleFlangeAttachment
:
{ before(grammarAccess.getFlangeAttachmentRule()); }
	 ruleFlangeAttachment
{ after(grammarAccess.getFlangeAttachmentRule()); } 
	 EOF 
;

// Rule FlangeAttachment
ruleFlangeAttachment 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFlangeAttachmentAccess().getGroup()); }
		(rule__FlangeAttachment__Group__0)
		{ after(grammarAccess.getFlangeAttachmentAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleConnection
entryRuleConnection
:
{ before(grammarAccess.getConnectionRule()); }
	 ruleConnection
{ after(grammarAccess.getConnectionRule()); } 
	 EOF 
;

// Rule Connection
ruleConnection 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getConnectionAccess().getGroup()); }
		(rule__Connection__Group__0)
		{ after(grammarAccess.getConnectionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleJoint
entryRuleJoint
:
{ before(grammarAccess.getJointRule()); }
	 ruleJoint
{ after(grammarAccess.getJointRule()); } 
	 EOF 
;

// Rule Joint
ruleJoint 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getJointAccess().getGroup()); }
		(rule__Joint__Group__0)
		{ after(grammarAccess.getJointAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleParent
entryRuleParent
:
{ before(grammarAccess.getParentRule()); }
	 ruleParent
{ after(grammarAccess.getParentRule()); } 
	 EOF 
;

// Rule Parent
ruleParent 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getParentAccess().getGroup()); }
		(rule__Parent__Group__0)
		{ after(grammarAccess.getParentAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleChild
entryRuleChild
:
{ before(grammarAccess.getChildRule()); }
	 ruleChild
{ after(grammarAccess.getChildRule()); } 
	 EOF 
;

// Rule Child
ruleChild 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getChildAccess().getGroup()); }
		(rule__Child__Group__0)
		{ after(grammarAccess.getChildAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLink
entryRuleLink
:
{ before(grammarAccess.getLinkRule()); }
	 ruleLink
{ after(grammarAccess.getLinkRule()); } 
	 EOF 
;

// Rule Link
ruleLink 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLinkAccess().getGroup()); }
		(rule__Link__Group__0)
		{ after(grammarAccess.getLinkAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePose
entryRulePose
:
{ before(grammarAccess.getPoseRule()); }
	 rulePose
{ after(grammarAccess.getPoseRule()); } 
	 EOF 
;

// Rule Pose
rulePose 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPoseAccess().getGroup()); }
		(rule__Pose__Group__0)
		{ after(grammarAccess.getPoseAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAxis
entryRuleAxis
:
{ before(grammarAccess.getAxisRule()); }
	 ruleAxis
{ after(grammarAccess.getAxisRule()); } 
	 EOF 
;

// Rule Axis
ruleAxis 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAxisAccess().getGroup()); }
		(rule__Axis__Group__0)
		{ after(grammarAccess.getAxisAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLimit
entryRuleLimit
:
{ before(grammarAccess.getLimitRule()); }
	 ruleLimit
{ after(grammarAccess.getLimitRule()); } 
	 EOF 
;

// Rule Limit
ruleLimit 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLimitAccess().getGroup()); }
		(rule__Limit__Group__0)
		{ after(grammarAccess.getLimitAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleInertial
entryRuleInertial
:
{ before(grammarAccess.getInertialRule()); }
	 ruleInertial
{ after(grammarAccess.getInertialRule()); } 
	 EOF 
;

// Rule Inertial
ruleInertial 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getInertialAccess().getGroup()); }
		(rule__Inertial__Group__0)
		{ after(grammarAccess.getInertialAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleVisual
entryRuleVisual
:
{ before(grammarAccess.getVisualRule()); }
	 ruleVisual
{ after(grammarAccess.getVisualRule()); } 
	 EOF 
;

// Rule Visual
ruleVisual 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getVisualAccess().getGroup()); }
		(rule__Visual__Group__0)
		{ after(grammarAccess.getVisualAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCollision
entryRuleCollision
:
{ before(grammarAccess.getCollisionRule()); }
	 ruleCollision
{ after(grammarAccess.getCollisionRule()); } 
	 EOF 
;

// Rule Collision
ruleCollision 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCollisionAccess().getGroup()); }
		(rule__Collision__Group__0)
		{ after(grammarAccess.getCollisionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMass
entryRuleMass
:
{ before(grammarAccess.getMassRule()); }
	 ruleMass
{ after(grammarAccess.getMassRule()); } 
	 EOF 
;

// Rule Mass
ruleMass 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMassAccess().getGroup()); }
		(rule__Mass__Group__0)
		{ after(grammarAccess.getMassAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleInertia
entryRuleInertia
:
{ before(grammarAccess.getInertiaRule()); }
	 ruleInertia
{ after(grammarAccess.getInertiaRule()); } 
	 EOF 
;

// Rule Inertia
ruleInertia 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getInertiaAccess().getGroup()); }
		(rule__Inertia__Group__0)
		{ after(grammarAccess.getInertiaAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleGeometry
entryRuleGeometry
:
{ before(grammarAccess.getGeometryRule()); }
	 ruleGeometry
{ after(grammarAccess.getGeometryRule()); } 
	 EOF 
;

// Rule Geometry
ruleGeometry 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getGeometryAccess().getGroup()); }
		(rule__Geometry__Group__0)
		{ after(grammarAccess.getGeometryAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBox
entryRuleBox
:
{ before(grammarAccess.getBoxRule()); }
	 ruleBox
{ after(grammarAccess.getBoxRule()); } 
	 EOF 
;

// Rule Box
ruleBox 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBoxAccess().getGroup()); }
		(rule__Box__Group__0)
		{ after(grammarAccess.getBoxAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCylinder
entryRuleCylinder
:
{ before(grammarAccess.getCylinderRule()); }
	 ruleCylinder
{ after(grammarAccess.getCylinderRule()); } 
	 EOF 
;

// Rule Cylinder
ruleCylinder 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCylinderAccess().getGroup()); }
		(rule__Cylinder__Group__0)
		{ after(grammarAccess.getCylinderAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSphere
entryRuleSphere
:
{ before(grammarAccess.getSphereRule()); }
	 ruleSphere
{ after(grammarAccess.getSphereRule()); } 
	 EOF 
;

// Rule Sphere
ruleSphere 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSphereAccess().getGroup()); }
		(rule__Sphere__Group__0)
		{ after(grammarAccess.getSphereAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMesh
entryRuleMesh
:
{ before(grammarAccess.getMeshRule()); }
	 ruleMesh
{ after(grammarAccess.getMeshRule()); } 
	 EOF 
;

// Rule Mesh
ruleMesh 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMeshAccess().getGroup()); }
		(rule__Mesh__Group__0)
		{ after(grammarAccess.getMeshAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEString
entryRuleEString
:
{ before(grammarAccess.getEStringRule()); }
	 ruleEString
{ after(grammarAccess.getEStringRule()); } 
	 EOF 
;

// Rule EString
ruleEString 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall()); }
		RULE_STRING
		{ after(grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDouble0
entryRuleDouble0
:
{ before(grammarAccess.getDouble0Rule()); }
	 ruleDouble0
{ after(grammarAccess.getDouble0Rule()); } 
	 EOF 
;

// Rule Double0
ruleDouble0 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDouble0Access().getDOUBLETerminalRuleCall()); }
		RULE_DOUBLE
		{ after(grammarAccess.getDouble0Access().getDOUBLETerminalRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Component__Alternatives_9
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComponentAccess().getGroup_9_0()); }
		(rule__Component__Group_9_0__0)
		{ after(grammarAccess.getComponentAccess().getGroup_9_0()); }
	)
	|
	(
		{ before(grammarAccess.getComponentAccess().getBaseAttachmentAssignment_9_1()); }
		(rule__Component__BaseAttachmentAssignment_9_1)
		{ after(grammarAccess.getComponentAccess().getBaseAttachmentAssignment_9_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Component__Alternatives_10
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComponentAccess().getGroup_10_0()); }
		(rule__Component__Group_10_0__0)
		{ after(grammarAccess.getComponentAccess().getGroup_10_0()); }
	)
	|
	(
		{ before(grammarAccess.getComponentAccess().getFlangeAttachmentAssignment_10_1()); }
		(rule__Component__FlangeAttachmentAssignment_10_1)
		{ after(grammarAccess.getComponentAccess().getFlangeAttachmentAssignment_10_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Component__Alternatives_11
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComponentAccess().getGroup_11_0()); }
		(rule__Component__Group_11_0__0)
		{ after(grammarAccess.getComponentAccess().getGroup_11_0()); }
	)
	|
	(
		{ before(grammarAccess.getComponentAccess().getComponentAssignment_11_1()); }
		(rule__Component__ComponentAssignment_11_1)
		{ after(grammarAccess.getComponentAccess().getComponentAssignment_11_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Component__Alternatives_12
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComponentAccess().getGroup_12_0()); }
		(rule__Component__Group_12_0__0)
		{ after(grammarAccess.getComponentAccess().getGroup_12_0()); }
	)
	|
	(
		{ before(grammarAccess.getComponentAccess().getConnectionAssignment_12_1()); }
		(rule__Component__ConnectionAssignment_12_1)
		{ after(grammarAccess.getComponentAccess().getConnectionAssignment_12_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Component__Alternatives_13
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComponentAccess().getGroup_13_0()); }
		(rule__Component__Group_13_0__0)
		{ after(grammarAccess.getComponentAccess().getGroup_13_0()); }
	)
	|
	(
		{ before(grammarAccess.getComponentAccess().getGroupAssignment_13_1()); }
		(rule__Component__GroupAssignment_13_1)
		{ after(grammarAccess.getComponentAccess().getGroupAssignment_13_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Component__Alternatives_14
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComponentAccess().getGroup_14_0()); }
		(rule__Component__Group_14_0__0)
		{ after(grammarAccess.getComponentAccess().getGroup_14_0()); }
	)
	|
	(
		{ before(grammarAccess.getComponentAccess().getLinkAssignment_14_1()); }
		(rule__Component__LinkAssignment_14_1)
		{ after(grammarAccess.getComponentAccess().getLinkAssignment_14_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Component__Alternatives_15
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComponentAccess().getGroup_15_0()); }
		(rule__Component__Group_15_0__0)
		{ after(grammarAccess.getComponentAccess().getGroup_15_0()); }
	)
	|
	(
		{ before(grammarAccess.getComponentAccess().getJointAssignment_15_1()); }
		(rule__Component__JointAssignment_15_1)
		{ after(grammarAccess.getComponentAccess().getJointAssignment_15_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Component__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Component__Group__0__Impl
	rule__Component__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Component__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComponentAccess().getComponentAction_0()); }
	()
	{ after(grammarAccess.getComponentAccess().getComponentAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Component__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Component__Group__1__Impl
	rule__Component__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Component__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComponentAccess().getComponentKeyword_1()); }
	Component
	{ after(grammarAccess.getComponentAccess().getComponentKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Component__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Component__Group__2__Impl
	rule__Component__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Component__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComponentAccess().getBEGINTerminalRuleCall_2()); }
	RULE_BEGIN
	{ after(grammarAccess.getComponentAccess().getBEGINTerminalRuleCall_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Component__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Component__Group__3__Impl
	rule__Component__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Component__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComponentAccess().getNameKeyword_3()); }
	Name
	{ after(grammarAccess.getComponentAccess().getNameKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Component__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Component__Group__4__Impl
	rule__Component__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Component__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComponentAccess().getNameAssignment_4()); }
	(rule__Component__NameAssignment_4)
	{ after(grammarAccess.getComponentAccess().getNameAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Component__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Component__Group__5__Impl
	rule__Component__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Component__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComponentAccess().getVersionKeyword_5()); }
	Version
	{ after(grammarAccess.getComponentAccess().getVersionKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Component__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Component__Group__6__Impl
	rule__Component__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Component__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComponentAccess().getVersionAssignment_6()); }
	(rule__Component__VersionAssignment_6)
	{ after(grammarAccess.getComponentAccess().getVersionAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Component__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Component__Group__7__Impl
	rule__Component__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Component__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComponentAccess().getGroup_7()); }
	(rule__Component__Group_7__0)?
	{ after(grammarAccess.getComponentAccess().getGroup_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Component__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Component__Group__8__Impl
	rule__Component__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__Component__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComponentAccess().getGroup_8()); }
	(rule__Component__Group_8__0)?
	{ after(grammarAccess.getComponentAccess().getGroup_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Component__Group__9
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Component__Group__9__Impl
	rule__Component__Group__10
;
finally {
	restoreStackSize(stackSize);
}

rule__Component__Group__9__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComponentAccess().getAlternatives_9()); }
	(rule__Component__Alternatives_9)?
	{ after(grammarAccess.getComponentAccess().getAlternatives_9()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Component__Group__10
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Component__Group__10__Impl
	rule__Component__Group__11
;
finally {
	restoreStackSize(stackSize);
}

rule__Component__Group__10__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComponentAccess().getAlternatives_10()); }
	(rule__Component__Alternatives_10)?
	{ after(grammarAccess.getComponentAccess().getAlternatives_10()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Component__Group__11
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Component__Group__11__Impl
	rule__Component__Group__12
;
finally {
	restoreStackSize(stackSize);
}

rule__Component__Group__11__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComponentAccess().getAlternatives_11()); }
	(rule__Component__Alternatives_11)?
	{ after(grammarAccess.getComponentAccess().getAlternatives_11()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Component__Group__12
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Component__Group__12__Impl
	rule__Component__Group__13
;
finally {
	restoreStackSize(stackSize);
}

rule__Component__Group__12__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComponentAccess().getAlternatives_12()); }
	(rule__Component__Alternatives_12)?
	{ after(grammarAccess.getComponentAccess().getAlternatives_12()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Component__Group__13
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Component__Group__13__Impl
	rule__Component__Group__14
;
finally {
	restoreStackSize(stackSize);
}

rule__Component__Group__13__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComponentAccess().getAlternatives_13()); }
	(rule__Component__Alternatives_13)?
	{ after(grammarAccess.getComponentAccess().getAlternatives_13()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Component__Group__14
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Component__Group__14__Impl
	rule__Component__Group__15
;
finally {
	restoreStackSize(stackSize);
}

rule__Component__Group__14__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComponentAccess().getAlternatives_14()); }
	(rule__Component__Alternatives_14)?
	{ after(grammarAccess.getComponentAccess().getAlternatives_14()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Component__Group__15
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Component__Group__15__Impl
	rule__Component__Group__16
;
finally {
	restoreStackSize(stackSize);
}

rule__Component__Group__15__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComponentAccess().getAlternatives_15()); }
	(rule__Component__Alternatives_15)?
	{ after(grammarAccess.getComponentAccess().getAlternatives_15()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Component__Group__16
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Component__Group__16__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Component__Group__16__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComponentAccess().getENDTerminalRuleCall_16()); }
	RULE_END
	{ after(grammarAccess.getComponentAccess().getENDTerminalRuleCall_16()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Component__Group_7__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Component__Group_7__0__Impl
	rule__Component__Group_7__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Component__Group_7__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComponentAccess().getCategoryKeyword_7_0()); }
	Category
	{ after(grammarAccess.getComponentAccess().getCategoryKeyword_7_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Component__Group_7__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Component__Group_7__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Component__Group_7__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComponentAccess().getCategoryAssignment_7_1()); }
	(rule__Component__CategoryAssignment_7_1)
	{ after(grammarAccess.getComponentAccess().getCategoryAssignment_7_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Component__Group_8__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Component__Group_8__0__Impl
	rule__Component__Group_8__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Component__Group_8__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComponentAccess().getGitRepoKeyword_8_0()); }
	GitRepo
	{ after(grammarAccess.getComponentAccess().getGitRepoKeyword_8_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Component__Group_8__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Component__Group_8__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Component__Group_8__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComponentAccess().getGitRepoAssignment_8_1()); }
	(rule__Component__GitRepoAssignment_8_1)
	{ after(grammarAccess.getComponentAccess().getGitRepoAssignment_8_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Component__Group_9_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Component__Group_9_0__0__Impl
	rule__Component__Group_9_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Component__Group_9_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComponentAccess().getBaseAttachmentKeyword_9_0_0()); }
	BaseAttachment
	{ after(grammarAccess.getComponentAccess().getBaseAttachmentKeyword_9_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Component__Group_9_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Component__Group_9_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Component__Group_9_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComponentAccess().getBaseAttachmentAssignment_9_0_1()); }
	(rule__Component__BaseAttachmentAssignment_9_0_1)*
	{ after(grammarAccess.getComponentAccess().getBaseAttachmentAssignment_9_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Component__Group_10_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Component__Group_10_0__0__Impl
	rule__Component__Group_10_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Component__Group_10_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComponentAccess().getFlangeAttachmentKeyword_10_0_0()); }
	FlangeAttachment
	{ after(grammarAccess.getComponentAccess().getFlangeAttachmentKeyword_10_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Component__Group_10_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Component__Group_10_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Component__Group_10_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComponentAccess().getFlangeAttachmentAssignment_10_0_1()); }
	(rule__Component__FlangeAttachmentAssignment_10_0_1)*
	{ after(grammarAccess.getComponentAccess().getFlangeAttachmentAssignment_10_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Component__Group_11_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Component__Group_11_0__0__Impl
	rule__Component__Group_11_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Component__Group_11_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComponentAccess().getComponentKeyword_11_0_0()); }
	Component
	{ after(grammarAccess.getComponentAccess().getComponentKeyword_11_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Component__Group_11_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Component__Group_11_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Component__Group_11_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComponentAccess().getComponentAssignment_11_0_1()); }
	(rule__Component__ComponentAssignment_11_0_1)*
	{ after(grammarAccess.getComponentAccess().getComponentAssignment_11_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Component__Group_12_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Component__Group_12_0__0__Impl
	rule__Component__Group_12_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Component__Group_12_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComponentAccess().getConnectionKeyword_12_0_0()); }
	Connection
	{ after(grammarAccess.getComponentAccess().getConnectionKeyword_12_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Component__Group_12_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Component__Group_12_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Component__Group_12_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComponentAccess().getConnectionAssignment_12_0_1()); }
	(rule__Component__ConnectionAssignment_12_0_1)*
	{ after(grammarAccess.getComponentAccess().getConnectionAssignment_12_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Component__Group_13_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Component__Group_13_0__0__Impl
	rule__Component__Group_13_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Component__Group_13_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComponentAccess().getGroupKeyword_13_0_0()); }
	Group
	{ after(grammarAccess.getComponentAccess().getGroupKeyword_13_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Component__Group_13_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Component__Group_13_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Component__Group_13_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComponentAccess().getGroupAssignment_13_0_1()); }
	(rule__Component__GroupAssignment_13_0_1)*
	{ after(grammarAccess.getComponentAccess().getGroupAssignment_13_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Component__Group_14_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Component__Group_14_0__0__Impl
	rule__Component__Group_14_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Component__Group_14_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComponentAccess().getLinkKeyword_14_0_0()); }
	Link
	{ after(grammarAccess.getComponentAccess().getLinkKeyword_14_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Component__Group_14_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Component__Group_14_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Component__Group_14_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComponentAccess().getLinkAssignment_14_0_1()); }
	(rule__Component__LinkAssignment_14_0_1)*
	{ after(grammarAccess.getComponentAccess().getLinkAssignment_14_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Component__Group_15_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Component__Group_15_0__0__Impl
	rule__Component__Group_15_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Component__Group_15_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComponentAccess().getJointKeyword_15_0_0()); }
	Joint
	{ after(grammarAccess.getComponentAccess().getJointKeyword_15_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Component__Group_15_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Component__Group_15_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Component__Group_15_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComponentAccess().getJointAssignment_15_0_1()); }
	(rule__Component__JointAssignment_15_0_1)*
	{ after(grammarAccess.getComponentAccess().getJointAssignment_15_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ConfiguredComponent__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConfiguredComponent__Group__0__Impl
	rule__ConfiguredComponent__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConfiguredComponent__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConfiguredComponentAccess().getHyphenMinusKeyword_0()); }
	HyphenMinus
	{ after(grammarAccess.getConfiguredComponentAccess().getHyphenMinusKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConfiguredComponent__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConfiguredComponent__Group__1__Impl
	rule__ConfiguredComponent__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ConfiguredComponent__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConfiguredComponentAccess().getNameKeyword_1()); }
	Name
	{ after(grammarAccess.getConfiguredComponentAccess().getNameKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConfiguredComponent__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConfiguredComponent__Group__2__Impl
	rule__ConfiguredComponent__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ConfiguredComponent__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConfiguredComponentAccess().getNameAssignment_2()); }
	(rule__ConfiguredComponent__NameAssignment_2)
	{ after(grammarAccess.getConfiguredComponentAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConfiguredComponent__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConfiguredComponent__Group__3__Impl
	rule__ConfiguredComponent__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ConfiguredComponent__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConfiguredComponentAccess().getBEGINTerminalRuleCall_3()); }
	RULE_BEGIN
	{ after(grammarAccess.getConfiguredComponentAccess().getBEGINTerminalRuleCall_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConfiguredComponent__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConfiguredComponent__Group__4__Impl
	rule__ConfiguredComponent__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ConfiguredComponent__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConfiguredComponentAccess().getTypeKeyword_4()); }
	Type
	{ after(grammarAccess.getConfiguredComponentAccess().getTypeKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConfiguredComponent__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConfiguredComponent__Group__5__Impl
	rule__ConfiguredComponent__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__ConfiguredComponent__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConfiguredComponentAccess().getTypeAssignment_5()); }
	(rule__ConfiguredComponent__TypeAssignment_5)
	{ after(grammarAccess.getConfiguredComponentAccess().getTypeAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConfiguredComponent__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConfiguredComponent__Group__6__Impl
	rule__ConfiguredComponent__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__ConfiguredComponent__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConfiguredComponentAccess().getGroup_6()); }
	(rule__ConfiguredComponent__Group_6__0)?
	{ after(grammarAccess.getConfiguredComponentAccess().getGroup_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConfiguredComponent__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConfiguredComponent__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConfiguredComponent__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConfiguredComponentAccess().getENDTerminalRuleCall_7()); }
	RULE_END
	{ after(grammarAccess.getConfiguredComponentAccess().getENDTerminalRuleCall_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ConfiguredComponent__Group_6__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConfiguredComponent__Group_6__0__Impl
	rule__ConfiguredComponent__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConfiguredComponent__Group_6__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConfiguredComponentAccess().getPrefixKeyword_6_0()); }
	Prefix
	{ after(grammarAccess.getConfiguredComponentAccess().getPrefixKeyword_6_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConfiguredComponent__Group_6__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConfiguredComponent__Group_6__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConfiguredComponent__Group_6__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConfiguredComponentAccess().getPrefixAssignment_6_1()); }
	(rule__ConfiguredComponent__PrefixAssignment_6_1)
	{ after(grammarAccess.getConfiguredComponentAccess().getPrefixAssignment_6_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__GitRepo__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GitRepo__Group__0__Impl
	rule__GitRepo__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GitRepo__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGitRepoAccess().getBEGINTerminalRuleCall_0()); }
	RULE_BEGIN
	{ after(grammarAccess.getGitRepoAccess().getBEGINTerminalRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GitRepo__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GitRepo__Group__1__Impl
	rule__GitRepo__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__GitRepo__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGitRepoAccess().getDistroKeyword_1()); }
	Distro
	{ after(grammarAccess.getGitRepoAccess().getDistroKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GitRepo__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GitRepo__Group__2__Impl
	rule__GitRepo__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__GitRepo__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGitRepoAccess().getDistroAssignment_2()); }
	(rule__GitRepo__DistroAssignment_2)
	{ after(grammarAccess.getGitRepoAccess().getDistroAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GitRepo__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GitRepo__Group__3__Impl
	rule__GitRepo__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__GitRepo__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGitRepoAccess().getRepoKeyword_3()); }
	Repo
	{ after(grammarAccess.getGitRepoAccess().getRepoKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GitRepo__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GitRepo__Group__4__Impl
	rule__GitRepo__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__GitRepo__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGitRepoAccess().getRepoAssignment_4()); }
	(rule__GitRepo__RepoAssignment_4)
	{ after(grammarAccess.getGitRepoAccess().getRepoAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GitRepo__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GitRepo__Group__5__Impl
	rule__GitRepo__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__GitRepo__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGitRepoAccess().getBranchKeyword_5()); }
	Branch
	{ after(grammarAccess.getGitRepoAccess().getBranchKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GitRepo__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GitRepo__Group__6__Impl
	rule__GitRepo__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__GitRepo__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGitRepoAccess().getBranchAssignment_6()); }
	(rule__GitRepo__BranchAssignment_6)
	{ after(grammarAccess.getGitRepoAccess().getBranchAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GitRepo__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GitRepo__Group__7__Impl
	rule__GitRepo__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__GitRepo__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGitRepoAccess().getPackageKeyword_7()); }
	Package
	{ after(grammarAccess.getGitRepoAccess().getPackageKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GitRepo__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GitRepo__Group__8__Impl
	rule__GitRepo__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__GitRepo__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGitRepoAccess().getPackageAssignment_8()); }
	(rule__GitRepo__PackageAssignment_8)
	{ after(grammarAccess.getGitRepoAccess().getPackageAssignment_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GitRepo__Group__9
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GitRepo__Group__9__Impl
	rule__GitRepo__Group__10
;
finally {
	restoreStackSize(stackSize);
}

rule__GitRepo__Group__9__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGitRepoAccess().getVersionKeyword_9()); }
	Version
	{ after(grammarAccess.getGitRepoAccess().getVersionKeyword_9()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GitRepo__Group__10
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GitRepo__Group__10__Impl
	rule__GitRepo__Group__11
;
finally {
	restoreStackSize(stackSize);
}

rule__GitRepo__Group__10__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGitRepoAccess().getVersionAssignment_10()); }
	(rule__GitRepo__VersionAssignment_10)
	{ after(grammarAccess.getGitRepoAccess().getVersionAssignment_10()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GitRepo__Group__11
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GitRepo__Group__11__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GitRepo__Group__11__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGitRepoAccess().getENDTerminalRuleCall_11()); }
	RULE_END
	{ after(grammarAccess.getGitRepoAccess().getENDTerminalRuleCall_11()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Group__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Group__Group__0__Impl
	rule__Group__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Group__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGroupAccess().getHyphenMinusKeyword_0()); }
	HyphenMinus
	{ after(grammarAccess.getGroupAccess().getHyphenMinusKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Group__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Group__Group__1__Impl
	rule__Group__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Group__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGroupAccess().getNameKeyword_1()); }
	Name
	{ after(grammarAccess.getGroupAccess().getNameKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Group__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Group__Group__2__Impl
	rule__Group__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Group__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGroupAccess().getNameAssignment_2()); }
	(rule__Group__NameAssignment_2)
	{ after(grammarAccess.getGroupAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Group__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Group__Group__3__Impl
	rule__Group__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Group__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGroupAccess().getBEGINTerminalRuleCall_3()); }
	RULE_BEGIN
	{ after(grammarAccess.getGroupAccess().getBEGINTerminalRuleCall_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Group__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Group__Group__4__Impl
	rule__Group__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Group__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGroupAccess().getBaseLinkKeyword_4()); }
	BaseLink
	{ after(grammarAccess.getGroupAccess().getBaseLinkKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Group__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Group__Group__5__Impl
	rule__Group__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Group__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGroupAccess().getBaseLinkAssignment_5()); }
	(rule__Group__BaseLinkAssignment_5)
	{ after(grammarAccess.getGroupAccess().getBaseLinkAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Group__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Group__Group__6__Impl
	rule__Group__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Group__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGroupAccess().getEndLinkKeyword_6()); }
	EndLink
	{ after(grammarAccess.getGroupAccess().getEndLinkKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Group__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Group__Group__7__Impl
	rule__Group__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Group__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGroupAccess().getEndLinkAssignment_7()); }
	(rule__Group__EndLinkAssignment_7)
	{ after(grammarAccess.getGroupAccess().getEndLinkAssignment_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Group__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Group__Group__8__Impl
	rule__Group__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__Group__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGroupAccess().getGroup_8()); }
	(rule__Group__Group_8__0)?
	{ after(grammarAccess.getGroupAccess().getGroup_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Group__Group__9
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Group__Group__9__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Group__Group__9__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGroupAccess().getENDTerminalRuleCall_9()); }
	RULE_END
	{ after(grammarAccess.getGroupAccess().getENDTerminalRuleCall_9()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Group__Group_8__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Group__Group_8__0__Impl
	rule__Group__Group_8__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Group__Group_8__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGroupAccess().getRos2_controlKeyword_8_0()); }
	Ros2_control
	{ after(grammarAccess.getGroupAccess().getRos2_controlKeyword_8_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Group__Group_8__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Group__Group_8__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Group__Group_8__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGroupAccess().getRos2_controlAssignment_8_1()); }
	(rule__Group__Ros2_controlAssignment_8_1)
	{ after(grammarAccess.getGroupAccess().getRos2_controlAssignment_8_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BaseAttachment__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BaseAttachment__Group__0__Impl
	rule__BaseAttachment__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BaseAttachment__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBaseAttachmentAccess().getHyphenMinusKeyword_0()); }
	HyphenMinus
	{ after(grammarAccess.getBaseAttachmentAccess().getHyphenMinusKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BaseAttachment__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BaseAttachment__Group__1__Impl
	rule__BaseAttachment__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__BaseAttachment__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBaseAttachmentAccess().getNameKeyword_1()); }
	Name
	{ after(grammarAccess.getBaseAttachmentAccess().getNameKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BaseAttachment__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BaseAttachment__Group__2__Impl
	rule__BaseAttachment__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__BaseAttachment__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBaseAttachmentAccess().getNameAssignment_2()); }
	(rule__BaseAttachment__NameAssignment_2)
	{ after(grammarAccess.getBaseAttachmentAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BaseAttachment__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BaseAttachment__Group__3__Impl
	rule__BaseAttachment__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__BaseAttachment__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBaseAttachmentAccess().getBEGINTerminalRuleCall_3()); }
	RULE_BEGIN
	{ after(grammarAccess.getBaseAttachmentAccess().getBEGINTerminalRuleCall_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BaseAttachment__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BaseAttachment__Group__4__Impl
	rule__BaseAttachment__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__BaseAttachment__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBaseAttachmentAccess().getOriginKeyword_4()); }
	Origin
	{ after(grammarAccess.getBaseAttachmentAccess().getOriginKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BaseAttachment__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BaseAttachment__Group__5__Impl
	rule__BaseAttachment__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__BaseAttachment__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBaseAttachmentAccess().getOriginAssignment_5()); }
	(rule__BaseAttachment__OriginAssignment_5)
	{ after(grammarAccess.getBaseAttachmentAccess().getOriginAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BaseAttachment__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BaseAttachment__Group__6__Impl
	rule__BaseAttachment__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__BaseAttachment__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBaseAttachmentAccess().getParentKeyword_6()); }
	Parent
	{ after(grammarAccess.getBaseAttachmentAccess().getParentKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BaseAttachment__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BaseAttachment__Group__7__Impl
	rule__BaseAttachment__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__BaseAttachment__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBaseAttachmentAccess().getParentAssignment_7()); }
	(rule__BaseAttachment__ParentAssignment_7)
	{ after(grammarAccess.getBaseAttachmentAccess().getParentAssignment_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BaseAttachment__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BaseAttachment__Group__8__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BaseAttachment__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBaseAttachmentAccess().getENDTerminalRuleCall_8()); }
	RULE_END
	{ after(grammarAccess.getBaseAttachmentAccess().getENDTerminalRuleCall_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FlangeAttachment__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FlangeAttachment__Group__0__Impl
	rule__FlangeAttachment__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FlangeAttachment__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFlangeAttachmentAccess().getHyphenMinusKeyword_0()); }
	HyphenMinus
	{ after(grammarAccess.getFlangeAttachmentAccess().getHyphenMinusKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FlangeAttachment__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FlangeAttachment__Group__1__Impl
	rule__FlangeAttachment__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FlangeAttachment__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFlangeAttachmentAccess().getNameKeyword_1()); }
	Name
	{ after(grammarAccess.getFlangeAttachmentAccess().getNameKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FlangeAttachment__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FlangeAttachment__Group__2__Impl
	rule__FlangeAttachment__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__FlangeAttachment__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFlangeAttachmentAccess().getNameAssignment_2()); }
	(rule__FlangeAttachment__NameAssignment_2)
	{ after(grammarAccess.getFlangeAttachmentAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FlangeAttachment__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FlangeAttachment__Group__3__Impl
	rule__FlangeAttachment__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__FlangeAttachment__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFlangeAttachmentAccess().getBEGINTerminalRuleCall_3()); }
	RULE_BEGIN
	{ after(grammarAccess.getFlangeAttachmentAccess().getBEGINTerminalRuleCall_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FlangeAttachment__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FlangeAttachment__Group__4__Impl
	rule__FlangeAttachment__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__FlangeAttachment__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFlangeAttachmentAccess().getOriginKeyword_4()); }
	Origin
	{ after(grammarAccess.getFlangeAttachmentAccess().getOriginKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FlangeAttachment__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FlangeAttachment__Group__5__Impl
	rule__FlangeAttachment__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__FlangeAttachment__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFlangeAttachmentAccess().getOriginAssignment_5()); }
	(rule__FlangeAttachment__OriginAssignment_5)
	{ after(grammarAccess.getFlangeAttachmentAccess().getOriginAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FlangeAttachment__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FlangeAttachment__Group__6__Impl
	rule__FlangeAttachment__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__FlangeAttachment__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFlangeAttachmentAccess().getParentKeyword_6()); }
	Parent
	{ after(grammarAccess.getFlangeAttachmentAccess().getParentKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FlangeAttachment__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FlangeAttachment__Group__7__Impl
	rule__FlangeAttachment__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__FlangeAttachment__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFlangeAttachmentAccess().getParentAssignment_7()); }
	(rule__FlangeAttachment__ParentAssignment_7)
	{ after(grammarAccess.getFlangeAttachmentAccess().getParentAssignment_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FlangeAttachment__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FlangeAttachment__Group__8__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FlangeAttachment__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFlangeAttachmentAccess().getENDTerminalRuleCall_8()); }
	RULE_END
	{ after(grammarAccess.getFlangeAttachmentAccess().getENDTerminalRuleCall_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Connection__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Connection__Group__0__Impl
	rule__Connection__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Connection__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConnectionAccess().getHyphenMinusKeyword_0()); }
	HyphenMinus
	{ after(grammarAccess.getConnectionAccess().getHyphenMinusKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Connection__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Connection__Group__1__Impl
	rule__Connection__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Connection__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConnectionAccess().getNameKeyword_1()); }
	Name
	{ after(grammarAccess.getConnectionAccess().getNameKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Connection__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Connection__Group__2__Impl
	rule__Connection__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Connection__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConnectionAccess().getNameAssignment_2()); }
	(rule__Connection__NameAssignment_2)
	{ after(grammarAccess.getConnectionAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Connection__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Connection__Group__3__Impl
	rule__Connection__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Connection__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConnectionAccess().getBEGINTerminalRuleCall_3()); }
	RULE_BEGIN
	{ after(grammarAccess.getConnectionAccess().getBEGINTerminalRuleCall_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Connection__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Connection__Group__4__Impl
	rule__Connection__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Connection__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConnectionAccess().getBaseAttachmentKeyword_4()); }
	BaseAttachment
	{ after(grammarAccess.getConnectionAccess().getBaseAttachmentKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Connection__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Connection__Group__5__Impl
	rule__Connection__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Connection__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConnectionAccess().getBaseAttachmentAssignment_5()); }
	(rule__Connection__BaseAttachmentAssignment_5)
	{ after(grammarAccess.getConnectionAccess().getBaseAttachmentAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Connection__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Connection__Group__6__Impl
	rule__Connection__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Connection__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConnectionAccess().getFlangeAttachmentKeyword_6()); }
	FlangeAttachment
	{ after(grammarAccess.getConnectionAccess().getFlangeAttachmentKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Connection__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Connection__Group__7__Impl
	rule__Connection__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Connection__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConnectionAccess().getFlangeAttachmentAssignment_7()); }
	(rule__Connection__FlangeAttachmentAssignment_7)
	{ after(grammarAccess.getConnectionAccess().getFlangeAttachmentAssignment_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Connection__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Connection__Group__8__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Connection__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConnectionAccess().getENDTerminalRuleCall_8()); }
	RULE_END
	{ after(grammarAccess.getConnectionAccess().getENDTerminalRuleCall_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Joint__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Joint__Group__0__Impl
	rule__Joint__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Joint__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJointAccess().getHyphenMinusKeyword_0()); }
	HyphenMinus
	{ after(grammarAccess.getJointAccess().getHyphenMinusKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Joint__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Joint__Group__1__Impl
	rule__Joint__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Joint__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJointAccess().getNameKeyword_1()); }
	Name
	{ after(grammarAccess.getJointAccess().getNameKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Joint__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Joint__Group__2__Impl
	rule__Joint__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Joint__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJointAccess().getNameAssignment_2()); }
	(rule__Joint__NameAssignment_2)
	{ after(grammarAccess.getJointAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Joint__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Joint__Group__3__Impl
	rule__Joint__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Joint__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJointAccess().getBEGINTerminalRuleCall_3()); }
	RULE_BEGIN
	{ after(grammarAccess.getJointAccess().getBEGINTerminalRuleCall_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Joint__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Joint__Group__4__Impl
	rule__Joint__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Joint__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJointAccess().getGroup_4()); }
	(rule__Joint__Group_4__0)
	{ after(grammarAccess.getJointAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Joint__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Joint__Group__5__Impl
	rule__Joint__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Joint__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJointAccess().getGroup_5()); }
	(rule__Joint__Group_5__0)
	{ after(grammarAccess.getJointAccess().getGroup_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Joint__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Joint__Group__6__Impl
	rule__Joint__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Joint__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJointAccess().getGroup_6()); }
	(rule__Joint__Group_6__0)
	{ after(grammarAccess.getJointAccess().getGroup_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Joint__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Joint__Group__7__Impl
	rule__Joint__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Joint__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJointAccess().getGroup_7()); }
	(rule__Joint__Group_7__0)
	{ after(grammarAccess.getJointAccess().getGroup_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Joint__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Joint__Group__8__Impl
	rule__Joint__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__Joint__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJointAccess().getGroup_8()); }
	(rule__Joint__Group_8__0)?
	{ after(grammarAccess.getJointAccess().getGroup_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Joint__Group__9
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Joint__Group__9__Impl
	rule__Joint__Group__10
;
finally {
	restoreStackSize(stackSize);
}

rule__Joint__Group__9__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJointAccess().getGroup_9()); }
	(rule__Joint__Group_9__0)?
	{ after(grammarAccess.getJointAccess().getGroup_9()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Joint__Group__10
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Joint__Group__10__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Joint__Group__10__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJointAccess().getENDTerminalRuleCall_10()); }
	RULE_END
	{ after(grammarAccess.getJointAccess().getENDTerminalRuleCall_10()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Joint__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Joint__Group_4__0__Impl
	rule__Joint__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Joint__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJointAccess().getTypeKeyword_4_0()); }
	Type
	{ after(grammarAccess.getJointAccess().getTypeKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Joint__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Joint__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Joint__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJointAccess().getTypeAssignment_4_1()); }
	(rule__Joint__TypeAssignment_4_1)
	{ after(grammarAccess.getJointAccess().getTypeAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Joint__Group_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Joint__Group_5__0__Impl
	rule__Joint__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Joint__Group_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJointAccess().getParentKeyword_5_0()); }
	Parent
	{ after(grammarAccess.getJointAccess().getParentKeyword_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Joint__Group_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Joint__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Joint__Group_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJointAccess().getParentAssignment_5_1()); }
	(rule__Joint__ParentAssignment_5_1)
	{ after(grammarAccess.getJointAccess().getParentAssignment_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Joint__Group_6__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Joint__Group_6__0__Impl
	rule__Joint__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Joint__Group_6__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJointAccess().getChildKeyword_6_0()); }
	Child
	{ after(grammarAccess.getJointAccess().getChildKeyword_6_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Joint__Group_6__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Joint__Group_6__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Joint__Group_6__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJointAccess().getChildAssignment_6_1()); }
	(rule__Joint__ChildAssignment_6_1)
	{ after(grammarAccess.getJointAccess().getChildAssignment_6_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Joint__Group_7__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Joint__Group_7__0__Impl
	rule__Joint__Group_7__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Joint__Group_7__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJointAccess().getOriginKeyword_7_0()); }
	Origin
	{ after(grammarAccess.getJointAccess().getOriginKeyword_7_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Joint__Group_7__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Joint__Group_7__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Joint__Group_7__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJointAccess().getOriginAssignment_7_1()); }
	(rule__Joint__OriginAssignment_7_1)
	{ after(grammarAccess.getJointAccess().getOriginAssignment_7_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Joint__Group_8__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Joint__Group_8__0__Impl
	rule__Joint__Group_8__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Joint__Group_8__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJointAccess().getAxisKeyword_8_0()); }
	Axis
	{ after(grammarAccess.getJointAccess().getAxisKeyword_8_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Joint__Group_8__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Joint__Group_8__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Joint__Group_8__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJointAccess().getAxisAssignment_8_1()); }
	(rule__Joint__AxisAssignment_8_1)
	{ after(grammarAccess.getJointAccess().getAxisAssignment_8_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Joint__Group_9__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Joint__Group_9__0__Impl
	rule__Joint__Group_9__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Joint__Group_9__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJointAccess().getLimitKeyword_9_0()); }
	Limit
	{ after(grammarAccess.getJointAccess().getLimitKeyword_9_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Joint__Group_9__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Joint__Group_9__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Joint__Group_9__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJointAccess().getLimitAssignment_9_1()); }
	(rule__Joint__LimitAssignment_9_1)
	{ after(grammarAccess.getJointAccess().getLimitAssignment_9_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Parent__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parent__Group__0__Impl
	rule__Parent__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Parent__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParentAccess().getBEGINTerminalRuleCall_0()); }
	RULE_BEGIN
	{ after(grammarAccess.getParentAccess().getBEGINTerminalRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parent__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parent__Group__1__Impl
	rule__Parent__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Parent__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParentAccess().getLinkKeyword_1()); }
	Link
	{ after(grammarAccess.getParentAccess().getLinkKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parent__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parent__Group__2__Impl
	rule__Parent__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Parent__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParentAccess().getLinkAssignment_2()); }
	(rule__Parent__LinkAssignment_2)
	{ after(grammarAccess.getParentAccess().getLinkAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parent__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parent__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Parent__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParentAccess().getENDTerminalRuleCall_3()); }
	RULE_END
	{ after(grammarAccess.getParentAccess().getENDTerminalRuleCall_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Child__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Child__Group__0__Impl
	rule__Child__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Child__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChildAccess().getBEGINTerminalRuleCall_0()); }
	RULE_BEGIN
	{ after(grammarAccess.getChildAccess().getBEGINTerminalRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Child__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Child__Group__1__Impl
	rule__Child__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Child__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChildAccess().getLinkKeyword_1()); }
	Link
	{ after(grammarAccess.getChildAccess().getLinkKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Child__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Child__Group__2__Impl
	rule__Child__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Child__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChildAccess().getLinkAssignment_2()); }
	(rule__Child__LinkAssignment_2)
	{ after(grammarAccess.getChildAccess().getLinkAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Child__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Child__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Child__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChildAccess().getENDTerminalRuleCall_3()); }
	RULE_END
	{ after(grammarAccess.getChildAccess().getENDTerminalRuleCall_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Link__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Link__Group__0__Impl
	rule__Link__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Link__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLinkAccess().getHyphenMinusKeyword_0()); }
	HyphenMinus
	{ after(grammarAccess.getLinkAccess().getHyphenMinusKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Link__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Link__Group__1__Impl
	rule__Link__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Link__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLinkAccess().getNameKeyword_1()); }
	Name
	{ after(grammarAccess.getLinkAccess().getNameKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Link__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Link__Group__2__Impl
	rule__Link__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Link__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLinkAccess().getNameAssignment_2()); }
	(rule__Link__NameAssignment_2)
	{ after(grammarAccess.getLinkAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Link__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Link__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Link__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLinkAccess().getGroup_3()); }
	(rule__Link__Group_3__0)?
	{ after(grammarAccess.getLinkAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Link__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Link__Group_3__0__Impl
	rule__Link__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Link__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLinkAccess().getBEGINTerminalRuleCall_3_0()); }
	RULE_BEGIN
	{ after(grammarAccess.getLinkAccess().getBEGINTerminalRuleCall_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Link__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Link__Group_3__1__Impl
	rule__Link__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Link__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLinkAccess().getGroup_3_1()); }
	(rule__Link__Group_3_1__0)?
	{ after(grammarAccess.getLinkAccess().getGroup_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Link__Group_3__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Link__Group_3__2__Impl
	rule__Link__Group_3__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Link__Group_3__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLinkAccess().getGroup_3_2()); }
	(rule__Link__Group_3_2__0)?
	{ after(grammarAccess.getLinkAccess().getGroup_3_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Link__Group_3__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Link__Group_3__3__Impl
	rule__Link__Group_3__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Link__Group_3__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLinkAccess().getGroup_3_3()); }
	(rule__Link__Group_3_3__0)?
	{ after(grammarAccess.getLinkAccess().getGroup_3_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Link__Group_3__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Link__Group_3__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Link__Group_3__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLinkAccess().getENDTerminalRuleCall_3_4()); }
	RULE_END
	{ after(grammarAccess.getLinkAccess().getENDTerminalRuleCall_3_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Link__Group_3_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Link__Group_3_1__0__Impl
	rule__Link__Group_3_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Link__Group_3_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLinkAccess().getInertialKeyword_3_1_0()); }
	Inertial
	{ after(grammarAccess.getLinkAccess().getInertialKeyword_3_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Link__Group_3_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Link__Group_3_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Link__Group_3_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLinkAccess().getInertialAssignment_3_1_1()); }
	(rule__Link__InertialAssignment_3_1_1)
	{ after(grammarAccess.getLinkAccess().getInertialAssignment_3_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Link__Group_3_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Link__Group_3_2__0__Impl
	rule__Link__Group_3_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Link__Group_3_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLinkAccess().getVisualKeyword_3_2_0()); }
	Visual
	{ after(grammarAccess.getLinkAccess().getVisualKeyword_3_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Link__Group_3_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Link__Group_3_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Link__Group_3_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLinkAccess().getVisualAssignment_3_2_1()); }
	(rule__Link__VisualAssignment_3_2_1)
	{ after(grammarAccess.getLinkAccess().getVisualAssignment_3_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Link__Group_3_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Link__Group_3_3__0__Impl
	rule__Link__Group_3_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Link__Group_3_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLinkAccess().getCollisionKeyword_3_3_0()); }
	Collision
	{ after(grammarAccess.getLinkAccess().getCollisionKeyword_3_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Link__Group_3_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Link__Group_3_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Link__Group_3_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLinkAccess().getCollisionAssignment_3_3_1()); }
	(rule__Link__CollisionAssignment_3_3_1)
	{ after(grammarAccess.getLinkAccess().getCollisionAssignment_3_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Pose__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Pose__Group__0__Impl
	rule__Pose__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Pose__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPoseAccess().getPoseAction_0()); }
	()
	{ after(grammarAccess.getPoseAccess().getPoseAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Pose__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Pose__Group__1__Impl
	rule__Pose__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Pose__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPoseAccess().getBEGINTerminalRuleCall_1()); }
	RULE_BEGIN
	{ after(grammarAccess.getPoseAccess().getBEGINTerminalRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Pose__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Pose__Group__2__Impl
	rule__Pose__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Pose__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPoseAccess().getGroup_2()); }
	(rule__Pose__Group_2__0)?
	{ after(grammarAccess.getPoseAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Pose__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Pose__Group__3__Impl
	rule__Pose__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Pose__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPoseAccess().getGroup_3()); }
	(rule__Pose__Group_3__0)?
	{ after(grammarAccess.getPoseAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Pose__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Pose__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Pose__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPoseAccess().getENDTerminalRuleCall_4()); }
	RULE_END
	{ after(grammarAccess.getPoseAccess().getENDTerminalRuleCall_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Pose__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Pose__Group_2__0__Impl
	rule__Pose__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Pose__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPoseAccess().getRpyKeyword_2_0()); }
	Rpy
	{ after(grammarAccess.getPoseAccess().getRpyKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Pose__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Pose__Group_2__1__Impl
	rule__Pose__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Pose__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPoseAccess().getLeftSquareBracketKeyword_2_1()); }
	LeftSquareBracket
	{ after(grammarAccess.getPoseAccess().getLeftSquareBracketKeyword_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Pose__Group_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Pose__Group_2__2__Impl
	rule__Pose__Group_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Pose__Group_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPoseAccess().getRpyAssignment_2_2()); }
	(rule__Pose__RpyAssignment_2_2)
	{ after(grammarAccess.getPoseAccess().getRpyAssignment_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Pose__Group_2__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Pose__Group_2__3__Impl
	rule__Pose__Group_2__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Pose__Group_2__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPoseAccess().getGroup_2_3()); }
	(rule__Pose__Group_2_3__0)*
	{ after(grammarAccess.getPoseAccess().getGroup_2_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Pose__Group_2__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Pose__Group_2__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Pose__Group_2__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPoseAccess().getRightSquareBracketKeyword_2_4()); }
	RightSquareBracket
	{ after(grammarAccess.getPoseAccess().getRightSquareBracketKeyword_2_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Pose__Group_2_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Pose__Group_2_3__0__Impl
	rule__Pose__Group_2_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Pose__Group_2_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPoseAccess().getCommaKeyword_2_3_0()); }
	Comma
	{ after(grammarAccess.getPoseAccess().getCommaKeyword_2_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Pose__Group_2_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Pose__Group_2_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Pose__Group_2_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPoseAccess().getRpyAssignment_2_3_1()); }
	(rule__Pose__RpyAssignment_2_3_1)
	{ after(grammarAccess.getPoseAccess().getRpyAssignment_2_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Pose__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Pose__Group_3__0__Impl
	rule__Pose__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Pose__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPoseAccess().getXyzKeyword_3_0()); }
	Xyz
	{ after(grammarAccess.getPoseAccess().getXyzKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Pose__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Pose__Group_3__1__Impl
	rule__Pose__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Pose__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPoseAccess().getLeftSquareBracketKeyword_3_1()); }
	LeftSquareBracket
	{ after(grammarAccess.getPoseAccess().getLeftSquareBracketKeyword_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Pose__Group_3__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Pose__Group_3__2__Impl
	rule__Pose__Group_3__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Pose__Group_3__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPoseAccess().getXyzAssignment_3_2()); }
	(rule__Pose__XyzAssignment_3_2)
	{ after(grammarAccess.getPoseAccess().getXyzAssignment_3_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Pose__Group_3__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Pose__Group_3__3__Impl
	rule__Pose__Group_3__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Pose__Group_3__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPoseAccess().getGroup_3_3()); }
	(rule__Pose__Group_3_3__0)*
	{ after(grammarAccess.getPoseAccess().getGroup_3_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Pose__Group_3__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Pose__Group_3__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Pose__Group_3__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPoseAccess().getRightSquareBracketKeyword_3_4()); }
	RightSquareBracket
	{ after(grammarAccess.getPoseAccess().getRightSquareBracketKeyword_3_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Pose__Group_3_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Pose__Group_3_3__0__Impl
	rule__Pose__Group_3_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Pose__Group_3_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPoseAccess().getCommaKeyword_3_3_0()); }
	Comma
	{ after(grammarAccess.getPoseAccess().getCommaKeyword_3_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Pose__Group_3_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Pose__Group_3_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Pose__Group_3_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPoseAccess().getXyzAssignment_3_3_1()); }
	(rule__Pose__XyzAssignment_3_3_1)
	{ after(grammarAccess.getPoseAccess().getXyzAssignment_3_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Axis__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Axis__Group__0__Impl
	rule__Axis__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Axis__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAxisAccess().getAxisAction_0()); }
	()
	{ after(grammarAccess.getAxisAccess().getAxisAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Axis__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Axis__Group__1__Impl
	rule__Axis__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Axis__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAxisAccess().getBEGINTerminalRuleCall_1()); }
	RULE_BEGIN
	{ after(grammarAccess.getAxisAccess().getBEGINTerminalRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Axis__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Axis__Group__2__Impl
	rule__Axis__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Axis__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAxisAccess().getGroup_2()); }
	(rule__Axis__Group_2__0)?
	{ after(grammarAccess.getAxisAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Axis__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Axis__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Axis__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAxisAccess().getENDTerminalRuleCall_3()); }
	RULE_END
	{ after(grammarAccess.getAxisAccess().getENDTerminalRuleCall_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Axis__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Axis__Group_2__0__Impl
	rule__Axis__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Axis__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAxisAccess().getXyzKeyword_2_0()); }
	Xyz
	{ after(grammarAccess.getAxisAccess().getXyzKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Axis__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Axis__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Axis__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAxisAccess().getXyzAssignment_2_1()); }
	(rule__Axis__XyzAssignment_2_1)
	{ after(grammarAccess.getAxisAccess().getXyzAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Limit__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Limit__Group__0__Impl
	rule__Limit__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Limit__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLimitAccess().getLimitAction_0()); }
	()
	{ after(grammarAccess.getLimitAccess().getLimitAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Limit__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Limit__Group__1__Impl
	rule__Limit__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Limit__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLimitAccess().getBEGINTerminalRuleCall_1()); }
	RULE_BEGIN
	{ after(grammarAccess.getLimitAccess().getBEGINTerminalRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Limit__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Limit__Group__2__Impl
	rule__Limit__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Limit__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLimitAccess().getGroup_2()); }
	(rule__Limit__Group_2__0)?
	{ after(grammarAccess.getLimitAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Limit__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Limit__Group__3__Impl
	rule__Limit__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Limit__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLimitAccess().getGroup_3()); }
	(rule__Limit__Group_3__0)?
	{ after(grammarAccess.getLimitAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Limit__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Limit__Group__4__Impl
	rule__Limit__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Limit__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLimitAccess().getGroup_4()); }
	(rule__Limit__Group_4__0)?
	{ after(grammarAccess.getLimitAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Limit__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Limit__Group__5__Impl
	rule__Limit__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Limit__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLimitAccess().getGroup_5()); }
	(rule__Limit__Group_5__0)?
	{ after(grammarAccess.getLimitAccess().getGroup_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Limit__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Limit__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Limit__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLimitAccess().getENDTerminalRuleCall_6()); }
	RULE_END
	{ after(grammarAccess.getLimitAccess().getENDTerminalRuleCall_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Limit__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Limit__Group_2__0__Impl
	rule__Limit__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Limit__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLimitAccess().getEffortKeyword_2_0()); }
	Effort
	{ after(grammarAccess.getLimitAccess().getEffortKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Limit__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Limit__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Limit__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLimitAccess().getEffortAssignment_2_1()); }
	(rule__Limit__EffortAssignment_2_1)
	{ after(grammarAccess.getLimitAccess().getEffortAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Limit__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Limit__Group_3__0__Impl
	rule__Limit__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Limit__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLimitAccess().getLowerKeyword_3_0()); }
	Lower
	{ after(grammarAccess.getLimitAccess().getLowerKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Limit__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Limit__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Limit__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLimitAccess().getLowerAssignment_3_1()); }
	(rule__Limit__LowerAssignment_3_1)
	{ after(grammarAccess.getLimitAccess().getLowerAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Limit__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Limit__Group_4__0__Impl
	rule__Limit__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Limit__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLimitAccess().getUpperKeyword_4_0()); }
	Upper
	{ after(grammarAccess.getLimitAccess().getUpperKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Limit__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Limit__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Limit__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLimitAccess().getUpperAssignment_4_1()); }
	(rule__Limit__UpperAssignment_4_1)
	{ after(grammarAccess.getLimitAccess().getUpperAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Limit__Group_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Limit__Group_5__0__Impl
	rule__Limit__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Limit__Group_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLimitAccess().getVelocityKeyword_5_0()); }
	Velocity
	{ after(grammarAccess.getLimitAccess().getVelocityKeyword_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Limit__Group_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Limit__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Limit__Group_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLimitAccess().getVelocityAssignment_5_1()); }
	(rule__Limit__VelocityAssignment_5_1)
	{ after(grammarAccess.getLimitAccess().getVelocityAssignment_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Inertial__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Inertial__Group__0__Impl
	rule__Inertial__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Inertial__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInertialAccess().getInertialAction_0()); }
	()
	{ after(grammarAccess.getInertialAccess().getInertialAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Inertial__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Inertial__Group__1__Impl
	rule__Inertial__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Inertial__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInertialAccess().getBEGINTerminalRuleCall_1()); }
	RULE_BEGIN
	{ after(grammarAccess.getInertialAccess().getBEGINTerminalRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Inertial__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Inertial__Group__2__Impl
	rule__Inertial__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Inertial__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInertialAccess().getGroup_2()); }
	(rule__Inertial__Group_2__0)?
	{ after(grammarAccess.getInertialAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Inertial__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Inertial__Group__3__Impl
	rule__Inertial__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Inertial__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInertialAccess().getGroup_3()); }
	(rule__Inertial__Group_3__0)?
	{ after(grammarAccess.getInertialAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Inertial__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Inertial__Group__4__Impl
	rule__Inertial__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Inertial__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInertialAccess().getGroup_4()); }
	(rule__Inertial__Group_4__0)?
	{ after(grammarAccess.getInertialAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Inertial__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Inertial__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Inertial__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInertialAccess().getENDTerminalRuleCall_5()); }
	RULE_END
	{ after(grammarAccess.getInertialAccess().getENDTerminalRuleCall_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Inertial__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Inertial__Group_2__0__Impl
	rule__Inertial__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Inertial__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInertialAccess().getOriginKeyword_2_0()); }
	Origin
	{ after(grammarAccess.getInertialAccess().getOriginKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Inertial__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Inertial__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Inertial__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInertialAccess().getOriginAssignment_2_1()); }
	(rule__Inertial__OriginAssignment_2_1)
	{ after(grammarAccess.getInertialAccess().getOriginAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Inertial__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Inertial__Group_3__0__Impl
	rule__Inertial__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Inertial__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInertialAccess().getMassKeyword_3_0()); }
	Mass
	{ after(grammarAccess.getInertialAccess().getMassKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Inertial__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Inertial__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Inertial__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInertialAccess().getMassAssignment_3_1()); }
	(rule__Inertial__MassAssignment_3_1)
	{ after(grammarAccess.getInertialAccess().getMassAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Inertial__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Inertial__Group_4__0__Impl
	rule__Inertial__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Inertial__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInertialAccess().getInertiaKeyword_4_0()); }
	Inertia
	{ after(grammarAccess.getInertialAccess().getInertiaKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Inertial__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Inertial__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Inertial__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInertialAccess().getInertiaAssignment_4_1()); }
	(rule__Inertial__InertiaAssignment_4_1)
	{ after(grammarAccess.getInertialAccess().getInertiaAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Visual__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Visual__Group__0__Impl
	rule__Visual__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Visual__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVisualAccess().getBEGINTerminalRuleCall_0()); }
	RULE_BEGIN
	{ after(grammarAccess.getVisualAccess().getBEGINTerminalRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Visual__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Visual__Group__1__Impl
	rule__Visual__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Visual__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVisualAccess().getGroup_1()); }
	(rule__Visual__Group_1__0)?
	{ after(grammarAccess.getVisualAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Visual__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Visual__Group__2__Impl
	rule__Visual__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Visual__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVisualAccess().getGeometryKeyword_2()); }
	Geometry
	{ after(grammarAccess.getVisualAccess().getGeometryKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Visual__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Visual__Group__3__Impl
	rule__Visual__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Visual__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVisualAccess().getGeometryAssignment_3()); }
	(rule__Visual__GeometryAssignment_3)
	{ after(grammarAccess.getVisualAccess().getGeometryAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Visual__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Visual__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Visual__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVisualAccess().getENDTerminalRuleCall_4()); }
	RULE_END
	{ after(grammarAccess.getVisualAccess().getENDTerminalRuleCall_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Visual__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Visual__Group_1__0__Impl
	rule__Visual__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Visual__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVisualAccess().getOriginKeyword_1_0()); }
	Origin
	{ after(grammarAccess.getVisualAccess().getOriginKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Visual__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Visual__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Visual__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVisualAccess().getOriginAssignment_1_1()); }
	(rule__Visual__OriginAssignment_1_1)
	{ after(grammarAccess.getVisualAccess().getOriginAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Collision__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Collision__Group__0__Impl
	rule__Collision__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Collision__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCollisionAccess().getBEGINTerminalRuleCall_0()); }
	RULE_BEGIN
	{ after(grammarAccess.getCollisionAccess().getBEGINTerminalRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Collision__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Collision__Group__1__Impl
	rule__Collision__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Collision__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCollisionAccess().getGroup_1()); }
	(rule__Collision__Group_1__0)?
	{ after(grammarAccess.getCollisionAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Collision__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Collision__Group__2__Impl
	rule__Collision__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Collision__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCollisionAccess().getGeometryKeyword_2()); }
	Geometry
	{ after(grammarAccess.getCollisionAccess().getGeometryKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Collision__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Collision__Group__3__Impl
	rule__Collision__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Collision__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCollisionAccess().getGeometryAssignment_3()); }
	(rule__Collision__GeometryAssignment_3)
	{ after(grammarAccess.getCollisionAccess().getGeometryAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Collision__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Collision__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Collision__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCollisionAccess().getENDTerminalRuleCall_4()); }
	RULE_END
	{ after(grammarAccess.getCollisionAccess().getENDTerminalRuleCall_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Collision__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Collision__Group_1__0__Impl
	rule__Collision__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Collision__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCollisionAccess().getOriginKeyword_1_0()); }
	Origin
	{ after(grammarAccess.getCollisionAccess().getOriginKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Collision__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Collision__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Collision__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCollisionAccess().getOriginAssignment_1_1()); }
	(rule__Collision__OriginAssignment_1_1)
	{ after(grammarAccess.getCollisionAccess().getOriginAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Mass__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Mass__Group__0__Impl
	rule__Mass__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Mass__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMassAccess().getMassAction_0()); }
	()
	{ after(grammarAccess.getMassAccess().getMassAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Mass__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Mass__Group__1__Impl
	rule__Mass__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Mass__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMassAccess().getBEGINTerminalRuleCall_1()); }
	RULE_BEGIN
	{ after(grammarAccess.getMassAccess().getBEGINTerminalRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Mass__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Mass__Group__2__Impl
	rule__Mass__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Mass__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMassAccess().getValueKeyword_2()); }
	Value
	{ after(grammarAccess.getMassAccess().getValueKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Mass__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Mass__Group__3__Impl
	rule__Mass__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Mass__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMassAccess().getValueAssignment_3()); }
	(rule__Mass__ValueAssignment_3)
	{ after(grammarAccess.getMassAccess().getValueAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Mass__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Mass__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Mass__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMassAccess().getENDTerminalRuleCall_4()); }
	RULE_END
	{ after(grammarAccess.getMassAccess().getENDTerminalRuleCall_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Inertia__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Inertia__Group__0__Impl
	rule__Inertia__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Inertia__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInertiaAccess().getInertiaAction_0()); }
	()
	{ after(grammarAccess.getInertiaAccess().getInertiaAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Inertia__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Inertia__Group__1__Impl
	rule__Inertia__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Inertia__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInertiaAccess().getBEGINTerminalRuleCall_1()); }
	RULE_BEGIN
	{ after(grammarAccess.getInertiaAccess().getBEGINTerminalRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Inertia__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Inertia__Group__2__Impl
	rule__Inertia__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Inertia__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInertiaAccess().getGroup_2()); }
	(rule__Inertia__Group_2__0)?
	{ after(grammarAccess.getInertiaAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Inertia__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Inertia__Group__3__Impl
	rule__Inertia__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Inertia__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInertiaAccess().getGroup_3()); }
	(rule__Inertia__Group_3__0)?
	{ after(grammarAccess.getInertiaAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Inertia__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Inertia__Group__4__Impl
	rule__Inertia__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Inertia__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInertiaAccess().getGroup_4()); }
	(rule__Inertia__Group_4__0)?
	{ after(grammarAccess.getInertiaAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Inertia__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Inertia__Group__5__Impl
	rule__Inertia__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Inertia__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInertiaAccess().getGroup_5()); }
	(rule__Inertia__Group_5__0)?
	{ after(grammarAccess.getInertiaAccess().getGroup_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Inertia__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Inertia__Group__6__Impl
	rule__Inertia__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Inertia__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInertiaAccess().getGroup_6()); }
	(rule__Inertia__Group_6__0)?
	{ after(grammarAccess.getInertiaAccess().getGroup_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Inertia__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Inertia__Group__7__Impl
	rule__Inertia__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Inertia__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInertiaAccess().getGroup_7()); }
	(rule__Inertia__Group_7__0)?
	{ after(grammarAccess.getInertiaAccess().getGroup_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Inertia__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Inertia__Group__8__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Inertia__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInertiaAccess().getENDTerminalRuleCall_8()); }
	RULE_END
	{ after(grammarAccess.getInertiaAccess().getENDTerminalRuleCall_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Inertia__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Inertia__Group_2__0__Impl
	rule__Inertia__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Inertia__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInertiaAccess().getIxxKeyword_2_0()); }
	Ixx
	{ after(grammarAccess.getInertiaAccess().getIxxKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Inertia__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Inertia__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Inertia__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInertiaAccess().getIxxAssignment_2_1()); }
	(rule__Inertia__IxxAssignment_2_1)
	{ after(grammarAccess.getInertiaAccess().getIxxAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Inertia__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Inertia__Group_3__0__Impl
	rule__Inertia__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Inertia__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInertiaAccess().getIxyKeyword_3_0()); }
	Ixy
	{ after(grammarAccess.getInertiaAccess().getIxyKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Inertia__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Inertia__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Inertia__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInertiaAccess().getIxyAssignment_3_1()); }
	(rule__Inertia__IxyAssignment_3_1)
	{ after(grammarAccess.getInertiaAccess().getIxyAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Inertia__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Inertia__Group_4__0__Impl
	rule__Inertia__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Inertia__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInertiaAccess().getIxzKeyword_4_0()); }
	Ixz
	{ after(grammarAccess.getInertiaAccess().getIxzKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Inertia__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Inertia__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Inertia__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInertiaAccess().getIxzAssignment_4_1()); }
	(rule__Inertia__IxzAssignment_4_1)
	{ after(grammarAccess.getInertiaAccess().getIxzAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Inertia__Group_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Inertia__Group_5__0__Impl
	rule__Inertia__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Inertia__Group_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInertiaAccess().getIyyKeyword_5_0()); }
	Iyy
	{ after(grammarAccess.getInertiaAccess().getIyyKeyword_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Inertia__Group_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Inertia__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Inertia__Group_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInertiaAccess().getIyyAssignment_5_1()); }
	(rule__Inertia__IyyAssignment_5_1)
	{ after(grammarAccess.getInertiaAccess().getIyyAssignment_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Inertia__Group_6__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Inertia__Group_6__0__Impl
	rule__Inertia__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Inertia__Group_6__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInertiaAccess().getIyzKeyword_6_0()); }
	Iyz
	{ after(grammarAccess.getInertiaAccess().getIyzKeyword_6_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Inertia__Group_6__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Inertia__Group_6__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Inertia__Group_6__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInertiaAccess().getIyzAssignment_6_1()); }
	(rule__Inertia__IyzAssignment_6_1)
	{ after(grammarAccess.getInertiaAccess().getIyzAssignment_6_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Inertia__Group_7__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Inertia__Group_7__0__Impl
	rule__Inertia__Group_7__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Inertia__Group_7__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInertiaAccess().getIzzKeyword_7_0()); }
	Izz
	{ after(grammarAccess.getInertiaAccess().getIzzKeyword_7_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Inertia__Group_7__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Inertia__Group_7__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Inertia__Group_7__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInertiaAccess().getIzzAssignment_7_1()); }
	(rule__Inertia__IzzAssignment_7_1)
	{ after(grammarAccess.getInertiaAccess().getIzzAssignment_7_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Geometry__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Geometry__Group__0__Impl
	rule__Geometry__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Geometry__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGeometryAccess().getGeometryAction_0()); }
	()
	{ after(grammarAccess.getGeometryAccess().getGeometryAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Geometry__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Geometry__Group__1__Impl
	rule__Geometry__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Geometry__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGeometryAccess().getBEGINTerminalRuleCall_1()); }
	RULE_BEGIN
	{ after(grammarAccess.getGeometryAccess().getBEGINTerminalRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Geometry__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Geometry__Group__2__Impl
	rule__Geometry__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Geometry__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGeometryAccess().getGroup_2()); }
	(rule__Geometry__Group_2__0)?
	{ after(grammarAccess.getGeometryAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Geometry__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Geometry__Group__3__Impl
	rule__Geometry__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Geometry__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGeometryAccess().getGroup_3()); }
	(rule__Geometry__Group_3__0)?
	{ after(grammarAccess.getGeometryAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Geometry__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Geometry__Group__4__Impl
	rule__Geometry__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Geometry__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGeometryAccess().getGroup_4()); }
	(rule__Geometry__Group_4__0)?
	{ after(grammarAccess.getGeometryAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Geometry__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Geometry__Group__5__Impl
	rule__Geometry__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Geometry__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGeometryAccess().getGroup_5()); }
	(rule__Geometry__Group_5__0)?
	{ after(grammarAccess.getGeometryAccess().getGroup_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Geometry__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Geometry__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Geometry__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGeometryAccess().getENDTerminalRuleCall_6()); }
	RULE_END
	{ after(grammarAccess.getGeometryAccess().getENDTerminalRuleCall_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Geometry__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Geometry__Group_2__0__Impl
	rule__Geometry__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Geometry__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGeometryAccess().getBoxKeyword_2_0()); }
	Box
	{ after(grammarAccess.getGeometryAccess().getBoxKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Geometry__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Geometry__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Geometry__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGeometryAccess().getBoxAssignment_2_1()); }
	(rule__Geometry__BoxAssignment_2_1)
	{ after(grammarAccess.getGeometryAccess().getBoxAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Geometry__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Geometry__Group_3__0__Impl
	rule__Geometry__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Geometry__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGeometryAccess().getCylinderKeyword_3_0()); }
	Cylinder
	{ after(grammarAccess.getGeometryAccess().getCylinderKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Geometry__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Geometry__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Geometry__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGeometryAccess().getCylinderAssignment_3_1()); }
	(rule__Geometry__CylinderAssignment_3_1)
	{ after(grammarAccess.getGeometryAccess().getCylinderAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Geometry__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Geometry__Group_4__0__Impl
	rule__Geometry__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Geometry__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGeometryAccess().getSphereKeyword_4_0()); }
	Sphere
	{ after(grammarAccess.getGeometryAccess().getSphereKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Geometry__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Geometry__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Geometry__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGeometryAccess().getSphereAssignment_4_1()); }
	(rule__Geometry__SphereAssignment_4_1)
	{ after(grammarAccess.getGeometryAccess().getSphereAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Geometry__Group_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Geometry__Group_5__0__Impl
	rule__Geometry__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Geometry__Group_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGeometryAccess().getMeshKeyword_5_0()); }
	Mesh
	{ after(grammarAccess.getGeometryAccess().getMeshKeyword_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Geometry__Group_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Geometry__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Geometry__Group_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGeometryAccess().getMeshAssignment_5_1()); }
	(rule__Geometry__MeshAssignment_5_1)
	{ after(grammarAccess.getGeometryAccess().getMeshAssignment_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Box__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Box__Group__0__Impl
	rule__Box__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Box__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBoxAccess().getBoxAction_0()); }
	()
	{ after(grammarAccess.getBoxAccess().getBoxAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Box__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Box__Group__1__Impl
	rule__Box__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Box__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBoxAccess().getBEGINTerminalRuleCall_1()); }
	RULE_BEGIN
	{ after(grammarAccess.getBoxAccess().getBEGINTerminalRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Box__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Box__Group__2__Impl
	rule__Box__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Box__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBoxAccess().getSizeKeyword_2()); }
	Size
	{ after(grammarAccess.getBoxAccess().getSizeKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Box__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Box__Group__3__Impl
	rule__Box__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Box__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBoxAccess().getSizeAssignment_3()); }
	(rule__Box__SizeAssignment_3)
	{ after(grammarAccess.getBoxAccess().getSizeAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Box__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Box__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Box__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBoxAccess().getENDTerminalRuleCall_4()); }
	RULE_END
	{ after(grammarAccess.getBoxAccess().getENDTerminalRuleCall_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Cylinder__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Cylinder__Group__0__Impl
	rule__Cylinder__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Cylinder__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCylinderAccess().getBEGINTerminalRuleCall_0()); }
	RULE_BEGIN
	{ after(grammarAccess.getCylinderAccess().getBEGINTerminalRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Cylinder__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Cylinder__Group__1__Impl
	rule__Cylinder__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Cylinder__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCylinderAccess().getLengthKeyword_1()); }
	Length
	{ after(grammarAccess.getCylinderAccess().getLengthKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Cylinder__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Cylinder__Group__2__Impl
	rule__Cylinder__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Cylinder__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCylinderAccess().getLengthAssignment_2()); }
	(rule__Cylinder__LengthAssignment_2)
	{ after(grammarAccess.getCylinderAccess().getLengthAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Cylinder__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Cylinder__Group__3__Impl
	rule__Cylinder__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Cylinder__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCylinderAccess().getRadiusKeyword_3()); }
	Radius
	{ after(grammarAccess.getCylinderAccess().getRadiusKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Cylinder__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Cylinder__Group__4__Impl
	rule__Cylinder__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Cylinder__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCylinderAccess().getRadiusAssignment_4()); }
	(rule__Cylinder__RadiusAssignment_4)
	{ after(grammarAccess.getCylinderAccess().getRadiusAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Cylinder__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Cylinder__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Cylinder__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCylinderAccess().getENDTerminalRuleCall_5()); }
	RULE_END
	{ after(grammarAccess.getCylinderAccess().getENDTerminalRuleCall_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Sphere__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Sphere__Group__0__Impl
	rule__Sphere__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Sphere__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSphereAccess().getBEGINTerminalRuleCall_0()); }
	RULE_BEGIN
	{ after(grammarAccess.getSphereAccess().getBEGINTerminalRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sphere__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Sphere__Group__1__Impl
	rule__Sphere__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Sphere__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSphereAccess().getRadiusKeyword_1()); }
	Radius
	{ after(grammarAccess.getSphereAccess().getRadiusKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sphere__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Sphere__Group__2__Impl
	rule__Sphere__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Sphere__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSphereAccess().getRadiusAssignment_2()); }
	(rule__Sphere__RadiusAssignment_2)
	{ after(grammarAccess.getSphereAccess().getRadiusAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sphere__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Sphere__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Sphere__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSphereAccess().getENDTerminalRuleCall_3()); }
	RULE_END
	{ after(grammarAccess.getSphereAccess().getENDTerminalRuleCall_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Mesh__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Mesh__Group__0__Impl
	rule__Mesh__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Mesh__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMeshAccess().getBEGINTerminalRuleCall_0()); }
	RULE_BEGIN
	{ after(grammarAccess.getMeshAccess().getBEGINTerminalRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Mesh__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Mesh__Group__1__Impl
	rule__Mesh__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Mesh__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMeshAccess().getFilenameKeyword_1()); }
	Filename
	{ after(grammarAccess.getMeshAccess().getFilenameKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Mesh__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Mesh__Group__2__Impl
	rule__Mesh__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Mesh__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMeshAccess().getFilenameAssignment_2()); }
	(rule__Mesh__FilenameAssignment_2)
	{ after(grammarAccess.getMeshAccess().getFilenameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Mesh__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Mesh__Group__3__Impl
	rule__Mesh__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Mesh__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMeshAccess().getGroup_3()); }
	(rule__Mesh__Group_3__0)?
	{ after(grammarAccess.getMeshAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Mesh__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Mesh__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Mesh__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMeshAccess().getENDTerminalRuleCall_4()); }
	RULE_END
	{ after(grammarAccess.getMeshAccess().getENDTerminalRuleCall_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Mesh__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Mesh__Group_3__0__Impl
	rule__Mesh__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Mesh__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMeshAccess().getScaleKeyword_3_0()); }
	Scale
	{ after(grammarAccess.getMeshAccess().getScaleKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Mesh__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Mesh__Group_3__1__Impl
	rule__Mesh__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Mesh__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMeshAccess().getLeftSquareBracketKeyword_3_1()); }
	LeftSquareBracket
	{ after(grammarAccess.getMeshAccess().getLeftSquareBracketKeyword_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Mesh__Group_3__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Mesh__Group_3__2__Impl
	rule__Mesh__Group_3__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Mesh__Group_3__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMeshAccess().getScaleAssignment_3_2()); }
	(rule__Mesh__ScaleAssignment_3_2)
	{ after(grammarAccess.getMeshAccess().getScaleAssignment_3_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Mesh__Group_3__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Mesh__Group_3__3__Impl
	rule__Mesh__Group_3__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Mesh__Group_3__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMeshAccess().getGroup_3_3()); }
	(rule__Mesh__Group_3_3__0)*
	{ after(grammarAccess.getMeshAccess().getGroup_3_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Mesh__Group_3__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Mesh__Group_3__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Mesh__Group_3__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMeshAccess().getRightSquareBracketKeyword_3_4()); }
	RightSquareBracket
	{ after(grammarAccess.getMeshAccess().getRightSquareBracketKeyword_3_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Mesh__Group_3_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Mesh__Group_3_3__0__Impl
	rule__Mesh__Group_3_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Mesh__Group_3_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMeshAccess().getCommaKeyword_3_3_0()); }
	Comma
	{ after(grammarAccess.getMeshAccess().getCommaKeyword_3_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Mesh__Group_3_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Mesh__Group_3_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Mesh__Group_3_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMeshAccess().getScaleAssignment_3_3_1()); }
	(rule__Mesh__ScaleAssignment_3_3_1)
	{ after(grammarAccess.getMeshAccess().getScaleAssignment_3_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Component__NameAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComponentAccess().getNameEStringParserRuleCall_4_0()); }
		ruleEString
		{ after(grammarAccess.getComponentAccess().getNameEStringParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Component__VersionAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComponentAccess().getVersionEStringParserRuleCall_6_0()); }
		ruleEString
		{ after(grammarAccess.getComponentAccess().getVersionEStringParserRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Component__CategoryAssignment_7_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComponentAccess().getCategoryCATEGORYTerminalRuleCall_7_1_0()); }
		RULE_CATEGORY
		{ after(grammarAccess.getComponentAccess().getCategoryCATEGORYTerminalRuleCall_7_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Component__GitRepoAssignment_8_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComponentAccess().getGitRepoGitRepoParserRuleCall_8_1_0()); }
		ruleGitRepo
		{ after(grammarAccess.getComponentAccess().getGitRepoGitRepoParserRuleCall_8_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Component__BaseAttachmentAssignment_9_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComponentAccess().getBaseAttachmentBaseAttachmentParserRuleCall_9_0_1_0()); }
		ruleBaseAttachment
		{ after(grammarAccess.getComponentAccess().getBaseAttachmentBaseAttachmentParserRuleCall_9_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Component__BaseAttachmentAssignment_9_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComponentAccess().getBaseAttachmentBaseAttachmentParserRuleCall_9_1_0()); }
		ruleBaseAttachment
		{ after(grammarAccess.getComponentAccess().getBaseAttachmentBaseAttachmentParserRuleCall_9_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Component__FlangeAttachmentAssignment_10_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComponentAccess().getFlangeAttachmentFlangeAttachmentParserRuleCall_10_0_1_0()); }
		ruleFlangeAttachment
		{ after(grammarAccess.getComponentAccess().getFlangeAttachmentFlangeAttachmentParserRuleCall_10_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Component__FlangeAttachmentAssignment_10_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComponentAccess().getFlangeAttachmentFlangeAttachmentParserRuleCall_10_1_0()); }
		ruleFlangeAttachment
		{ after(grammarAccess.getComponentAccess().getFlangeAttachmentFlangeAttachmentParserRuleCall_10_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Component__ComponentAssignment_11_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComponentAccess().getComponentConfiguredComponentParserRuleCall_11_0_1_0()); }
		ruleConfiguredComponent
		{ after(grammarAccess.getComponentAccess().getComponentConfiguredComponentParserRuleCall_11_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Component__ComponentAssignment_11_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComponentAccess().getComponentConfiguredComponentParserRuleCall_11_1_0()); }
		ruleConfiguredComponent
		{ after(grammarAccess.getComponentAccess().getComponentConfiguredComponentParserRuleCall_11_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Component__ConnectionAssignment_12_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComponentAccess().getConnectionConnectionParserRuleCall_12_0_1_0()); }
		ruleConnection
		{ after(grammarAccess.getComponentAccess().getConnectionConnectionParserRuleCall_12_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Component__ConnectionAssignment_12_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComponentAccess().getConnectionConnectionParserRuleCall_12_1_0()); }
		ruleConnection
		{ after(grammarAccess.getComponentAccess().getConnectionConnectionParserRuleCall_12_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Component__GroupAssignment_13_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComponentAccess().getGroupGroupParserRuleCall_13_0_1_0()); }
		ruleGroup
		{ after(grammarAccess.getComponentAccess().getGroupGroupParserRuleCall_13_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Component__GroupAssignment_13_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComponentAccess().getGroupGroupParserRuleCall_13_1_0()); }
		ruleGroup
		{ after(grammarAccess.getComponentAccess().getGroupGroupParserRuleCall_13_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Component__LinkAssignment_14_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComponentAccess().getLinkLinkParserRuleCall_14_0_1_0()); }
		ruleLink
		{ after(grammarAccess.getComponentAccess().getLinkLinkParserRuleCall_14_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Component__LinkAssignment_14_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComponentAccess().getLinkLinkParserRuleCall_14_1_0()); }
		ruleLink
		{ after(grammarAccess.getComponentAccess().getLinkLinkParserRuleCall_14_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Component__JointAssignment_15_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComponentAccess().getJointJointParserRuleCall_15_0_1_0()); }
		ruleJoint
		{ after(grammarAccess.getComponentAccess().getJointJointParserRuleCall_15_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Component__JointAssignment_15_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComponentAccess().getJointJointParserRuleCall_15_1_0()); }
		ruleJoint
		{ after(grammarAccess.getComponentAccess().getJointJointParserRuleCall_15_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConfiguredComponent__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConfiguredComponentAccess().getNameEStringParserRuleCall_2_0()); }
		ruleEString
		{ after(grammarAccess.getConfiguredComponentAccess().getNameEStringParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConfiguredComponent__TypeAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConfiguredComponentAccess().getTypeComponentCrossReference_5_0()); }
		(
			{ before(grammarAccess.getConfiguredComponentAccess().getTypeComponentEStringParserRuleCall_5_0_1()); }
			ruleEString
			{ after(grammarAccess.getConfiguredComponentAccess().getTypeComponentEStringParserRuleCall_5_0_1()); }
		)
		{ after(grammarAccess.getConfiguredComponentAccess().getTypeComponentCrossReference_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConfiguredComponent__PrefixAssignment_6_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConfiguredComponentAccess().getPrefixEStringParserRuleCall_6_1_0()); }
		ruleEString
		{ after(grammarAccess.getConfiguredComponentAccess().getPrefixEStringParserRuleCall_6_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__GitRepo__DistroAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGitRepoAccess().getDistroEStringParserRuleCall_2_0()); }
		ruleEString
		{ after(grammarAccess.getGitRepoAccess().getDistroEStringParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__GitRepo__RepoAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGitRepoAccess().getRepoEStringParserRuleCall_4_0()); }
		ruleEString
		{ after(grammarAccess.getGitRepoAccess().getRepoEStringParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__GitRepo__BranchAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGitRepoAccess().getBranchEStringParserRuleCall_6_0()); }
		ruleEString
		{ after(grammarAccess.getGitRepoAccess().getBranchEStringParserRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__GitRepo__PackageAssignment_8
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGitRepoAccess().getPackageEStringParserRuleCall_8_0()); }
		ruleEString
		{ after(grammarAccess.getGitRepoAccess().getPackageEStringParserRuleCall_8_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__GitRepo__VersionAssignment_10
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGitRepoAccess().getVersionEStringParserRuleCall_10_0()); }
		ruleEString
		{ after(grammarAccess.getGitRepoAccess().getVersionEStringParserRuleCall_10_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Group__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGroupAccess().getNameEStringParserRuleCall_2_0()); }
		ruleEString
		{ after(grammarAccess.getGroupAccess().getNameEStringParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Group__BaseLinkAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGroupAccess().getBaseLinkLinkCrossReference_5_0()); }
		(
			{ before(grammarAccess.getGroupAccess().getBaseLinkLinkEStringParserRuleCall_5_0_1()); }
			ruleEString
			{ after(grammarAccess.getGroupAccess().getBaseLinkLinkEStringParserRuleCall_5_0_1()); }
		)
		{ after(grammarAccess.getGroupAccess().getBaseLinkLinkCrossReference_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Group__EndLinkAssignment_7
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGroupAccess().getEndLinkLinkCrossReference_7_0()); }
		(
			{ before(grammarAccess.getGroupAccess().getEndLinkLinkEStringParserRuleCall_7_0_1()); }
			ruleEString
			{ after(grammarAccess.getGroupAccess().getEndLinkLinkEStringParserRuleCall_7_0_1()); }
		)
		{ after(grammarAccess.getGroupAccess().getEndLinkLinkCrossReference_7_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Group__Ros2_controlAssignment_8_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGroupAccess().getRos2_controlEStringParserRuleCall_8_1_0()); }
		ruleEString
		{ after(grammarAccess.getGroupAccess().getRos2_controlEStringParserRuleCall_8_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BaseAttachment__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBaseAttachmentAccess().getNameEStringParserRuleCall_2_0()); }
		ruleEString
		{ after(grammarAccess.getBaseAttachmentAccess().getNameEStringParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BaseAttachment__OriginAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBaseAttachmentAccess().getOriginPoseParserRuleCall_5_0()); }
		rulePose
		{ after(grammarAccess.getBaseAttachmentAccess().getOriginPoseParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BaseAttachment__ParentAssignment_7
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBaseAttachmentAccess().getParentLinkCrossReference_7_0()); }
		(
			{ before(grammarAccess.getBaseAttachmentAccess().getParentLinkEStringParserRuleCall_7_0_1()); }
			ruleEString
			{ after(grammarAccess.getBaseAttachmentAccess().getParentLinkEStringParserRuleCall_7_0_1()); }
		)
		{ after(grammarAccess.getBaseAttachmentAccess().getParentLinkCrossReference_7_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FlangeAttachment__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFlangeAttachmentAccess().getNameEStringParserRuleCall_2_0()); }
		ruleEString
		{ after(grammarAccess.getFlangeAttachmentAccess().getNameEStringParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FlangeAttachment__OriginAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFlangeAttachmentAccess().getOriginPoseParserRuleCall_5_0()); }
		rulePose
		{ after(grammarAccess.getFlangeAttachmentAccess().getOriginPoseParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FlangeAttachment__ParentAssignment_7
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFlangeAttachmentAccess().getParentLinkCrossReference_7_0()); }
		(
			{ before(grammarAccess.getFlangeAttachmentAccess().getParentLinkEStringParserRuleCall_7_0_1()); }
			ruleEString
			{ after(grammarAccess.getFlangeAttachmentAccess().getParentLinkEStringParserRuleCall_7_0_1()); }
		)
		{ after(grammarAccess.getFlangeAttachmentAccess().getParentLinkCrossReference_7_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Connection__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConnectionAccess().getNameEStringParserRuleCall_2_0()); }
		ruleEString
		{ after(grammarAccess.getConnectionAccess().getNameEStringParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Connection__BaseAttachmentAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConnectionAccess().getBaseAttachmentBaseAttachmentCrossReference_5_0()); }
		(
			{ before(grammarAccess.getConnectionAccess().getBaseAttachmentBaseAttachmentEStringParserRuleCall_5_0_1()); }
			ruleEString
			{ after(grammarAccess.getConnectionAccess().getBaseAttachmentBaseAttachmentEStringParserRuleCall_5_0_1()); }
		)
		{ after(grammarAccess.getConnectionAccess().getBaseAttachmentBaseAttachmentCrossReference_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Connection__FlangeAttachmentAssignment_7
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConnectionAccess().getFlangeAttachmentFlangeAttachmentCrossReference_7_0()); }
		(
			{ before(grammarAccess.getConnectionAccess().getFlangeAttachmentFlangeAttachmentEStringParserRuleCall_7_0_1()); }
			ruleEString
			{ after(grammarAccess.getConnectionAccess().getFlangeAttachmentFlangeAttachmentEStringParserRuleCall_7_0_1()); }
		)
		{ after(grammarAccess.getConnectionAccess().getFlangeAttachmentFlangeAttachmentCrossReference_7_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Joint__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getJointAccess().getNameEStringParserRuleCall_2_0()); }
		ruleEString
		{ after(grammarAccess.getJointAccess().getNameEStringParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Joint__TypeAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getJointAccess().getTypeJOINTTYPETerminalRuleCall_4_1_0()); }
		RULE_JOINTTYPE
		{ after(grammarAccess.getJointAccess().getTypeJOINTTYPETerminalRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Joint__ParentAssignment_5_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getJointAccess().getParentParentParserRuleCall_5_1_0()); }
		ruleParent
		{ after(grammarAccess.getJointAccess().getParentParentParserRuleCall_5_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Joint__ChildAssignment_6_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getJointAccess().getChildChildParserRuleCall_6_1_0()); }
		ruleChild
		{ after(grammarAccess.getJointAccess().getChildChildParserRuleCall_6_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Joint__OriginAssignment_7_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getJointAccess().getOriginPoseParserRuleCall_7_1_0()); }
		rulePose
		{ after(grammarAccess.getJointAccess().getOriginPoseParserRuleCall_7_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Joint__AxisAssignment_8_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getJointAccess().getAxisAxisParserRuleCall_8_1_0()); }
		ruleAxis
		{ after(grammarAccess.getJointAccess().getAxisAxisParserRuleCall_8_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Joint__LimitAssignment_9_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getJointAccess().getLimitLimitParserRuleCall_9_1_0()); }
		ruleLimit
		{ after(grammarAccess.getJointAccess().getLimitLimitParserRuleCall_9_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parent__LinkAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParentAccess().getLinkEStringParserRuleCall_2_0()); }
		ruleEString
		{ after(grammarAccess.getParentAccess().getLinkEStringParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Child__LinkAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getChildAccess().getLinkEStringParserRuleCall_2_0()); }
		ruleEString
		{ after(grammarAccess.getChildAccess().getLinkEStringParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Link__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLinkAccess().getNameEStringParserRuleCall_2_0()); }
		ruleEString
		{ after(grammarAccess.getLinkAccess().getNameEStringParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Link__InertialAssignment_3_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLinkAccess().getInertialInertialParserRuleCall_3_1_1_0()); }
		ruleInertial
		{ after(grammarAccess.getLinkAccess().getInertialInertialParserRuleCall_3_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Link__VisualAssignment_3_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLinkAccess().getVisualVisualParserRuleCall_3_2_1_0()); }
		ruleVisual
		{ after(grammarAccess.getLinkAccess().getVisualVisualParserRuleCall_3_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Link__CollisionAssignment_3_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLinkAccess().getCollisionCollisionParserRuleCall_3_3_1_0()); }
		ruleCollision
		{ after(grammarAccess.getLinkAccess().getCollisionCollisionParserRuleCall_3_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Pose__RpyAssignment_2_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPoseAccess().getRpyDOUBLETerminalRuleCall_2_2_0()); }
		RULE_DOUBLE
		{ after(grammarAccess.getPoseAccess().getRpyDOUBLETerminalRuleCall_2_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Pose__RpyAssignment_2_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPoseAccess().getRpyDOUBLETerminalRuleCall_2_3_1_0()); }
		RULE_DOUBLE
		{ after(grammarAccess.getPoseAccess().getRpyDOUBLETerminalRuleCall_2_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Pose__XyzAssignment_3_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPoseAccess().getXyzDOUBLETerminalRuleCall_3_2_0()); }
		RULE_DOUBLE
		{ after(grammarAccess.getPoseAccess().getXyzDOUBLETerminalRuleCall_3_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Pose__XyzAssignment_3_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPoseAccess().getXyzDOUBLETerminalRuleCall_3_3_1_0()); }
		RULE_DOUBLE
		{ after(grammarAccess.getPoseAccess().getXyzDOUBLETerminalRuleCall_3_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Axis__XyzAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAxisAccess().getXyzEStringParserRuleCall_2_1_0()); }
		ruleEString
		{ after(grammarAccess.getAxisAccess().getXyzEStringParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Limit__EffortAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLimitAccess().getEffortDOUBLETerminalRuleCall_2_1_0()); }
		RULE_DOUBLE
		{ after(grammarAccess.getLimitAccess().getEffortDOUBLETerminalRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Limit__LowerAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLimitAccess().getLowerDOUBLETerminalRuleCall_3_1_0()); }
		RULE_DOUBLE
		{ after(grammarAccess.getLimitAccess().getLowerDOUBLETerminalRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Limit__UpperAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLimitAccess().getUpperDOUBLETerminalRuleCall_4_1_0()); }
		RULE_DOUBLE
		{ after(grammarAccess.getLimitAccess().getUpperDOUBLETerminalRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Limit__VelocityAssignment_5_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLimitAccess().getVelocityDOUBLETerminalRuleCall_5_1_0()); }
		RULE_DOUBLE
		{ after(grammarAccess.getLimitAccess().getVelocityDOUBLETerminalRuleCall_5_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Inertial__OriginAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInertialAccess().getOriginPoseParserRuleCall_2_1_0()); }
		rulePose
		{ after(grammarAccess.getInertialAccess().getOriginPoseParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Inertial__MassAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInertialAccess().getMassMassParserRuleCall_3_1_0()); }
		ruleMass
		{ after(grammarAccess.getInertialAccess().getMassMassParserRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Inertial__InertiaAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInertialAccess().getInertiaInertiaParserRuleCall_4_1_0()); }
		ruleInertia
		{ after(grammarAccess.getInertialAccess().getInertiaInertiaParserRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Visual__OriginAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVisualAccess().getOriginPoseParserRuleCall_1_1_0()); }
		rulePose
		{ after(grammarAccess.getVisualAccess().getOriginPoseParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Visual__GeometryAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVisualAccess().getGeometryGeometryParserRuleCall_3_0()); }
		ruleGeometry
		{ after(grammarAccess.getVisualAccess().getGeometryGeometryParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Collision__OriginAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCollisionAccess().getOriginPoseParserRuleCall_1_1_0()); }
		rulePose
		{ after(grammarAccess.getCollisionAccess().getOriginPoseParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Collision__GeometryAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCollisionAccess().getGeometryGeometryParserRuleCall_3_0()); }
		ruleGeometry
		{ after(grammarAccess.getCollisionAccess().getGeometryGeometryParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Mass__ValueAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMassAccess().getValueDOUBLETerminalRuleCall_3_0()); }
		RULE_DOUBLE
		{ after(grammarAccess.getMassAccess().getValueDOUBLETerminalRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Inertia__IxxAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInertiaAccess().getIxxDOUBLETerminalRuleCall_2_1_0()); }
		RULE_DOUBLE
		{ after(grammarAccess.getInertiaAccess().getIxxDOUBLETerminalRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Inertia__IxyAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInertiaAccess().getIxyDOUBLETerminalRuleCall_3_1_0()); }
		RULE_DOUBLE
		{ after(grammarAccess.getInertiaAccess().getIxyDOUBLETerminalRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Inertia__IxzAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInertiaAccess().getIxzDOUBLETerminalRuleCall_4_1_0()); }
		RULE_DOUBLE
		{ after(grammarAccess.getInertiaAccess().getIxzDOUBLETerminalRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Inertia__IyyAssignment_5_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInertiaAccess().getIyyDOUBLETerminalRuleCall_5_1_0()); }
		RULE_DOUBLE
		{ after(grammarAccess.getInertiaAccess().getIyyDOUBLETerminalRuleCall_5_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Inertia__IyzAssignment_6_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInertiaAccess().getIyzDOUBLETerminalRuleCall_6_1_0()); }
		RULE_DOUBLE
		{ after(grammarAccess.getInertiaAccess().getIyzDOUBLETerminalRuleCall_6_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Inertia__IzzAssignment_7_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInertiaAccess().getIzzDOUBLETerminalRuleCall_7_1_0()); }
		RULE_DOUBLE
		{ after(grammarAccess.getInertiaAccess().getIzzDOUBLETerminalRuleCall_7_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Geometry__BoxAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGeometryAccess().getBoxBoxParserRuleCall_2_1_0()); }
		ruleBox
		{ after(grammarAccess.getGeometryAccess().getBoxBoxParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Geometry__CylinderAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGeometryAccess().getCylinderCylinderParserRuleCall_3_1_0()); }
		ruleCylinder
		{ after(grammarAccess.getGeometryAccess().getCylinderCylinderParserRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Geometry__SphereAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGeometryAccess().getSphereSphereParserRuleCall_4_1_0()); }
		ruleSphere
		{ after(grammarAccess.getGeometryAccess().getSphereSphereParserRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Geometry__MeshAssignment_5_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGeometryAccess().getMeshMeshParserRuleCall_5_1_0()); }
		ruleMesh
		{ after(grammarAccess.getGeometryAccess().getMeshMeshParserRuleCall_5_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Box__SizeAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBoxAccess().getSizeEStringParserRuleCall_3_0()); }
		ruleEString
		{ after(grammarAccess.getBoxAccess().getSizeEStringParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Cylinder__LengthAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCylinderAccess().getLengthEStringParserRuleCall_2_0()); }
		ruleEString
		{ after(grammarAccess.getCylinderAccess().getLengthEStringParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Cylinder__RadiusAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCylinderAccess().getRadiusEStringParserRuleCall_4_0()); }
		ruleEString
		{ after(grammarAccess.getCylinderAccess().getRadiusEStringParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sphere__RadiusAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSphereAccess().getRadiusDouble0ParserRuleCall_2_0()); }
		ruleDouble0
		{ after(grammarAccess.getSphereAccess().getRadiusDouble0ParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Mesh__FilenameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMeshAccess().getFilenameEStringParserRuleCall_2_0()); }
		ruleEString
		{ after(grammarAccess.getMeshAccess().getFilenameEStringParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Mesh__ScaleAssignment_3_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMeshAccess().getScaleDOUBLETerminalRuleCall_3_2_0()); }
		RULE_DOUBLE
		{ after(grammarAccess.getMeshAccess().getScaleDOUBLETerminalRuleCall_3_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Mesh__ScaleAssignment_3_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMeshAccess().getScaleDOUBLETerminalRuleCall_3_3_1_0()); }
		RULE_DOUBLE
		{ after(grammarAccess.getMeshAccess().getScaleDOUBLETerminalRuleCall_3_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}
