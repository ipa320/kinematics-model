/*
 * generated by Xtext 2.26.0
 */
package de.fraunhofer.ipa.kinematics.ide.contentassist.antlr;

import com.google.common.collect.ImmutableMap;
import com.google.inject.Inject;
import com.google.inject.Singleton;
import de.fraunhofer.ipa.kinematics.ide.contentassist.antlr.internal.InternalKinematicsParser;
import de.fraunhofer.ipa.kinematics.services.KinematicsGrammarAccess;
import java.util.Map;
import org.antlr.runtime.CharStream;
import org.antlr.runtime.TokenSource;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ide.editor.contentassist.antlr.AbstractContentAssistParser;

public class KinematicsParser extends AbstractContentAssistParser {

	@Singleton
	public static final class NameMappings {
		
		private final Map<AbstractElement, String> mappings;
		
		@Inject
		public NameMappings(KinematicsGrammarAccess grammarAccess) {
			ImmutableMap.Builder<AbstractElement, String> builder = ImmutableMap.builder();
			init(builder, grammarAccess);
			this.mappings = builder.build();
		}
		
		public String getRuleName(AbstractElement element) {
			return mappings.get(element);
		}
		
		private static void init(ImmutableMap.Builder<AbstractElement, String> builder, KinematicsGrammarAccess grammarAccess) {
			builder.put(grammarAccess.getParameterTypeAccess().getAlternatives(), "rule__ParameterType__Alternatives");
			builder.put(grammarAccess.getRobotAccess().getGroup(), "rule__Robot__Group__0");
			builder.put(grammarAccess.getRobotAccess().getGroup_5(), "rule__Robot__Group_5__0");
			builder.put(grammarAccess.getMacroAccess().getGroup(), "rule__Macro__Group__0");
			builder.put(grammarAccess.getMacroAccess().getGroup_4(), "rule__Macro__Group_4__0");
			builder.put(grammarAccess.getMacroAccess().getGroup_5(), "rule__Macro__Group_5__0");
			builder.put(grammarAccess.getMacroAccess().getGroup_6(), "rule__Macro__Group_6__0");
			builder.put(grammarAccess.getParameterAccess().getGroup(), "rule__Parameter__Group__0");
			builder.put(grammarAccess.getParameterAccess().getGroup_7(), "rule__Parameter__Group_7__0");
			builder.put(grammarAccess.getParameterAccess().getGroup_8(), "rule__Parameter__Group_8__0");
			builder.put(grammarAccess.getJointAccess().getGroup(), "rule__Joint__Group__0");
			builder.put(grammarAccess.getJointAccess().getGroup_12(), "rule__Joint__Group_12__0");
			builder.put(grammarAccess.getJointAccess().getGroup_13(), "rule__Joint__Group_13__0");
			builder.put(grammarAccess.getLinkAccess().getGroup(), "rule__Link__Group__0");
			builder.put(grammarAccess.getLinkAccess().getGroup_3(), "rule__Link__Group_3__0");
			builder.put(grammarAccess.getLinkAccess().getGroup_3_2(), "rule__Link__Group_3_2__0");
			builder.put(grammarAccess.getLinkAccess().getGroup_3_3(), "rule__Link__Group_3_3__0");
			builder.put(grammarAccess.getLinkAccess().getGroup_3_4(), "rule__Link__Group_3_4__0");
			builder.put(grammarAccess.getPoseAccess().getGroup(), "rule__Pose__Group__0");
			builder.put(grammarAccess.getPoseAccess().getGroup_2(), "rule__Pose__Group_2__0");
			builder.put(grammarAccess.getPoseAccess().getGroup_3(), "rule__Pose__Group_3__0");
			builder.put(grammarAccess.getVector3Access().getGroup(), "rule__Vector3__Group__0");
			builder.put(grammarAccess.getVector3Access().getGroup_2(), "rule__Vector3__Group_2__0");
			builder.put(grammarAccess.getLimitAccess().getGroup(), "rule__Limit__Group__0");
			builder.put(grammarAccess.getLimitAccess().getGroup_2(), "rule__Limit__Group_2__0");
			builder.put(grammarAccess.getLimitAccess().getGroup_3(), "rule__Limit__Group_3__0");
			builder.put(grammarAccess.getLimitAccess().getGroup_4(), "rule__Limit__Group_4__0");
			builder.put(grammarAccess.getLimitAccess().getGroup_5(), "rule__Limit__Group_5__0");
			builder.put(grammarAccess.getInertialAccess().getGroup(), "rule__Inertial__Group__0");
			builder.put(grammarAccess.getInertialAccess().getGroup_2(), "rule__Inertial__Group_2__0");
			builder.put(grammarAccess.getInertialAccess().getGroup_3(), "rule__Inertial__Group_3__0");
			builder.put(grammarAccess.getInertialAccess().getGroup_4(), "rule__Inertial__Group_4__0");
			builder.put(grammarAccess.getVisualAccess().getGroup(), "rule__Visual__Group__0");
			builder.put(grammarAccess.getVisualAccess().getGroup_1(), "rule__Visual__Group_1__0");
			builder.put(grammarAccess.getCollisionAccess().getGroup(), "rule__Collision__Group__0");
			builder.put(grammarAccess.getCollisionAccess().getGroup_1(), "rule__Collision__Group_1__0");
			builder.put(grammarAccess.getMassAccess().getGroup(), "rule__Mass__Group__0");
			builder.put(grammarAccess.getInertiaAccess().getGroup(), "rule__Inertia__Group__0");
			builder.put(grammarAccess.getInertiaAccess().getGroup_2(), "rule__Inertia__Group_2__0");
			builder.put(grammarAccess.getInertiaAccess().getGroup_3(), "rule__Inertia__Group_3__0");
			builder.put(grammarAccess.getInertiaAccess().getGroup_4(), "rule__Inertia__Group_4__0");
			builder.put(grammarAccess.getInertiaAccess().getGroup_5(), "rule__Inertia__Group_5__0");
			builder.put(grammarAccess.getInertiaAccess().getGroup_6(), "rule__Inertia__Group_6__0");
			builder.put(grammarAccess.getInertiaAccess().getGroup_7(), "rule__Inertia__Group_7__0");
			builder.put(grammarAccess.getGeometryAccess().getGroup(), "rule__Geometry__Group__0");
			builder.put(grammarAccess.getGeometryAccess().getGroup_2(), "rule__Geometry__Group_2__0");
			builder.put(grammarAccess.getGeometryAccess().getGroup_3(), "rule__Geometry__Group_3__0");
			builder.put(grammarAccess.getGeometryAccess().getGroup_4(), "rule__Geometry__Group_4__0");
			builder.put(grammarAccess.getGeometryAccess().getGroup_5(), "rule__Geometry__Group_5__0");
			builder.put(grammarAccess.getBoxAccess().getGroup(), "rule__Box__Group__0");
			builder.put(grammarAccess.getCylinderAccess().getGroup(), "rule__Cylinder__Group__0");
			builder.put(grammarAccess.getSphereAccess().getGroup(), "rule__Sphere__Group__0");
			builder.put(grammarAccess.getMeshAccess().getGroup(), "rule__Mesh__Group__0");
			builder.put(grammarAccess.getMeshAccess().getGroup_3(), "rule__Mesh__Group_3__0");
			builder.put(grammarAccess.getRobotAccess().getNameAssignment_4(), "rule__Robot__NameAssignment_4");
			builder.put(grammarAccess.getRobotAccess().getMacrosAssignment_5_1(), "rule__Robot__MacrosAssignment_5_1");
			builder.put(grammarAccess.getMacroAccess().getNameAssignment_2(), "rule__Macro__NameAssignment_2");
			builder.put(grammarAccess.getMacroAccess().getParametersAssignment_4_1(), "rule__Macro__ParametersAssignment_4_1");
			builder.put(grammarAccess.getMacroAccess().getLinkAssignment_5_1(), "rule__Macro__LinkAssignment_5_1");
			builder.put(grammarAccess.getMacroAccess().getJointAssignment_6_1(), "rule__Macro__JointAssignment_6_1");
			builder.put(grammarAccess.getParameterAccess().getNameAssignment_3(), "rule__Parameter__NameAssignment_3");
			builder.put(grammarAccess.getParameterAccess().getTypeAssignment_6(), "rule__Parameter__TypeAssignment_6");
			builder.put(grammarAccess.getParameterAccess().getDefaultAssignment_7_1(), "rule__Parameter__DefaultAssignment_7_1");
			builder.put(grammarAccess.getParameterAccess().getValueAssignment_8_1(), "rule__Parameter__ValueAssignment_8_1");
			builder.put(grammarAccess.getJointAccess().getNameAssignment_2(), "rule__Joint__NameAssignment_2");
			builder.put(grammarAccess.getJointAccess().getTypeAssignment_5(), "rule__Joint__TypeAssignment_5");
			builder.put(grammarAccess.getJointAccess().getParentAssignment_7(), "rule__Joint__ParentAssignment_7");
			builder.put(grammarAccess.getJointAccess().getChildAssignment_9(), "rule__Joint__ChildAssignment_9");
			builder.put(grammarAccess.getJointAccess().getOriginAssignment_11(), "rule__Joint__OriginAssignment_11");
			builder.put(grammarAccess.getJointAccess().getAxisAssignment_12_1(), "rule__Joint__AxisAssignment_12_1");
			builder.put(grammarAccess.getJointAccess().getLimitAssignment_13_1(), "rule__Joint__LimitAssignment_13_1");
			builder.put(grammarAccess.getLinkAccess().getNameAssignment_2(), "rule__Link__NameAssignment_2");
			builder.put(grammarAccess.getLinkAccess().getInertialAssignment_3_2_1(), "rule__Link__InertialAssignment_3_2_1");
			builder.put(grammarAccess.getLinkAccess().getVisualAssignment_3_3_1(), "rule__Link__VisualAssignment_3_3_1");
			builder.put(grammarAccess.getLinkAccess().getCollisionAssignment_3_4_1(), "rule__Link__CollisionAssignment_3_4_1");
			builder.put(grammarAccess.getPoseAccess().getRpyAssignment_2_1(), "rule__Pose__RpyAssignment_2_1");
			builder.put(grammarAccess.getPoseAccess().getXyzAssignment_3_1(), "rule__Pose__XyzAssignment_3_1");
			builder.put(grammarAccess.getVector3Access().getXyzAssignment_2_1(), "rule__Vector3__XyzAssignment_2_1");
			builder.put(grammarAccess.getLimitAccess().getEffortAssignment_2_1(), "rule__Limit__EffortAssignment_2_1");
			builder.put(grammarAccess.getLimitAccess().getLowerAssignment_3_1(), "rule__Limit__LowerAssignment_3_1");
			builder.put(grammarAccess.getLimitAccess().getUpperAssignment_4_1(), "rule__Limit__UpperAssignment_4_1");
			builder.put(grammarAccess.getLimitAccess().getVelocityAssignment_5_1(), "rule__Limit__VelocityAssignment_5_1");
			builder.put(grammarAccess.getInertialAccess().getOriginAssignment_2_1(), "rule__Inertial__OriginAssignment_2_1");
			builder.put(grammarAccess.getInertialAccess().getMassAssignment_3_1(), "rule__Inertial__MassAssignment_3_1");
			builder.put(grammarAccess.getInertialAccess().getInertiaAssignment_4_1(), "rule__Inertial__InertiaAssignment_4_1");
			builder.put(grammarAccess.getVisualAccess().getOriginAssignment_1_1(), "rule__Visual__OriginAssignment_1_1");
			builder.put(grammarAccess.getVisualAccess().getGeometryAssignment_3(), "rule__Visual__GeometryAssignment_3");
			builder.put(grammarAccess.getCollisionAccess().getOriginAssignment_1_1(), "rule__Collision__OriginAssignment_1_1");
			builder.put(grammarAccess.getCollisionAccess().getGeometryAssignment_3(), "rule__Collision__GeometryAssignment_3");
			builder.put(grammarAccess.getMassAccess().getValueAssignment_1(), "rule__Mass__ValueAssignment_1");
			builder.put(grammarAccess.getInertiaAccess().getIxxAssignment_2_1(), "rule__Inertia__IxxAssignment_2_1");
			builder.put(grammarAccess.getInertiaAccess().getIxyAssignment_3_1(), "rule__Inertia__IxyAssignment_3_1");
			builder.put(grammarAccess.getInertiaAccess().getIxzAssignment_4_1(), "rule__Inertia__IxzAssignment_4_1");
			builder.put(grammarAccess.getInertiaAccess().getIyyAssignment_5_1(), "rule__Inertia__IyyAssignment_5_1");
			builder.put(grammarAccess.getInertiaAccess().getIyzAssignment_6_1(), "rule__Inertia__IyzAssignment_6_1");
			builder.put(grammarAccess.getInertiaAccess().getIzzAssignment_7_1(), "rule__Inertia__IzzAssignment_7_1");
			builder.put(grammarAccess.getGeometryAccess().getBoxAssignment_2_1(), "rule__Geometry__BoxAssignment_2_1");
			builder.put(grammarAccess.getGeometryAccess().getCylinderAssignment_3_1(), "rule__Geometry__CylinderAssignment_3_1");
			builder.put(grammarAccess.getGeometryAccess().getSphereAssignment_4_1(), "rule__Geometry__SphereAssignment_4_1");
			builder.put(grammarAccess.getGeometryAccess().getMeshAssignment_5_1(), "rule__Geometry__MeshAssignment_5_1");
			builder.put(grammarAccess.getBoxAccess().getSizeAssignment_3(), "rule__Box__SizeAssignment_3");
			builder.put(grammarAccess.getCylinderAccess().getLengthAssignment_2(), "rule__Cylinder__LengthAssignment_2");
			builder.put(grammarAccess.getCylinderAccess().getRadiusAssignment_4(), "rule__Cylinder__RadiusAssignment_4");
			builder.put(grammarAccess.getSphereAccess().getRadiusAssignment_2(), "rule__Sphere__RadiusAssignment_2");
			builder.put(grammarAccess.getMeshAccess().getFilenameAssignment_2(), "rule__Mesh__FilenameAssignment_2");
			builder.put(grammarAccess.getMeshAccess().getScaleAssignment_3_1(), "rule__Mesh__ScaleAssignment_3_1");
		}
	}
	
	@Inject
	private NameMappings nameMappings;

	@Inject
	private KinematicsGrammarAccess grammarAccess;

	@Override
	protected InternalKinematicsParser createParser() {
		InternalKinematicsParser result = new InternalKinematicsParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}

	@Override
	protected TokenSource createLexer(CharStream stream) {
		return new KinematicsTokenSource(super.createLexer(stream));
	}
	
	@Override
	protected String getRuleName(AbstractElement element) {
		return nameMappings.getRuleName(element);
	}

	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}

	public KinematicsGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}

	public void setGrammarAccess(KinematicsGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
	
	public NameMappings getNameMappings() {
		return nameMappings;
	}
	
	public void setNameMappings(NameMappings nameMappings) {
		this.nameMappings = nameMappings;
	}
}
