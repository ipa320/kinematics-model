/*
 * generated by Xtext 2.25.0
 */
package de.fraunhofer.ipa.kinematics.xacro.services;

import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.List;
import org.eclipse.xtext.Action;
import org.eclipse.xtext.Alternatives;
import org.eclipse.xtext.Assignment;
import org.eclipse.xtext.CrossReference;
import org.eclipse.xtext.Grammar;
import org.eclipse.xtext.GrammarUtil;
import org.eclipse.xtext.Group;
import org.eclipse.xtext.Keyword;
import org.eclipse.xtext.ParserRule;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.TerminalRule;
import org.eclipse.xtext.common.services.TerminalsGrammarAccess;
import org.eclipse.xtext.service.AbstractElementFinder;
import org.eclipse.xtext.service.GrammarProvider;

@Singleton
public class XacroGrammarAccess extends AbstractElementFinder.AbstractGrammarElementFinder {
	
	public class RobotElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.fraunhofer.ipa.kinematics.xacro.Xacro.Robot");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cRobotAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cRobotKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cNameKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cNameAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cNameEStringParserRuleCall_4_0 = (RuleCall)cNameAssignment_4.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cVersionKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cVersionAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cVersionEStringParserRuleCall_5_1_0 = (RuleCall)cVersionAssignment_5_1.eContents().get(0);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cMacroKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_6_1 = (Keyword)cGroup_6.eContents().get(1);
		private final Assignment cMacroAssignment_6_2 = (Assignment)cGroup_6.eContents().get(2);
		private final RuleCall cMacroMacroParserRuleCall_6_2_0 = (RuleCall)cMacroAssignment_6_2.eContents().get(0);
		private final Group cGroup_6_3 = (Group)cGroup_6.eContents().get(3);
		private final Keyword cCommaKeyword_6_3_0 = (Keyword)cGroup_6_3.eContents().get(0);
		private final Assignment cMacroAssignment_6_3_1 = (Assignment)cGroup_6_3.eContents().get(1);
		private final RuleCall cMacroMacroParserRuleCall_6_3_1_0 = (RuleCall)cMacroAssignment_6_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_6_4 = (Keyword)cGroup_6.eContents().get(4);
		private final Group cGroup_7 = (Group)cGroup.eContents().get(7);
		private final Keyword cBodyKeyword_7_0 = (Keyword)cGroup_7.eContents().get(0);
		private final Assignment cBodyAssignment_7_1 = (Assignment)cGroup_7.eContents().get(1);
		private final RuleCall cBodyBodyParserRuleCall_7_1_0 = (RuleCall)cBodyAssignment_7_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_8 = (Keyword)cGroup.eContents().get(8);
		
		//Robot returns Robot:
		//    {Robot}
		//    'Robot'
		//    '{'
		//        'name' name=EString
		//        ('version' version=EString)?
		//        ('macro' '{' macro+=Macro ( "," macro+=Macro)* '}' )?
		//        ('body' body=Body)?
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//{Robot}
		//'Robot'
		//'{'
		//    'name' name=EString
		//    ('version' version=EString)?
		//    ('macro' '{' macro+=Macro ( "," macro+=Macro)* '}' )?
		//    ('body' body=Body)?
		//'}'
		public Group getGroup() { return cGroup; }
		
		//{Robot}
		public Action getRobotAction_0() { return cRobotAction_0; }
		
		//'Robot'
		public Keyword getRobotKeyword_1() { return cRobotKeyword_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//'name'
		public Keyword getNameKeyword_3() { return cNameKeyword_3; }
		
		//name=EString
		public Assignment getNameAssignment_4() { return cNameAssignment_4; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_4_0() { return cNameEStringParserRuleCall_4_0; }
		
		//('version' version=EString)?
		public Group getGroup_5() { return cGroup_5; }
		
		//'version'
		public Keyword getVersionKeyword_5_0() { return cVersionKeyword_5_0; }
		
		//version=EString
		public Assignment getVersionAssignment_5_1() { return cVersionAssignment_5_1; }
		
		//EString
		public RuleCall getVersionEStringParserRuleCall_5_1_0() { return cVersionEStringParserRuleCall_5_1_0; }
		
		//('macro' '{' macro+=Macro ( "," macro+=Macro)* '}' )?
		public Group getGroup_6() { return cGroup_6; }
		
		//'macro'
		public Keyword getMacroKeyword_6_0() { return cMacroKeyword_6_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_6_1() { return cLeftCurlyBracketKeyword_6_1; }
		
		//macro+=Macro
		public Assignment getMacroAssignment_6_2() { return cMacroAssignment_6_2; }
		
		//Macro
		public RuleCall getMacroMacroParserRuleCall_6_2_0() { return cMacroMacroParserRuleCall_6_2_0; }
		
		//( "," macro+=Macro)*
		public Group getGroup_6_3() { return cGroup_6_3; }
		
		//","
		public Keyword getCommaKeyword_6_3_0() { return cCommaKeyword_6_3_0; }
		
		//macro+=Macro
		public Assignment getMacroAssignment_6_3_1() { return cMacroAssignment_6_3_1; }
		
		//Macro
		public RuleCall getMacroMacroParserRuleCall_6_3_1_0() { return cMacroMacroParserRuleCall_6_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_6_4() { return cRightCurlyBracketKeyword_6_4; }
		
		//('body' body=Body)?
		public Group getGroup_7() { return cGroup_7; }
		
		//'body'
		public Keyword getBodyKeyword_7_0() { return cBodyKeyword_7_0; }
		
		//body=Body
		public Assignment getBodyAssignment_7_1() { return cBodyAssignment_7_1; }
		
		//Body
		public RuleCall getBodyBodyParserRuleCall_7_1_0() { return cBodyBodyParserRuleCall_7_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_8() { return cRightCurlyBracketKeyword_8; }
	}
	public class EStringElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.fraunhofer.ipa.kinematics.xacro.Xacro.EString");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cSTRINGTerminalRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cIDTerminalRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//EString returns ecore::EString:
		//    STRING | ID;
		@Override public ParserRule getRule() { return rule; }
		
		//STRING | ID
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//STRING
		public RuleCall getSTRINGTerminalRuleCall_0() { return cSTRINGTerminalRuleCall_0; }
		
		//ID
		public RuleCall getIDTerminalRuleCall_1() { return cIDTerminalRuleCall_1; }
	}
	public class MacroElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.fraunhofer.ipa.kinematics.xacro.Xacro.Macro");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cMacroKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cNameKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cNameEStringParserRuleCall_3_0 = (RuleCall)cNameAssignment_3.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cParameterKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_4_1 = (Keyword)cGroup_4.eContents().get(1);
		private final Assignment cParameterAssignment_4_2 = (Assignment)cGroup_4.eContents().get(2);
		private final RuleCall cParameterParameterParserRuleCall_4_2_0 = (RuleCall)cParameterAssignment_4_2.eContents().get(0);
		private final Group cGroup_4_3 = (Group)cGroup_4.eContents().get(3);
		private final Keyword cCommaKeyword_4_3_0 = (Keyword)cGroup_4_3.eContents().get(0);
		private final Assignment cParameterAssignment_4_3_1 = (Assignment)cGroup_4_3.eContents().get(1);
		private final RuleCall cParameterParameterParserRuleCall_4_3_1_0 = (RuleCall)cParameterAssignment_4_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4_4 = (Keyword)cGroup_4.eContents().get(4);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cBodyKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cBodyAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cBodyBodyParserRuleCall_5_1_0 = (RuleCall)cBodyAssignment_5_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//Macro returns Macro:
		//    'Macro'
		//    '{'
		//        'name' name=EString
		//        ('parameter' '{' parameter+=Parameter ( "," parameter+=Parameter)* '}' )?
		//        ('body' body=Body)?
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//'Macro'
		//'{'
		//    'name' name=EString
		//    ('parameter' '{' parameter+=Parameter ( "," parameter+=Parameter)* '}' )?
		//    ('body' body=Body)?
		//'}'
		public Group getGroup() { return cGroup; }
		
		//'Macro'
		public Keyword getMacroKeyword_0() { return cMacroKeyword_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }
		
		//'name'
		public Keyword getNameKeyword_2() { return cNameKeyword_2; }
		
		//name=EString
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_3_0() { return cNameEStringParserRuleCall_3_0; }
		
		//('parameter' '{' parameter+=Parameter ( "," parameter+=Parameter)* '}' )?
		public Group getGroup_4() { return cGroup_4; }
		
		//'parameter'
		public Keyword getParameterKeyword_4_0() { return cParameterKeyword_4_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_4_1() { return cLeftCurlyBracketKeyword_4_1; }
		
		//parameter+=Parameter
		public Assignment getParameterAssignment_4_2() { return cParameterAssignment_4_2; }
		
		//Parameter
		public RuleCall getParameterParameterParserRuleCall_4_2_0() { return cParameterParameterParserRuleCall_4_2_0; }
		
		//( "," parameter+=Parameter)*
		public Group getGroup_4_3() { return cGroup_4_3; }
		
		//","
		public Keyword getCommaKeyword_4_3_0() { return cCommaKeyword_4_3_0; }
		
		//parameter+=Parameter
		public Assignment getParameterAssignment_4_3_1() { return cParameterAssignment_4_3_1; }
		
		//Parameter
		public RuleCall getParameterParameterParserRuleCall_4_3_1_0() { return cParameterParameterParserRuleCall_4_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_4_4() { return cRightCurlyBracketKeyword_4_4; }
		
		//('body' body=Body)?
		public Group getGroup_5() { return cGroup_5; }
		
		//'body'
		public Keyword getBodyKeyword_5_0() { return cBodyKeyword_5_0; }
		
		//body=Body
		public Assignment getBodyAssignment_5_1() { return cBodyAssignment_5_1; }
		
		//Body
		public RuleCall getBodyBodyParserRuleCall_5_1_0() { return cBodyBodyParserRuleCall_5_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_6() { return cRightCurlyBracketKeyword_6; }
	}
	public class ParameterElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.fraunhofer.ipa.kinematics.xacro.Xacro.Parameter");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cParameterAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cParameterKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameEStringParserRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cDefaultKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cDefaultAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cDefaultEStringParserRuleCall_4_1_0 = (RuleCall)cDefaultAssignment_4_1.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cValueKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cValueAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cValueEStringParserRuleCall_5_1_0 = (RuleCall)cValueAssignment_5_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//Parameter returns Parameter:
		//    {Parameter}
		//    'Parameter'
		//    name=EString
		//    '{'
		//        ('default' default=EString)?
		//        ('value' value=EString)?
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//{Parameter}
		//'Parameter'
		//name=EString
		//'{'
		//    ('default' default=EString)?
		//    ('value' value=EString)?
		//'}'
		public Group getGroup() { return cGroup; }
		
		//{Parameter}
		public Action getParameterAction_0() { return cParameterAction_0; }
		
		//'Parameter'
		public Keyword getParameterKeyword_1() { return cParameterKeyword_1; }
		
		//name=EString
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_2_0() { return cNameEStringParserRuleCall_2_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }
		
		//('default' default=EString)?
		public Group getGroup_4() { return cGroup_4; }
		
		//'default'
		public Keyword getDefaultKeyword_4_0() { return cDefaultKeyword_4_0; }
		
		//default=EString
		public Assignment getDefaultAssignment_4_1() { return cDefaultAssignment_4_1; }
		
		//EString
		public RuleCall getDefaultEStringParserRuleCall_4_1_0() { return cDefaultEStringParserRuleCall_4_1_0; }
		
		//('value' value=EString)?
		public Group getGroup_5() { return cGroup_5; }
		
		//'value'
		public Keyword getValueKeyword_5_0() { return cValueKeyword_5_0; }
		
		//value=EString
		public Assignment getValueAssignment_5_1() { return cValueAssignment_5_1; }
		
		//EString
		public RuleCall getValueEStringParserRuleCall_5_1_0() { return cValueEStringParserRuleCall_5_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_6() { return cRightCurlyBracketKeyword_6; }
	}
	public class BodyElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.fraunhofer.ipa.kinematics.xacro.Xacro.Body");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cBodyAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cBodyKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cLinkKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_3_1 = (Keyword)cGroup_3.eContents().get(1);
		private final Assignment cLinkAssignment_3_2 = (Assignment)cGroup_3.eContents().get(2);
		private final RuleCall cLinkLinkParserRuleCall_3_2_0 = (RuleCall)cLinkAssignment_3_2.eContents().get(0);
		private final Group cGroup_3_3 = (Group)cGroup_3.eContents().get(3);
		private final Keyword cCommaKeyword_3_3_0 = (Keyword)cGroup_3_3.eContents().get(0);
		private final Assignment cLinkAssignment_3_3_1 = (Assignment)cGroup_3_3.eContents().get(1);
		private final RuleCall cLinkLinkParserRuleCall_3_3_1_0 = (RuleCall)cLinkAssignment_3_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_3_4 = (Keyword)cGroup_3.eContents().get(4);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cJointKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_4_1 = (Keyword)cGroup_4.eContents().get(1);
		private final Assignment cJointAssignment_4_2 = (Assignment)cGroup_4.eContents().get(2);
		private final RuleCall cJointJointParserRuleCall_4_2_0 = (RuleCall)cJointAssignment_4_2.eContents().get(0);
		private final Group cGroup_4_3 = (Group)cGroup_4.eContents().get(3);
		private final Keyword cCommaKeyword_4_3_0 = (Keyword)cGroup_4_3.eContents().get(0);
		private final Assignment cJointAssignment_4_3_1 = (Assignment)cGroup_4_3.eContents().get(1);
		private final RuleCall cJointJointParserRuleCall_4_3_1_0 = (RuleCall)cJointAssignment_4_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4_4 = (Keyword)cGroup_4.eContents().get(4);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cMaterialKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_5_1 = (Keyword)cGroup_5.eContents().get(1);
		private final Assignment cMaterialAssignment_5_2 = (Assignment)cGroup_5.eContents().get(2);
		private final RuleCall cMaterialMaterialGlobalParserRuleCall_5_2_0 = (RuleCall)cMaterialAssignment_5_2.eContents().get(0);
		private final Group cGroup_5_3 = (Group)cGroup_5.eContents().get(3);
		private final Keyword cCommaKeyword_5_3_0 = (Keyword)cGroup_5_3.eContents().get(0);
		private final Assignment cMaterialAssignment_5_3_1 = (Assignment)cGroup_5_3.eContents().get(1);
		private final RuleCall cMaterialMaterialGlobalParserRuleCall_5_3_1_0 = (RuleCall)cMaterialAssignment_5_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5_4 = (Keyword)cGroup_5.eContents().get(4);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cTransmissionKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_6_1 = (Keyword)cGroup_6.eContents().get(1);
		private final Assignment cTransmissionAssignment_6_2 = (Assignment)cGroup_6.eContents().get(2);
		private final RuleCall cTransmissionTransmissionParserRuleCall_6_2_0 = (RuleCall)cTransmissionAssignment_6_2.eContents().get(0);
		private final Group cGroup_6_3 = (Group)cGroup_6.eContents().get(3);
		private final Keyword cCommaKeyword_6_3_0 = (Keyword)cGroup_6_3.eContents().get(0);
		private final Assignment cTransmissionAssignment_6_3_1 = (Assignment)cGroup_6_3.eContents().get(1);
		private final RuleCall cTransmissionTransmissionParserRuleCall_6_3_1_0 = (RuleCall)cTransmissionAssignment_6_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_6_4 = (Keyword)cGroup_6.eContents().get(4);
		private final Keyword cRightCurlyBracketKeyword_7 = (Keyword)cGroup.eContents().get(7);
		
		//Body returns Body:
		//    {Body}
		//    'Body'
		//    '{'
		//        ('link' '{' link+=Link ( "," link+=Link)* '}' )?
		//        ('joint' '{' joint+=Joint ( "," joint+=Joint)* '}' )?
		//        ('material' '{' material+=MaterialGlobal ( "," material+=MaterialGlobal)* '}' )?
		//        ('transmission' '{' transmission+=Transmission ( "," transmission+=Transmission)* '}' )?
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//{Body}
		//'Body'
		//'{'
		//    ('link' '{' link+=Link ( "," link+=Link)* '}' )?
		//    ('joint' '{' joint+=Joint ( "," joint+=Joint)* '}' )?
		//    ('material' '{' material+=MaterialGlobal ( "," material+=MaterialGlobal)* '}' )?
		//    ('transmission' '{' transmission+=Transmission ( "," transmission+=Transmission)* '}' )?
		//'}'
		public Group getGroup() { return cGroup; }
		
		//{Body}
		public Action getBodyAction_0() { return cBodyAction_0; }
		
		//'Body'
		public Keyword getBodyKeyword_1() { return cBodyKeyword_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//('link' '{' link+=Link ( "," link+=Link)* '}' )?
		public Group getGroup_3() { return cGroup_3; }
		
		//'link'
		public Keyword getLinkKeyword_3_0() { return cLinkKeyword_3_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_3_1() { return cLeftCurlyBracketKeyword_3_1; }
		
		//link+=Link
		public Assignment getLinkAssignment_3_2() { return cLinkAssignment_3_2; }
		
		//Link
		public RuleCall getLinkLinkParserRuleCall_3_2_0() { return cLinkLinkParserRuleCall_3_2_0; }
		
		//( "," link+=Link)*
		public Group getGroup_3_3() { return cGroup_3_3; }
		
		//","
		public Keyword getCommaKeyword_3_3_0() { return cCommaKeyword_3_3_0; }
		
		//link+=Link
		public Assignment getLinkAssignment_3_3_1() { return cLinkAssignment_3_3_1; }
		
		//Link
		public RuleCall getLinkLinkParserRuleCall_3_3_1_0() { return cLinkLinkParserRuleCall_3_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_3_4() { return cRightCurlyBracketKeyword_3_4; }
		
		//('joint' '{' joint+=Joint ( "," joint+=Joint)* '}' )?
		public Group getGroup_4() { return cGroup_4; }
		
		//'joint'
		public Keyword getJointKeyword_4_0() { return cJointKeyword_4_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_4_1() { return cLeftCurlyBracketKeyword_4_1; }
		
		//joint+=Joint
		public Assignment getJointAssignment_4_2() { return cJointAssignment_4_2; }
		
		//Joint
		public RuleCall getJointJointParserRuleCall_4_2_0() { return cJointJointParserRuleCall_4_2_0; }
		
		//( "," joint+=Joint)*
		public Group getGroup_4_3() { return cGroup_4_3; }
		
		//","
		public Keyword getCommaKeyword_4_3_0() { return cCommaKeyword_4_3_0; }
		
		//joint+=Joint
		public Assignment getJointAssignment_4_3_1() { return cJointAssignment_4_3_1; }
		
		//Joint
		public RuleCall getJointJointParserRuleCall_4_3_1_0() { return cJointJointParserRuleCall_4_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_4_4() { return cRightCurlyBracketKeyword_4_4; }
		
		//('material' '{' material+=MaterialGlobal ( "," material+=MaterialGlobal)* '}' )?
		public Group getGroup_5() { return cGroup_5; }
		
		//'material'
		public Keyword getMaterialKeyword_5_0() { return cMaterialKeyword_5_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_5_1() { return cLeftCurlyBracketKeyword_5_1; }
		
		//material+=MaterialGlobal
		public Assignment getMaterialAssignment_5_2() { return cMaterialAssignment_5_2; }
		
		//MaterialGlobal
		public RuleCall getMaterialMaterialGlobalParserRuleCall_5_2_0() { return cMaterialMaterialGlobalParserRuleCall_5_2_0; }
		
		//( "," material+=MaterialGlobal)*
		public Group getGroup_5_3() { return cGroup_5_3; }
		
		//","
		public Keyword getCommaKeyword_5_3_0() { return cCommaKeyword_5_3_0; }
		
		//material+=MaterialGlobal
		public Assignment getMaterialAssignment_5_3_1() { return cMaterialAssignment_5_3_1; }
		
		//MaterialGlobal
		public RuleCall getMaterialMaterialGlobalParserRuleCall_5_3_1_0() { return cMaterialMaterialGlobalParserRuleCall_5_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_5_4() { return cRightCurlyBracketKeyword_5_4; }
		
		//('transmission' '{' transmission+=Transmission ( "," transmission+=Transmission)* '}' )?
		public Group getGroup_6() { return cGroup_6; }
		
		//'transmission'
		public Keyword getTransmissionKeyword_6_0() { return cTransmissionKeyword_6_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_6_1() { return cLeftCurlyBracketKeyword_6_1; }
		
		//transmission+=Transmission
		public Assignment getTransmissionAssignment_6_2() { return cTransmissionAssignment_6_2; }
		
		//Transmission
		public RuleCall getTransmissionTransmissionParserRuleCall_6_2_0() { return cTransmissionTransmissionParserRuleCall_6_2_0; }
		
		//( "," transmission+=Transmission)*
		public Group getGroup_6_3() { return cGroup_6_3; }
		
		//","
		public Keyword getCommaKeyword_6_3_0() { return cCommaKeyword_6_3_0; }
		
		//transmission+=Transmission
		public Assignment getTransmissionAssignment_6_3_1() { return cTransmissionAssignment_6_3_1; }
		
		//Transmission
		public RuleCall getTransmissionTransmissionParserRuleCall_6_3_1_0() { return cTransmissionTransmissionParserRuleCall_6_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_6_4() { return cRightCurlyBracketKeyword_6_4; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_7() { return cRightCurlyBracketKeyword_7; }
	}
	public class JointElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.fraunhofer.ipa.kinematics.xacro.Xacro.Joint");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cJointKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cNameKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cNameEStringParserRuleCall_3_0 = (RuleCall)cNameAssignment_3.eContents().get(0);
		private final Keyword cTypeKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cTypeAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cTypeEStringParserRuleCall_5_0 = (RuleCall)cTypeAssignment_5.eContents().get(0);
		private final Keyword cParentKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Assignment cParentAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final CrossReference cParentLinkCrossReference_7_0 = (CrossReference)cParentAssignment_7.eContents().get(0);
		private final RuleCall cParentLinkEStringParserRuleCall_7_0_1 = (RuleCall)cParentLinkCrossReference_7_0.eContents().get(1);
		private final Keyword cChildKeyword_8 = (Keyword)cGroup.eContents().get(8);
		private final Assignment cChildAssignment_9 = (Assignment)cGroup.eContents().get(9);
		private final CrossReference cChildLinkCrossReference_9_0 = (CrossReference)cChildAssignment_9.eContents().get(0);
		private final RuleCall cChildLinkEStringParserRuleCall_9_0_1 = (RuleCall)cChildLinkCrossReference_9_0.eContents().get(1);
		private final Group cGroup_10 = (Group)cGroup.eContents().get(10);
		private final Keyword cOriginKeyword_10_0 = (Keyword)cGroup_10.eContents().get(0);
		private final Assignment cOriginAssignment_10_1 = (Assignment)cGroup_10.eContents().get(1);
		private final RuleCall cOriginPoseParserRuleCall_10_1_0 = (RuleCall)cOriginAssignment_10_1.eContents().get(0);
		private final Group cGroup_11 = (Group)cGroup.eContents().get(11);
		private final Keyword cAxisKeyword_11_0 = (Keyword)cGroup_11.eContents().get(0);
		private final Assignment cAxisAssignment_11_1 = (Assignment)cGroup_11.eContents().get(1);
		private final RuleCall cAxisAxisParserRuleCall_11_1_0 = (RuleCall)cAxisAssignment_11_1.eContents().get(0);
		private final Group cGroup_12 = (Group)cGroup.eContents().get(12);
		private final Keyword cCalibrationKeyword_12_0 = (Keyword)cGroup_12.eContents().get(0);
		private final Assignment cCalibrationAssignment_12_1 = (Assignment)cGroup_12.eContents().get(1);
		private final RuleCall cCalibrationCalibrationParserRuleCall_12_1_0 = (RuleCall)cCalibrationAssignment_12_1.eContents().get(0);
		private final Group cGroup_13 = (Group)cGroup.eContents().get(13);
		private final Keyword cDynamicsKeyword_13_0 = (Keyword)cGroup_13.eContents().get(0);
		private final Assignment cDynamicsAssignment_13_1 = (Assignment)cGroup_13.eContents().get(1);
		private final RuleCall cDynamicsDynamicsParserRuleCall_13_1_0 = (RuleCall)cDynamicsAssignment_13_1.eContents().get(0);
		private final Group cGroup_14 = (Group)cGroup.eContents().get(14);
		private final Keyword cLimitKeyword_14_0 = (Keyword)cGroup_14.eContents().get(0);
		private final Assignment cLimitAssignment_14_1 = (Assignment)cGroup_14.eContents().get(1);
		private final RuleCall cLimitLimitParserRuleCall_14_1_0 = (RuleCall)cLimitAssignment_14_1.eContents().get(0);
		private final Group cGroup_15 = (Group)cGroup.eContents().get(15);
		private final Keyword cSafetyControllerKeyword_15_0 = (Keyword)cGroup_15.eContents().get(0);
		private final Assignment cSafetyControllerAssignment_15_1 = (Assignment)cGroup_15.eContents().get(1);
		private final RuleCall cSafetyControllerSafetyControllerParserRuleCall_15_1_0 = (RuleCall)cSafetyControllerAssignment_15_1.eContents().get(0);
		private final Group cGroup_16 = (Group)cGroup.eContents().get(16);
		private final Keyword cMimicKeyword_16_0 = (Keyword)cGroup_16.eContents().get(0);
		private final Assignment cMimicAssignment_16_1 = (Assignment)cGroup_16.eContents().get(1);
		private final RuleCall cMimicMimicParserRuleCall_16_1_0 = (RuleCall)cMimicAssignment_16_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_17 = (Keyword)cGroup.eContents().get(17);
		
		//Joint returns urdf::Joint:
		//    'Joint'
		//    '{'
		//        'name' name=EString
		//        'type' type=EString
		//        'parent' parent=[urdf::Link|EString]
		//        'child' child=[urdf::Link|EString]
		//        ('origin' origin=Pose)?
		//        ('axis' axis=Axis)?
		//        ('calibration' calibration=Calibration)?
		//        ('dynamics' dynamics=Dynamics)?
		//        ('limit' limit=Limit)?
		//        ('safetyController' safetyController=SafetyController)?
		//        ('mimic' mimic=Mimic)?
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//'Joint'
		//'{'
		//    'name' name=EString
		//    'type' type=EString
		//    'parent' parent=[urdf::Link|EString]
		//    'child' child=[urdf::Link|EString]
		//    ('origin' origin=Pose)?
		//    ('axis' axis=Axis)?
		//    ('calibration' calibration=Calibration)?
		//    ('dynamics' dynamics=Dynamics)?
		//    ('limit' limit=Limit)?
		//    ('safetyController' safetyController=SafetyController)?
		//    ('mimic' mimic=Mimic)?
		//'}'
		public Group getGroup() { return cGroup; }
		
		//'Joint'
		public Keyword getJointKeyword_0() { return cJointKeyword_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }
		
		//'name'
		public Keyword getNameKeyword_2() { return cNameKeyword_2; }
		
		//name=EString
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_3_0() { return cNameEStringParserRuleCall_3_0; }
		
		//'type'
		public Keyword getTypeKeyword_4() { return cTypeKeyword_4; }
		
		//type=EString
		public Assignment getTypeAssignment_5() { return cTypeAssignment_5; }
		
		//EString
		public RuleCall getTypeEStringParserRuleCall_5_0() { return cTypeEStringParserRuleCall_5_0; }
		
		//'parent'
		public Keyword getParentKeyword_6() { return cParentKeyword_6; }
		
		//parent=[urdf::Link|EString]
		public Assignment getParentAssignment_7() { return cParentAssignment_7; }
		
		//[urdf::Link|EString]
		public CrossReference getParentLinkCrossReference_7_0() { return cParentLinkCrossReference_7_0; }
		
		//EString
		public RuleCall getParentLinkEStringParserRuleCall_7_0_1() { return cParentLinkEStringParserRuleCall_7_0_1; }
		
		//'child'
		public Keyword getChildKeyword_8() { return cChildKeyword_8; }
		
		//child=[urdf::Link|EString]
		public Assignment getChildAssignment_9() { return cChildAssignment_9; }
		
		//[urdf::Link|EString]
		public CrossReference getChildLinkCrossReference_9_0() { return cChildLinkCrossReference_9_0; }
		
		//EString
		public RuleCall getChildLinkEStringParserRuleCall_9_0_1() { return cChildLinkEStringParserRuleCall_9_0_1; }
		
		//('origin' origin=Pose)?
		public Group getGroup_10() { return cGroup_10; }
		
		//'origin'
		public Keyword getOriginKeyword_10_0() { return cOriginKeyword_10_0; }
		
		//origin=Pose
		public Assignment getOriginAssignment_10_1() { return cOriginAssignment_10_1; }
		
		//Pose
		public RuleCall getOriginPoseParserRuleCall_10_1_0() { return cOriginPoseParserRuleCall_10_1_0; }
		
		//('axis' axis=Axis)?
		public Group getGroup_11() { return cGroup_11; }
		
		//'axis'
		public Keyword getAxisKeyword_11_0() { return cAxisKeyword_11_0; }
		
		//axis=Axis
		public Assignment getAxisAssignment_11_1() { return cAxisAssignment_11_1; }
		
		//Axis
		public RuleCall getAxisAxisParserRuleCall_11_1_0() { return cAxisAxisParserRuleCall_11_1_0; }
		
		//('calibration' calibration=Calibration)?
		public Group getGroup_12() { return cGroup_12; }
		
		//'calibration'
		public Keyword getCalibrationKeyword_12_0() { return cCalibrationKeyword_12_0; }
		
		//calibration=Calibration
		public Assignment getCalibrationAssignment_12_1() { return cCalibrationAssignment_12_1; }
		
		//Calibration
		public RuleCall getCalibrationCalibrationParserRuleCall_12_1_0() { return cCalibrationCalibrationParserRuleCall_12_1_0; }
		
		//('dynamics' dynamics=Dynamics)?
		public Group getGroup_13() { return cGroup_13; }
		
		//'dynamics'
		public Keyword getDynamicsKeyword_13_0() { return cDynamicsKeyword_13_0; }
		
		//dynamics=Dynamics
		public Assignment getDynamicsAssignment_13_1() { return cDynamicsAssignment_13_1; }
		
		//Dynamics
		public RuleCall getDynamicsDynamicsParserRuleCall_13_1_0() { return cDynamicsDynamicsParserRuleCall_13_1_0; }
		
		//('limit' limit=Limit)?
		public Group getGroup_14() { return cGroup_14; }
		
		//'limit'
		public Keyword getLimitKeyword_14_0() { return cLimitKeyword_14_0; }
		
		//limit=Limit
		public Assignment getLimitAssignment_14_1() { return cLimitAssignment_14_1; }
		
		//Limit
		public RuleCall getLimitLimitParserRuleCall_14_1_0() { return cLimitLimitParserRuleCall_14_1_0; }
		
		//('safetyController' safetyController=SafetyController)?
		public Group getGroup_15() { return cGroup_15; }
		
		//'safetyController'
		public Keyword getSafetyControllerKeyword_15_0() { return cSafetyControllerKeyword_15_0; }
		
		//safetyController=SafetyController
		public Assignment getSafetyControllerAssignment_15_1() { return cSafetyControllerAssignment_15_1; }
		
		//SafetyController
		public RuleCall getSafetyControllerSafetyControllerParserRuleCall_15_1_0() { return cSafetyControllerSafetyControllerParserRuleCall_15_1_0; }
		
		//('mimic' mimic=Mimic)?
		public Group getGroup_16() { return cGroup_16; }
		
		//'mimic'
		public Keyword getMimicKeyword_16_0() { return cMimicKeyword_16_0; }
		
		//mimic=Mimic
		public Assignment getMimicAssignment_16_1() { return cMimicAssignment_16_1; }
		
		//Mimic
		public RuleCall getMimicMimicParserRuleCall_16_1_0() { return cMimicMimicParserRuleCall_16_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_17() { return cRightCurlyBracketKeyword_17; }
	}
	public class LinkElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.fraunhofer.ipa.kinematics.xacro.Xacro.Link");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLinkKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cNameKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cNameEStringParserRuleCall_3_0 = (RuleCall)cNameAssignment_3.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cTypeKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cTypeAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cTypeEStringParserRuleCall_4_1_0 = (RuleCall)cTypeAssignment_4_1.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cInertialKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cInertialAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cInertialInertialParserRuleCall_5_1_0 = (RuleCall)cInertialAssignment_5_1.eContents().get(0);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cVisualKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Assignment cVisualAssignment_6_1 = (Assignment)cGroup_6.eContents().get(1);
		private final RuleCall cVisualVisualParserRuleCall_6_1_0 = (RuleCall)cVisualAssignment_6_1.eContents().get(0);
		private final Group cGroup_7 = (Group)cGroup.eContents().get(7);
		private final Keyword cCollisionKeyword_7_0 = (Keyword)cGroup_7.eContents().get(0);
		private final Assignment cCollisionAssignment_7_1 = (Assignment)cGroup_7.eContents().get(1);
		private final RuleCall cCollisionCollisionParserRuleCall_7_1_0 = (RuleCall)cCollisionAssignment_7_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_8 = (Keyword)cGroup.eContents().get(8);
		
		//Link returns urdf::Link:
		//    'Link'
		//    '{'
		//        'name' name=EString
		//        ('type' type=EString)?
		//        ('inertial' inertial=Inertial)?
		//        ('visual' visual=Visual)?
		//        ('collision' collision=Collision)?
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//'Link'
		//'{'
		//    'name' name=EString
		//    ('type' type=EString)?
		//    ('inertial' inertial=Inertial)?
		//    ('visual' visual=Visual)?
		//    ('collision' collision=Collision)?
		//'}'
		public Group getGroup() { return cGroup; }
		
		//'Link'
		public Keyword getLinkKeyword_0() { return cLinkKeyword_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }
		
		//'name'
		public Keyword getNameKeyword_2() { return cNameKeyword_2; }
		
		//name=EString
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_3_0() { return cNameEStringParserRuleCall_3_0; }
		
		//('type' type=EString)?
		public Group getGroup_4() { return cGroup_4; }
		
		//'type'
		public Keyword getTypeKeyword_4_0() { return cTypeKeyword_4_0; }
		
		//type=EString
		public Assignment getTypeAssignment_4_1() { return cTypeAssignment_4_1; }
		
		//EString
		public RuleCall getTypeEStringParserRuleCall_4_1_0() { return cTypeEStringParserRuleCall_4_1_0; }
		
		//('inertial' inertial=Inertial)?
		public Group getGroup_5() { return cGroup_5; }
		
		//'inertial'
		public Keyword getInertialKeyword_5_0() { return cInertialKeyword_5_0; }
		
		//inertial=Inertial
		public Assignment getInertialAssignment_5_1() { return cInertialAssignment_5_1; }
		
		//Inertial
		public RuleCall getInertialInertialParserRuleCall_5_1_0() { return cInertialInertialParserRuleCall_5_1_0; }
		
		//('visual' visual=Visual)?
		public Group getGroup_6() { return cGroup_6; }
		
		//'visual'
		public Keyword getVisualKeyword_6_0() { return cVisualKeyword_6_0; }
		
		//visual=Visual
		public Assignment getVisualAssignment_6_1() { return cVisualAssignment_6_1; }
		
		//Visual
		public RuleCall getVisualVisualParserRuleCall_6_1_0() { return cVisualVisualParserRuleCall_6_1_0; }
		
		//('collision' collision=Collision)?
		public Group getGroup_7() { return cGroup_7; }
		
		//'collision'
		public Keyword getCollisionKeyword_7_0() { return cCollisionKeyword_7_0; }
		
		//collision=Collision
		public Assignment getCollisionAssignment_7_1() { return cCollisionAssignment_7_1; }
		
		//Collision
		public RuleCall getCollisionCollisionParserRuleCall_7_1_0() { return cCollisionCollisionParserRuleCall_7_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_8() { return cRightCurlyBracketKeyword_8; }
	}
	public class MaterialGlobalElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.fraunhofer.ipa.kinematics.xacro.Xacro.MaterialGlobal");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cMaterialGlobalKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cNameKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cNameEStringParserRuleCall_3_0 = (RuleCall)cNameAssignment_3.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cColorKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cColorAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cColorColorParserRuleCall_4_1_0 = (RuleCall)cColorAssignment_4_1.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cTextureKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cTextureAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cTextureTextureParserRuleCall_5_1_0 = (RuleCall)cTextureAssignment_5_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//MaterialGlobal returns urdf::MaterialGlobal:
		//    'MaterialGlobal'
		//    '{'
		//        'name' name=EString
		//        ('color' color=Color)?
		//        ('texture' texture=Texture)?
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//'MaterialGlobal'
		//'{'
		//    'name' name=EString
		//    ('color' color=Color)?
		//    ('texture' texture=Texture)?
		//'}'
		public Group getGroup() { return cGroup; }
		
		//'MaterialGlobal'
		public Keyword getMaterialGlobalKeyword_0() { return cMaterialGlobalKeyword_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }
		
		//'name'
		public Keyword getNameKeyword_2() { return cNameKeyword_2; }
		
		//name=EString
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_3_0() { return cNameEStringParserRuleCall_3_0; }
		
		//('color' color=Color)?
		public Group getGroup_4() { return cGroup_4; }
		
		//'color'
		public Keyword getColorKeyword_4_0() { return cColorKeyword_4_0; }
		
		//color=Color
		public Assignment getColorAssignment_4_1() { return cColorAssignment_4_1; }
		
		//Color
		public RuleCall getColorColorParserRuleCall_4_1_0() { return cColorColorParserRuleCall_4_1_0; }
		
		//('texture' texture=Texture)?
		public Group getGroup_5() { return cGroup_5; }
		
		//'texture'
		public Keyword getTextureKeyword_5_0() { return cTextureKeyword_5_0; }
		
		//texture=Texture
		public Assignment getTextureAssignment_5_1() { return cTextureAssignment_5_1; }
		
		//Texture
		public RuleCall getTextureTextureParserRuleCall_5_1_0() { return cTextureTextureParserRuleCall_5_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_6() { return cRightCurlyBracketKeyword_6; }
	}
	public class TransmissionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.fraunhofer.ipa.kinematics.xacro.Xacro.Transmission");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cTransmissionKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cMechanicalReductionKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2_1 = (Keyword)cGroup_2.eContents().get(1);
		private final Assignment cMechanicalReductionAssignment_2_2 = (Assignment)cGroup_2.eContents().get(2);
		private final RuleCall cMechanicalReductionDouble0ParserRuleCall_2_2_0 = (RuleCall)cMechanicalReductionAssignment_2_2.eContents().get(0);
		private final Group cGroup_2_3 = (Group)cGroup_2.eContents().get(3);
		private final Keyword cCommaKeyword_2_3_0 = (Keyword)cGroup_2_3.eContents().get(0);
		private final Assignment cMechanicalReductionAssignment_2_3_1 = (Assignment)cGroup_2_3.eContents().get(1);
		private final RuleCall cMechanicalReductionDouble0ParserRuleCall_2_3_1_0 = (RuleCall)cMechanicalReductionAssignment_2_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_2_4 = (Keyword)cGroup_2.eContents().get(4);
		private final Keyword cNameKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cNameAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cNameEStringParserRuleCall_4_0 = (RuleCall)cNameAssignment_4.eContents().get(0);
		private final Keyword cTypeKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cTypeAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cTypeEStringParserRuleCall_6_0 = (RuleCall)cTypeAssignment_6.eContents().get(0);
		private final Group cGroup_7 = (Group)cGroup.eContents().get(7);
		private final Keyword cLeftActuatorKeyword_7_0 = (Keyword)cGroup_7.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_7_1 = (Keyword)cGroup_7.eContents().get(1);
		private final Assignment cLeftActuatorAssignment_7_2 = (Assignment)cGroup_7.eContents().get(2);
		private final RuleCall cLeftActuatorActuatorTransmissionParserRuleCall_7_2_0 = (RuleCall)cLeftActuatorAssignment_7_2.eContents().get(0);
		private final Group cGroup_7_3 = (Group)cGroup_7.eContents().get(3);
		private final Keyword cCommaKeyword_7_3_0 = (Keyword)cGroup_7_3.eContents().get(0);
		private final Assignment cLeftActuatorAssignment_7_3_1 = (Assignment)cGroup_7_3.eContents().get(1);
		private final RuleCall cLeftActuatorActuatorTransmissionParserRuleCall_7_3_1_0 = (RuleCall)cLeftActuatorAssignment_7_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_7_4 = (Keyword)cGroup_7.eContents().get(4);
		private final Group cGroup_8 = (Group)cGroup.eContents().get(8);
		private final Keyword cRightActuatorKeyword_8_0 = (Keyword)cGroup_8.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_8_1 = (Keyword)cGroup_8.eContents().get(1);
		private final Assignment cRightActuatorAssignment_8_2 = (Assignment)cGroup_8.eContents().get(2);
		private final RuleCall cRightActuatorActuatorTransmissionParserRuleCall_8_2_0 = (RuleCall)cRightActuatorAssignment_8_2.eContents().get(0);
		private final Group cGroup_8_3 = (Group)cGroup_8.eContents().get(3);
		private final Keyword cCommaKeyword_8_3_0 = (Keyword)cGroup_8_3.eContents().get(0);
		private final Assignment cRightActuatorAssignment_8_3_1 = (Assignment)cGroup_8_3.eContents().get(1);
		private final RuleCall cRightActuatorActuatorTransmissionParserRuleCall_8_3_1_0 = (RuleCall)cRightActuatorAssignment_8_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_8_4 = (Keyword)cGroup_8.eContents().get(4);
		private final Group cGroup_9 = (Group)cGroup.eContents().get(9);
		private final Keyword cFlexJointKeyword_9_0 = (Keyword)cGroup_9.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_9_1 = (Keyword)cGroup_9.eContents().get(1);
		private final Assignment cFlexJointAssignment_9_2 = (Assignment)cGroup_9.eContents().get(2);
		private final RuleCall cFlexJointActuatorTransmissionParserRuleCall_9_2_0 = (RuleCall)cFlexJointAssignment_9_2.eContents().get(0);
		private final Group cGroup_9_3 = (Group)cGroup_9.eContents().get(3);
		private final Keyword cCommaKeyword_9_3_0 = (Keyword)cGroup_9_3.eContents().get(0);
		private final Assignment cFlexJointAssignment_9_3_1 = (Assignment)cGroup_9_3.eContents().get(1);
		private final RuleCall cFlexJointActuatorTransmissionParserRuleCall_9_3_1_0 = (RuleCall)cFlexJointAssignment_9_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_9_4 = (Keyword)cGroup_9.eContents().get(4);
		private final Group cGroup_10 = (Group)cGroup.eContents().get(10);
		private final Keyword cRollJointKeyword_10_0 = (Keyword)cGroup_10.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_10_1 = (Keyword)cGroup_10.eContents().get(1);
		private final Assignment cRollJointAssignment_10_2 = (Assignment)cGroup_10.eContents().get(2);
		private final RuleCall cRollJointActuatorTransmissionParserRuleCall_10_2_0 = (RuleCall)cRollJointAssignment_10_2.eContents().get(0);
		private final Group cGroup_10_3 = (Group)cGroup_10.eContents().get(3);
		private final Keyword cCommaKeyword_10_3_0 = (Keyword)cGroup_10_3.eContents().get(0);
		private final Assignment cRollJointAssignment_10_3_1 = (Assignment)cGroup_10_3.eContents().get(1);
		private final RuleCall cRollJointActuatorTransmissionParserRuleCall_10_3_1_0 = (RuleCall)cRollJointAssignment_10_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_10_4 = (Keyword)cGroup_10.eContents().get(4);
		private final Group cGroup_11 = (Group)cGroup.eContents().get(11);
		private final Keyword cGapJointKeyword_11_0 = (Keyword)cGroup_11.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_11_1 = (Keyword)cGroup_11.eContents().get(1);
		private final Assignment cGapJointAssignment_11_2 = (Assignment)cGroup_11.eContents().get(2);
		private final RuleCall cGapJointGapJointTransmissionParserRuleCall_11_2_0 = (RuleCall)cGapJointAssignment_11_2.eContents().get(0);
		private final Group cGroup_11_3 = (Group)cGroup_11.eContents().get(3);
		private final Keyword cCommaKeyword_11_3_0 = (Keyword)cGroup_11_3.eContents().get(0);
		private final Assignment cGapJointAssignment_11_3_1 = (Assignment)cGroup_11_3.eContents().get(1);
		private final RuleCall cGapJointGapJointTransmissionParserRuleCall_11_3_1_0 = (RuleCall)cGapJointAssignment_11_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_11_4 = (Keyword)cGroup_11.eContents().get(4);
		private final Group cGroup_12 = (Group)cGroup.eContents().get(12);
		private final Keyword cPassiveJointKeyword_12_0 = (Keyword)cGroup_12.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_12_1 = (Keyword)cGroup_12.eContents().get(1);
		private final Assignment cPassiveJointAssignment_12_2 = (Assignment)cGroup_12.eContents().get(2);
		private final RuleCall cPassiveJointPassiveJointTransmissionParserRuleCall_12_2_0 = (RuleCall)cPassiveJointAssignment_12_2.eContents().get(0);
		private final Group cGroup_12_3 = (Group)cGroup_12.eContents().get(3);
		private final Keyword cCommaKeyword_12_3_0 = (Keyword)cGroup_12_3.eContents().get(0);
		private final Assignment cPassiveJointAssignment_12_3_1 = (Assignment)cGroup_12_3.eContents().get(1);
		private final RuleCall cPassiveJointPassiveJointTransmissionParserRuleCall_12_3_1_0 = (RuleCall)cPassiveJointAssignment_12_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_12_4 = (Keyword)cGroup_12.eContents().get(4);
		private final Group cGroup_13 = (Group)cGroup.eContents().get(13);
		private final Keyword cUseSimulatedGripperJointKeyword_13_0 = (Keyword)cGroup_13.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_13_1 = (Keyword)cGroup_13.eContents().get(1);
		private final Assignment cUseSimulatedGripperJointAssignment_13_2 = (Assignment)cGroup_13.eContents().get(2);
		private final RuleCall cUseSimulatedGripperJointUseSimulatedGripperJointTypeParserRuleCall_13_2_0 = (RuleCall)cUseSimulatedGripperJointAssignment_13_2.eContents().get(0);
		private final Group cGroup_13_3 = (Group)cGroup_13.eContents().get(3);
		private final Keyword cCommaKeyword_13_3_0 = (Keyword)cGroup_13_3.eContents().get(0);
		private final Assignment cUseSimulatedGripperJointAssignment_13_3_1 = (Assignment)cGroup_13_3.eContents().get(1);
		private final RuleCall cUseSimulatedGripperJointUseSimulatedGripperJointTypeParserRuleCall_13_3_1_0 = (RuleCall)cUseSimulatedGripperJointAssignment_13_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_13_4 = (Keyword)cGroup_13.eContents().get(4);
		private final Group cGroup_14 = (Group)cGroup.eContents().get(14);
		private final Keyword cActuatorKeyword_14_0 = (Keyword)cGroup_14.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_14_1 = (Keyword)cGroup_14.eContents().get(1);
		private final Assignment cActuatorAssignment_14_2 = (Assignment)cGroup_14.eContents().get(2);
		private final RuleCall cActuatorNameParserRuleCall_14_2_0 = (RuleCall)cActuatorAssignment_14_2.eContents().get(0);
		private final Group cGroup_14_3 = (Group)cGroup_14.eContents().get(3);
		private final Keyword cCommaKeyword_14_3_0 = (Keyword)cGroup_14_3.eContents().get(0);
		private final Assignment cActuatorAssignment_14_3_1 = (Assignment)cGroup_14_3.eContents().get(1);
		private final RuleCall cActuatorNameParserRuleCall_14_3_1_0 = (RuleCall)cActuatorAssignment_14_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_14_4 = (Keyword)cGroup_14.eContents().get(4);
		private final Group cGroup_15 = (Group)cGroup.eContents().get(15);
		private final Keyword cJointKeyword_15_0 = (Keyword)cGroup_15.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_15_1 = (Keyword)cGroup_15.eContents().get(1);
		private final Assignment cJointAssignment_15_2 = (Assignment)cGroup_15.eContents().get(2);
		private final RuleCall cJointNameParserRuleCall_15_2_0 = (RuleCall)cJointAssignment_15_2.eContents().get(0);
		private final Group cGroup_15_3 = (Group)cGroup_15.eContents().get(3);
		private final Keyword cCommaKeyword_15_3_0 = (Keyword)cGroup_15_3.eContents().get(0);
		private final Assignment cJointAssignment_15_3_1 = (Assignment)cGroup_15_3.eContents().get(1);
		private final RuleCall cJointNameParserRuleCall_15_3_1_0 = (RuleCall)cJointAssignment_15_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_15_4 = (Keyword)cGroup_15.eContents().get(4);
		private final Keyword cRightCurlyBracketKeyword_16 = (Keyword)cGroup.eContents().get(16);
		
		//Transmission returns urdf::Transmission:
		//    'Transmission'
		//    '{'
		//        ('mechanicalReduction' '{' mechanicalReduction+=Double0 ( "," mechanicalReduction+=Double0)* '}' )?
		//        'name' name=EString
		//        'type' type=EString
		//        ('leftActuator' '{' leftActuator+=ActuatorTransmission ( "," leftActuator+=ActuatorTransmission)* '}' )?
		//        ('rightActuator' '{' rightActuator+=ActuatorTransmission ( "," rightActuator+=ActuatorTransmission)* '}' )?
		//        ('flexJoint' '{' flexJoint+=ActuatorTransmission ( "," flexJoint+=ActuatorTransmission)* '}' )?
		//        ('rollJoint' '{' rollJoint+=ActuatorTransmission ( "," rollJoint+=ActuatorTransmission)* '}' )?
		//        ('gapJoint' '{' gapJoint+=GapJointTransmission ( "," gapJoint+=GapJointTransmission)* '}' )?
		//        ('passiveJoint' '{' passiveJoint+=PassiveJointTransmission ( "," passiveJoint+=PassiveJointTransmission)* '}' )?
		//        ('useSimulatedGripperJoint' '{' useSimulatedGripperJoint+=UseSimulatedGripperJointType ( "," useSimulatedGripperJoint+=UseSimulatedGripperJointType)* '}' )?
		//        ('actuator' '{' actuator+=Name ( "," actuator+=Name)* '}' )?
		//        ('joint' '{' joint+=Name ( "," joint+=Name)* '}' )?
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//'Transmission'
		//'{'
		//    ('mechanicalReduction' '{' mechanicalReduction+=Double0 ( "," mechanicalReduction+=Double0)* '}' )?
		//    'name' name=EString
		//    'type' type=EString
		//    ('leftActuator' '{' leftActuator+=ActuatorTransmission ( "," leftActuator+=ActuatorTransmission)* '}' )?
		//    ('rightActuator' '{' rightActuator+=ActuatorTransmission ( "," rightActuator+=ActuatorTransmission)* '}' )?
		//    ('flexJoint' '{' flexJoint+=ActuatorTransmission ( "," flexJoint+=ActuatorTransmission)* '}' )?
		//    ('rollJoint' '{' rollJoint+=ActuatorTransmission ( "," rollJoint+=ActuatorTransmission)* '}' )?
		//    ('gapJoint' '{' gapJoint+=GapJointTransmission ( "," gapJoint+=GapJointTransmission)* '}' )?
		//    ('passiveJoint' '{' passiveJoint+=PassiveJointTransmission ( "," passiveJoint+=PassiveJointTransmission)* '}' )?
		//    ('useSimulatedGripperJoint' '{' useSimulatedGripperJoint+=UseSimulatedGripperJointType ( "," useSimulatedGripperJoint+=UseSimulatedGripperJointType)* '}' )?
		//    ('actuator' '{' actuator+=Name ( "," actuator+=Name)* '}' )?
		//    ('joint' '{' joint+=Name ( "," joint+=Name)* '}' )?
		//'}'
		public Group getGroup() { return cGroup; }
		
		//'Transmission'
		public Keyword getTransmissionKeyword_0() { return cTransmissionKeyword_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }
		
		//('mechanicalReduction' '{' mechanicalReduction+=Double0 ( "," mechanicalReduction+=Double0)* '}' )?
		public Group getGroup_2() { return cGroup_2; }
		
		//'mechanicalReduction'
		public Keyword getMechanicalReductionKeyword_2_0() { return cMechanicalReductionKeyword_2_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2_1() { return cLeftCurlyBracketKeyword_2_1; }
		
		//mechanicalReduction+=Double0
		public Assignment getMechanicalReductionAssignment_2_2() { return cMechanicalReductionAssignment_2_2; }
		
		//Double0
		public RuleCall getMechanicalReductionDouble0ParserRuleCall_2_2_0() { return cMechanicalReductionDouble0ParserRuleCall_2_2_0; }
		
		//( "," mechanicalReduction+=Double0)*
		public Group getGroup_2_3() { return cGroup_2_3; }
		
		//","
		public Keyword getCommaKeyword_2_3_0() { return cCommaKeyword_2_3_0; }
		
		//mechanicalReduction+=Double0
		public Assignment getMechanicalReductionAssignment_2_3_1() { return cMechanicalReductionAssignment_2_3_1; }
		
		//Double0
		public RuleCall getMechanicalReductionDouble0ParserRuleCall_2_3_1_0() { return cMechanicalReductionDouble0ParserRuleCall_2_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_2_4() { return cRightCurlyBracketKeyword_2_4; }
		
		//'name'
		public Keyword getNameKeyword_3() { return cNameKeyword_3; }
		
		//name=EString
		public Assignment getNameAssignment_4() { return cNameAssignment_4; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_4_0() { return cNameEStringParserRuleCall_4_0; }
		
		//'type'
		public Keyword getTypeKeyword_5() { return cTypeKeyword_5; }
		
		//type=EString
		public Assignment getTypeAssignment_6() { return cTypeAssignment_6; }
		
		//EString
		public RuleCall getTypeEStringParserRuleCall_6_0() { return cTypeEStringParserRuleCall_6_0; }
		
		//('leftActuator' '{' leftActuator+=ActuatorTransmission ( "," leftActuator+=ActuatorTransmission)* '}' )?
		public Group getGroup_7() { return cGroup_7; }
		
		//'leftActuator'
		public Keyword getLeftActuatorKeyword_7_0() { return cLeftActuatorKeyword_7_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_7_1() { return cLeftCurlyBracketKeyword_7_1; }
		
		//leftActuator+=ActuatorTransmission
		public Assignment getLeftActuatorAssignment_7_2() { return cLeftActuatorAssignment_7_2; }
		
		//ActuatorTransmission
		public RuleCall getLeftActuatorActuatorTransmissionParserRuleCall_7_2_0() { return cLeftActuatorActuatorTransmissionParserRuleCall_7_2_0; }
		
		//( "," leftActuator+=ActuatorTransmission)*
		public Group getGroup_7_3() { return cGroup_7_3; }
		
		//","
		public Keyword getCommaKeyword_7_3_0() { return cCommaKeyword_7_3_0; }
		
		//leftActuator+=ActuatorTransmission
		public Assignment getLeftActuatorAssignment_7_3_1() { return cLeftActuatorAssignment_7_3_1; }
		
		//ActuatorTransmission
		public RuleCall getLeftActuatorActuatorTransmissionParserRuleCall_7_3_1_0() { return cLeftActuatorActuatorTransmissionParserRuleCall_7_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_7_4() { return cRightCurlyBracketKeyword_7_4; }
		
		//('rightActuator' '{' rightActuator+=ActuatorTransmission ( "," rightActuator+=ActuatorTransmission)* '}' )?
		public Group getGroup_8() { return cGroup_8; }
		
		//'rightActuator'
		public Keyword getRightActuatorKeyword_8_0() { return cRightActuatorKeyword_8_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_8_1() { return cLeftCurlyBracketKeyword_8_1; }
		
		//rightActuator+=ActuatorTransmission
		public Assignment getRightActuatorAssignment_8_2() { return cRightActuatorAssignment_8_2; }
		
		//ActuatorTransmission
		public RuleCall getRightActuatorActuatorTransmissionParserRuleCall_8_2_0() { return cRightActuatorActuatorTransmissionParserRuleCall_8_2_0; }
		
		//( "," rightActuator+=ActuatorTransmission)*
		public Group getGroup_8_3() { return cGroup_8_3; }
		
		//","
		public Keyword getCommaKeyword_8_3_0() { return cCommaKeyword_8_3_0; }
		
		//rightActuator+=ActuatorTransmission
		public Assignment getRightActuatorAssignment_8_3_1() { return cRightActuatorAssignment_8_3_1; }
		
		//ActuatorTransmission
		public RuleCall getRightActuatorActuatorTransmissionParserRuleCall_8_3_1_0() { return cRightActuatorActuatorTransmissionParserRuleCall_8_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_8_4() { return cRightCurlyBracketKeyword_8_4; }
		
		//('flexJoint' '{' flexJoint+=ActuatorTransmission ( "," flexJoint+=ActuatorTransmission)* '}' )?
		public Group getGroup_9() { return cGroup_9; }
		
		//'flexJoint'
		public Keyword getFlexJointKeyword_9_0() { return cFlexJointKeyword_9_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_9_1() { return cLeftCurlyBracketKeyword_9_1; }
		
		//flexJoint+=ActuatorTransmission
		public Assignment getFlexJointAssignment_9_2() { return cFlexJointAssignment_9_2; }
		
		//ActuatorTransmission
		public RuleCall getFlexJointActuatorTransmissionParserRuleCall_9_2_0() { return cFlexJointActuatorTransmissionParserRuleCall_9_2_0; }
		
		//( "," flexJoint+=ActuatorTransmission)*
		public Group getGroup_9_3() { return cGroup_9_3; }
		
		//","
		public Keyword getCommaKeyword_9_3_0() { return cCommaKeyword_9_3_0; }
		
		//flexJoint+=ActuatorTransmission
		public Assignment getFlexJointAssignment_9_3_1() { return cFlexJointAssignment_9_3_1; }
		
		//ActuatorTransmission
		public RuleCall getFlexJointActuatorTransmissionParserRuleCall_9_3_1_0() { return cFlexJointActuatorTransmissionParserRuleCall_9_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_9_4() { return cRightCurlyBracketKeyword_9_4; }
		
		//('rollJoint' '{' rollJoint+=ActuatorTransmission ( "," rollJoint+=ActuatorTransmission)* '}' )?
		public Group getGroup_10() { return cGroup_10; }
		
		//'rollJoint'
		public Keyword getRollJointKeyword_10_0() { return cRollJointKeyword_10_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_10_1() { return cLeftCurlyBracketKeyword_10_1; }
		
		//rollJoint+=ActuatorTransmission
		public Assignment getRollJointAssignment_10_2() { return cRollJointAssignment_10_2; }
		
		//ActuatorTransmission
		public RuleCall getRollJointActuatorTransmissionParserRuleCall_10_2_0() { return cRollJointActuatorTransmissionParserRuleCall_10_2_0; }
		
		//( "," rollJoint+=ActuatorTransmission)*
		public Group getGroup_10_3() { return cGroup_10_3; }
		
		//","
		public Keyword getCommaKeyword_10_3_0() { return cCommaKeyword_10_3_0; }
		
		//rollJoint+=ActuatorTransmission
		public Assignment getRollJointAssignment_10_3_1() { return cRollJointAssignment_10_3_1; }
		
		//ActuatorTransmission
		public RuleCall getRollJointActuatorTransmissionParserRuleCall_10_3_1_0() { return cRollJointActuatorTransmissionParserRuleCall_10_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_10_4() { return cRightCurlyBracketKeyword_10_4; }
		
		//('gapJoint' '{' gapJoint+=GapJointTransmission ( "," gapJoint+=GapJointTransmission)* '}' )?
		public Group getGroup_11() { return cGroup_11; }
		
		//'gapJoint'
		public Keyword getGapJointKeyword_11_0() { return cGapJointKeyword_11_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_11_1() { return cLeftCurlyBracketKeyword_11_1; }
		
		//gapJoint+=GapJointTransmission
		public Assignment getGapJointAssignment_11_2() { return cGapJointAssignment_11_2; }
		
		//GapJointTransmission
		public RuleCall getGapJointGapJointTransmissionParserRuleCall_11_2_0() { return cGapJointGapJointTransmissionParserRuleCall_11_2_0; }
		
		//( "," gapJoint+=GapJointTransmission)*
		public Group getGroup_11_3() { return cGroup_11_3; }
		
		//","
		public Keyword getCommaKeyword_11_3_0() { return cCommaKeyword_11_3_0; }
		
		//gapJoint+=GapJointTransmission
		public Assignment getGapJointAssignment_11_3_1() { return cGapJointAssignment_11_3_1; }
		
		//GapJointTransmission
		public RuleCall getGapJointGapJointTransmissionParserRuleCall_11_3_1_0() { return cGapJointGapJointTransmissionParserRuleCall_11_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_11_4() { return cRightCurlyBracketKeyword_11_4; }
		
		//('passiveJoint' '{' passiveJoint+=PassiveJointTransmission ( "," passiveJoint+=PassiveJointTransmission)* '}' )?
		public Group getGroup_12() { return cGroup_12; }
		
		//'passiveJoint'
		public Keyword getPassiveJointKeyword_12_0() { return cPassiveJointKeyword_12_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_12_1() { return cLeftCurlyBracketKeyword_12_1; }
		
		//passiveJoint+=PassiveJointTransmission
		public Assignment getPassiveJointAssignment_12_2() { return cPassiveJointAssignment_12_2; }
		
		//PassiveJointTransmission
		public RuleCall getPassiveJointPassiveJointTransmissionParserRuleCall_12_2_0() { return cPassiveJointPassiveJointTransmissionParserRuleCall_12_2_0; }
		
		//( "," passiveJoint+=PassiveJointTransmission)*
		public Group getGroup_12_3() { return cGroup_12_3; }
		
		//","
		public Keyword getCommaKeyword_12_3_0() { return cCommaKeyword_12_3_0; }
		
		//passiveJoint+=PassiveJointTransmission
		public Assignment getPassiveJointAssignment_12_3_1() { return cPassiveJointAssignment_12_3_1; }
		
		//PassiveJointTransmission
		public RuleCall getPassiveJointPassiveJointTransmissionParserRuleCall_12_3_1_0() { return cPassiveJointPassiveJointTransmissionParserRuleCall_12_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_12_4() { return cRightCurlyBracketKeyword_12_4; }
		
		//('useSimulatedGripperJoint' '{' useSimulatedGripperJoint+=UseSimulatedGripperJointType ( "," useSimulatedGripperJoint+=UseSimulatedGripperJointType)* '}' )?
		public Group getGroup_13() { return cGroup_13; }
		
		//'useSimulatedGripperJoint'
		public Keyword getUseSimulatedGripperJointKeyword_13_0() { return cUseSimulatedGripperJointKeyword_13_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_13_1() { return cLeftCurlyBracketKeyword_13_1; }
		
		//useSimulatedGripperJoint+=UseSimulatedGripperJointType
		public Assignment getUseSimulatedGripperJointAssignment_13_2() { return cUseSimulatedGripperJointAssignment_13_2; }
		
		//UseSimulatedGripperJointType
		public RuleCall getUseSimulatedGripperJointUseSimulatedGripperJointTypeParserRuleCall_13_2_0() { return cUseSimulatedGripperJointUseSimulatedGripperJointTypeParserRuleCall_13_2_0; }
		
		//( "," useSimulatedGripperJoint+=UseSimulatedGripperJointType)*
		public Group getGroup_13_3() { return cGroup_13_3; }
		
		//","
		public Keyword getCommaKeyword_13_3_0() { return cCommaKeyword_13_3_0; }
		
		//useSimulatedGripperJoint+=UseSimulatedGripperJointType
		public Assignment getUseSimulatedGripperJointAssignment_13_3_1() { return cUseSimulatedGripperJointAssignment_13_3_1; }
		
		//UseSimulatedGripperJointType
		public RuleCall getUseSimulatedGripperJointUseSimulatedGripperJointTypeParserRuleCall_13_3_1_0() { return cUseSimulatedGripperJointUseSimulatedGripperJointTypeParserRuleCall_13_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_13_4() { return cRightCurlyBracketKeyword_13_4; }
		
		//('actuator' '{' actuator+=Name ( "," actuator+=Name)* '}' )?
		public Group getGroup_14() { return cGroup_14; }
		
		//'actuator'
		public Keyword getActuatorKeyword_14_0() { return cActuatorKeyword_14_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_14_1() { return cLeftCurlyBracketKeyword_14_1; }
		
		//actuator+=Name
		public Assignment getActuatorAssignment_14_2() { return cActuatorAssignment_14_2; }
		
		//Name
		public RuleCall getActuatorNameParserRuleCall_14_2_0() { return cActuatorNameParserRuleCall_14_2_0; }
		
		//( "," actuator+=Name)*
		public Group getGroup_14_3() { return cGroup_14_3; }
		
		//","
		public Keyword getCommaKeyword_14_3_0() { return cCommaKeyword_14_3_0; }
		
		//actuator+=Name
		public Assignment getActuatorAssignment_14_3_1() { return cActuatorAssignment_14_3_1; }
		
		//Name
		public RuleCall getActuatorNameParserRuleCall_14_3_1_0() { return cActuatorNameParserRuleCall_14_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_14_4() { return cRightCurlyBracketKeyword_14_4; }
		
		//('joint' '{' joint+=Name ( "," joint+=Name)* '}' )?
		public Group getGroup_15() { return cGroup_15; }
		
		//'joint'
		public Keyword getJointKeyword_15_0() { return cJointKeyword_15_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_15_1() { return cLeftCurlyBracketKeyword_15_1; }
		
		//joint+=Name
		public Assignment getJointAssignment_15_2() { return cJointAssignment_15_2; }
		
		//Name
		public RuleCall getJointNameParserRuleCall_15_2_0() { return cJointNameParserRuleCall_15_2_0; }
		
		//( "," joint+=Name)*
		public Group getGroup_15_3() { return cGroup_15_3; }
		
		//","
		public Keyword getCommaKeyword_15_3_0() { return cCommaKeyword_15_3_0; }
		
		//joint+=Name
		public Assignment getJointAssignment_15_3_1() { return cJointAssignment_15_3_1; }
		
		//Name
		public RuleCall getJointNameParserRuleCall_15_3_1_0() { return cJointNameParserRuleCall_15_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_15_4() { return cRightCurlyBracketKeyword_15_4; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_16() { return cRightCurlyBracketKeyword_16; }
	}
	public class PoseElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.fraunhofer.ipa.kinematics.xacro.Xacro.Pose");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cPoseAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cPoseKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cRpyKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cRpyAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cRpyEStringParserRuleCall_3_1_0 = (RuleCall)cRpyAssignment_3_1.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cXyzKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cXyzAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cXyzEStringParserRuleCall_4_1_0 = (RuleCall)cXyzAssignment_4_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//Pose returns urdf::Pose:
		//    {urdf::Pose}
		//    'Pose'
		//    '{'
		//        ('rpy' rpy=EString)?
		//        ('xyz' xyz=EString)?
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//{urdf::Pose}
		//'Pose'
		//'{'
		//    ('rpy' rpy=EString)?
		//    ('xyz' xyz=EString)?
		//'}'
		public Group getGroup() { return cGroup; }
		
		//{urdf::Pose}
		public Action getPoseAction_0() { return cPoseAction_0; }
		
		//'Pose'
		public Keyword getPoseKeyword_1() { return cPoseKeyword_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//('rpy' rpy=EString)?
		public Group getGroup_3() { return cGroup_3; }
		
		//'rpy'
		public Keyword getRpyKeyword_3_0() { return cRpyKeyword_3_0; }
		
		//rpy=EString
		public Assignment getRpyAssignment_3_1() { return cRpyAssignment_3_1; }
		
		//EString
		public RuleCall getRpyEStringParserRuleCall_3_1_0() { return cRpyEStringParserRuleCall_3_1_0; }
		
		//('xyz' xyz=EString)?
		public Group getGroup_4() { return cGroup_4; }
		
		//'xyz'
		public Keyword getXyzKeyword_4_0() { return cXyzKeyword_4_0; }
		
		//xyz=EString
		public Assignment getXyzAssignment_4_1() { return cXyzAssignment_4_1; }
		
		//EString
		public RuleCall getXyzEStringParserRuleCall_4_1_0() { return cXyzEStringParserRuleCall_4_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}
	public class AxisElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.fraunhofer.ipa.kinematics.xacro.Xacro.Axis");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cAxisAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cAxisKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cXyzKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cXyzAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cXyzEStringParserRuleCall_3_1_0 = (RuleCall)cXyzAssignment_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//Axis returns urdf::Axis:
		//    {urdf::Axis}
		//    'Axis'
		//    '{'
		//        ('xyz' xyz=EString)?
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//{urdf::Axis}
		//'Axis'
		//'{'
		//    ('xyz' xyz=EString)?
		//'}'
		public Group getGroup() { return cGroup; }
		
		//{urdf::Axis}
		public Action getAxisAction_0() { return cAxisAction_0; }
		
		//'Axis'
		public Keyword getAxisKeyword_1() { return cAxisKeyword_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//('xyz' xyz=EString)?
		public Group getGroup_3() { return cGroup_3; }
		
		//'xyz'
		public Keyword getXyzKeyword_3_0() { return cXyzKeyword_3_0; }
		
		//xyz=EString
		public Assignment getXyzAssignment_3_1() { return cXyzAssignment_3_1; }
		
		//EString
		public RuleCall getXyzEStringParserRuleCall_3_1_0() { return cXyzEStringParserRuleCall_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}
	public class CalibrationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.fraunhofer.ipa.kinematics.xacro.Xacro.Calibration");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cCalibrationAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cCalibrationKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cFallingKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cFallingAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cFallingDouble0ParserRuleCall_3_1_0 = (RuleCall)cFallingAssignment_3_1.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cReferencePositionKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cReferencePositionAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cReferencePositionDouble0ParserRuleCall_4_1_0 = (RuleCall)cReferencePositionAssignment_4_1.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cRisingKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cRisingAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cRisingDouble0ParserRuleCall_5_1_0 = (RuleCall)cRisingAssignment_5_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//Calibration returns urdf::Calibration:
		//    {urdf::Calibration}
		//    'Calibration'
		//    '{'
		//        ('falling' falling=Double0)?
		//        ('referencePosition' referencePosition=Double0)?
		//        ('rising' rising=Double0)?
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//{urdf::Calibration}
		//'Calibration'
		//'{'
		//    ('falling' falling=Double0)?
		//    ('referencePosition' referencePosition=Double0)?
		//    ('rising' rising=Double0)?
		//'}'
		public Group getGroup() { return cGroup; }
		
		//{urdf::Calibration}
		public Action getCalibrationAction_0() { return cCalibrationAction_0; }
		
		//'Calibration'
		public Keyword getCalibrationKeyword_1() { return cCalibrationKeyword_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//('falling' falling=Double0)?
		public Group getGroup_3() { return cGroup_3; }
		
		//'falling'
		public Keyword getFallingKeyword_3_0() { return cFallingKeyword_3_0; }
		
		//falling=Double0
		public Assignment getFallingAssignment_3_1() { return cFallingAssignment_3_1; }
		
		//Double0
		public RuleCall getFallingDouble0ParserRuleCall_3_1_0() { return cFallingDouble0ParserRuleCall_3_1_0; }
		
		//('referencePosition' referencePosition=Double0)?
		public Group getGroup_4() { return cGroup_4; }
		
		//'referencePosition'
		public Keyword getReferencePositionKeyword_4_0() { return cReferencePositionKeyword_4_0; }
		
		//referencePosition=Double0
		public Assignment getReferencePositionAssignment_4_1() { return cReferencePositionAssignment_4_1; }
		
		//Double0
		public RuleCall getReferencePositionDouble0ParserRuleCall_4_1_0() { return cReferencePositionDouble0ParserRuleCall_4_1_0; }
		
		//('rising' rising=Double0)?
		public Group getGroup_5() { return cGroup_5; }
		
		//'rising'
		public Keyword getRisingKeyword_5_0() { return cRisingKeyword_5_0; }
		
		//rising=Double0
		public Assignment getRisingAssignment_5_1() { return cRisingAssignment_5_1; }
		
		//Double0
		public RuleCall getRisingDouble0ParserRuleCall_5_1_0() { return cRisingDouble0ParserRuleCall_5_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_6() { return cRightCurlyBracketKeyword_6; }
	}
	public class DynamicsElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.fraunhofer.ipa.kinematics.xacro.Xacro.Dynamics");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cDynamicsAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cDynamicsKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cDampingKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cDampingAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cDampingDouble0ParserRuleCall_3_1_0 = (RuleCall)cDampingAssignment_3_1.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cFrictionKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cFrictionAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cFrictionDouble0ParserRuleCall_4_1_0 = (RuleCall)cFrictionAssignment_4_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//Dynamics returns urdf::Dynamics:
		//    {urdf::Dynamics}
		//    'Dynamics'
		//    '{'
		//        ('damping' damping=Double0)?
		//        ('friction' friction=Double0)?
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//{urdf::Dynamics}
		//'Dynamics'
		//'{'
		//    ('damping' damping=Double0)?
		//    ('friction' friction=Double0)?
		//'}'
		public Group getGroup() { return cGroup; }
		
		//{urdf::Dynamics}
		public Action getDynamicsAction_0() { return cDynamicsAction_0; }
		
		//'Dynamics'
		public Keyword getDynamicsKeyword_1() { return cDynamicsKeyword_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//('damping' damping=Double0)?
		public Group getGroup_3() { return cGroup_3; }
		
		//'damping'
		public Keyword getDampingKeyword_3_0() { return cDampingKeyword_3_0; }
		
		//damping=Double0
		public Assignment getDampingAssignment_3_1() { return cDampingAssignment_3_1; }
		
		//Double0
		public RuleCall getDampingDouble0ParserRuleCall_3_1_0() { return cDampingDouble0ParserRuleCall_3_1_0; }
		
		//('friction' friction=Double0)?
		public Group getGroup_4() { return cGroup_4; }
		
		//'friction'
		public Keyword getFrictionKeyword_4_0() { return cFrictionKeyword_4_0; }
		
		//friction=Double0
		public Assignment getFrictionAssignment_4_1() { return cFrictionAssignment_4_1; }
		
		//Double0
		public RuleCall getFrictionDouble0ParserRuleCall_4_1_0() { return cFrictionDouble0ParserRuleCall_4_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}
	public class LimitElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.fraunhofer.ipa.kinematics.xacro.Xacro.Limit");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cLimitAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cLimitKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cEffortKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cEffortAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cEffortDouble0ParserRuleCall_3_1_0 = (RuleCall)cEffortAssignment_3_1.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cLowerKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cLowerAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cLowerDouble0ParserRuleCall_4_1_0 = (RuleCall)cLowerAssignment_4_1.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cUpperKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cUpperAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cUpperDouble0ParserRuleCall_5_1_0 = (RuleCall)cUpperAssignment_5_1.eContents().get(0);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cVelocityKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Assignment cVelocityAssignment_6_1 = (Assignment)cGroup_6.eContents().get(1);
		private final RuleCall cVelocityDouble0ParserRuleCall_6_1_0 = (RuleCall)cVelocityAssignment_6_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_7 = (Keyword)cGroup.eContents().get(7);
		
		//Limit returns urdf::Limit:
		//    {urdf::Limit}
		//    'Limit'
		//    '{'
		//        ('effort' effort=Double0)?
		//        ('lower' lower=Double0)?
		//        ('upper' upper=Double0)?
		//        ('velocity' velocity=Double0)?
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//{urdf::Limit}
		//'Limit'
		//'{'
		//    ('effort' effort=Double0)?
		//    ('lower' lower=Double0)?
		//    ('upper' upper=Double0)?
		//    ('velocity' velocity=Double0)?
		//'}'
		public Group getGroup() { return cGroup; }
		
		//{urdf::Limit}
		public Action getLimitAction_0() { return cLimitAction_0; }
		
		//'Limit'
		public Keyword getLimitKeyword_1() { return cLimitKeyword_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//('effort' effort=Double0)?
		public Group getGroup_3() { return cGroup_3; }
		
		//'effort'
		public Keyword getEffortKeyword_3_0() { return cEffortKeyword_3_0; }
		
		//effort=Double0
		public Assignment getEffortAssignment_3_1() { return cEffortAssignment_3_1; }
		
		//Double0
		public RuleCall getEffortDouble0ParserRuleCall_3_1_0() { return cEffortDouble0ParserRuleCall_3_1_0; }
		
		//('lower' lower=Double0)?
		public Group getGroup_4() { return cGroup_4; }
		
		//'lower'
		public Keyword getLowerKeyword_4_0() { return cLowerKeyword_4_0; }
		
		//lower=Double0
		public Assignment getLowerAssignment_4_1() { return cLowerAssignment_4_1; }
		
		//Double0
		public RuleCall getLowerDouble0ParserRuleCall_4_1_0() { return cLowerDouble0ParserRuleCall_4_1_0; }
		
		//('upper' upper=Double0)?
		public Group getGroup_5() { return cGroup_5; }
		
		//'upper'
		public Keyword getUpperKeyword_5_0() { return cUpperKeyword_5_0; }
		
		//upper=Double0
		public Assignment getUpperAssignment_5_1() { return cUpperAssignment_5_1; }
		
		//Double0
		public RuleCall getUpperDouble0ParserRuleCall_5_1_0() { return cUpperDouble0ParserRuleCall_5_1_0; }
		
		//('velocity' velocity=Double0)?
		public Group getGroup_6() { return cGroup_6; }
		
		//'velocity'
		public Keyword getVelocityKeyword_6_0() { return cVelocityKeyword_6_0; }
		
		//velocity=Double0
		public Assignment getVelocityAssignment_6_1() { return cVelocityAssignment_6_1; }
		
		//Double0
		public RuleCall getVelocityDouble0ParserRuleCall_6_1_0() { return cVelocityDouble0ParserRuleCall_6_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_7() { return cRightCurlyBracketKeyword_7; }
	}
	public class SafetyControllerElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.fraunhofer.ipa.kinematics.xacro.Xacro.SafetyController");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cSafetyControllerKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cKPositionKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cKPositionAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cKPositionDouble0ParserRuleCall_2_1_0 = (RuleCall)cKPositionAssignment_2_1.eContents().get(0);
		private final Keyword cKVelocityKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cKVelocityAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cKVelocityDouble0ParserRuleCall_4_0 = (RuleCall)cKVelocityAssignment_4.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cSoftLowerLimitKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cSoftLowerLimitAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cSoftLowerLimitDouble0ParserRuleCall_5_1_0 = (RuleCall)cSoftLowerLimitAssignment_5_1.eContents().get(0);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cSoftUpperLimitKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Assignment cSoftUpperLimitAssignment_6_1 = (Assignment)cGroup_6.eContents().get(1);
		private final RuleCall cSoftUpperLimitDouble0ParserRuleCall_6_1_0 = (RuleCall)cSoftUpperLimitAssignment_6_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_7 = (Keyword)cGroup.eContents().get(7);
		
		//SafetyController returns urdf::SafetyController:
		//    'SafetyController'
		//    '{'
		//        ('kPosition' kPosition=Double0)?
		//        'kVelocity' kVelocity=Double0
		//        ('softLowerLimit' softLowerLimit=Double0)?
		//        ('softUpperLimit' softUpperLimit=Double0)?
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//'SafetyController'
		//'{'
		//    ('kPosition' kPosition=Double0)?
		//    'kVelocity' kVelocity=Double0
		//    ('softLowerLimit' softLowerLimit=Double0)?
		//    ('softUpperLimit' softUpperLimit=Double0)?
		//'}'
		public Group getGroup() { return cGroup; }
		
		//'SafetyController'
		public Keyword getSafetyControllerKeyword_0() { return cSafetyControllerKeyword_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }
		
		//('kPosition' kPosition=Double0)?
		public Group getGroup_2() { return cGroup_2; }
		
		//'kPosition'
		public Keyword getKPositionKeyword_2_0() { return cKPositionKeyword_2_0; }
		
		//kPosition=Double0
		public Assignment getKPositionAssignment_2_1() { return cKPositionAssignment_2_1; }
		
		//Double0
		public RuleCall getKPositionDouble0ParserRuleCall_2_1_0() { return cKPositionDouble0ParserRuleCall_2_1_0; }
		
		//'kVelocity'
		public Keyword getKVelocityKeyword_3() { return cKVelocityKeyword_3; }
		
		//kVelocity=Double0
		public Assignment getKVelocityAssignment_4() { return cKVelocityAssignment_4; }
		
		//Double0
		public RuleCall getKVelocityDouble0ParserRuleCall_4_0() { return cKVelocityDouble0ParserRuleCall_4_0; }
		
		//('softLowerLimit' softLowerLimit=Double0)?
		public Group getGroup_5() { return cGroup_5; }
		
		//'softLowerLimit'
		public Keyword getSoftLowerLimitKeyword_5_0() { return cSoftLowerLimitKeyword_5_0; }
		
		//softLowerLimit=Double0
		public Assignment getSoftLowerLimitAssignment_5_1() { return cSoftLowerLimitAssignment_5_1; }
		
		//Double0
		public RuleCall getSoftLowerLimitDouble0ParserRuleCall_5_1_0() { return cSoftLowerLimitDouble0ParserRuleCall_5_1_0; }
		
		//('softUpperLimit' softUpperLimit=Double0)?
		public Group getGroup_6() { return cGroup_6; }
		
		//'softUpperLimit'
		public Keyword getSoftUpperLimitKeyword_6_0() { return cSoftUpperLimitKeyword_6_0; }
		
		//softUpperLimit=Double0
		public Assignment getSoftUpperLimitAssignment_6_1() { return cSoftUpperLimitAssignment_6_1; }
		
		//Double0
		public RuleCall getSoftUpperLimitDouble0ParserRuleCall_6_1_0() { return cSoftUpperLimitDouble0ParserRuleCall_6_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_7() { return cRightCurlyBracketKeyword_7; }
	}
	public class MimicElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.fraunhofer.ipa.kinematics.xacro.Xacro.Mimic");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cMimicKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cJointKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cJointAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cJointEStringParserRuleCall_3_0 = (RuleCall)cJointAssignment_3.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cMultiplierKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cMultiplierAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cMultiplierDouble0ParserRuleCall_4_1_0 = (RuleCall)cMultiplierAssignment_4_1.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cOffsetKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cOffsetAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cOffsetDouble0ParserRuleCall_5_1_0 = (RuleCall)cOffsetAssignment_5_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//Mimic returns urdf::Mimic:
		//    'Mimic'
		//    '{'
		//        'joint' joint=EString
		//        ('multiplier' multiplier=Double0)?
		//        ('offset' offset=Double0)?
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//'Mimic'
		//'{'
		//    'joint' joint=EString
		//    ('multiplier' multiplier=Double0)?
		//    ('offset' offset=Double0)?
		//'}'
		public Group getGroup() { return cGroup; }
		
		//'Mimic'
		public Keyword getMimicKeyword_0() { return cMimicKeyword_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }
		
		//'joint'
		public Keyword getJointKeyword_2() { return cJointKeyword_2; }
		
		//joint=EString
		public Assignment getJointAssignment_3() { return cJointAssignment_3; }
		
		//EString
		public RuleCall getJointEStringParserRuleCall_3_0() { return cJointEStringParserRuleCall_3_0; }
		
		//('multiplier' multiplier=Double0)?
		public Group getGroup_4() { return cGroup_4; }
		
		//'multiplier'
		public Keyword getMultiplierKeyword_4_0() { return cMultiplierKeyword_4_0; }
		
		//multiplier=Double0
		public Assignment getMultiplierAssignment_4_1() { return cMultiplierAssignment_4_1; }
		
		//Double0
		public RuleCall getMultiplierDouble0ParserRuleCall_4_1_0() { return cMultiplierDouble0ParserRuleCall_4_1_0; }
		
		//('offset' offset=Double0)?
		public Group getGroup_5() { return cGroup_5; }
		
		//'offset'
		public Keyword getOffsetKeyword_5_0() { return cOffsetKeyword_5_0; }
		
		//offset=Double0
		public Assignment getOffsetAssignment_5_1() { return cOffsetAssignment_5_1; }
		
		//Double0
		public RuleCall getOffsetDouble0ParserRuleCall_5_1_0() { return cOffsetDouble0ParserRuleCall_5_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_6() { return cRightCurlyBracketKeyword_6; }
	}
	public class InertialElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.fraunhofer.ipa.kinematics.xacro.Xacro.Inertial");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cInertialAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cInertialKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cOriginKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cOriginAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cOriginPoseParserRuleCall_3_1_0 = (RuleCall)cOriginAssignment_3_1.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cMassKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cMassAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cMassMassParserRuleCall_4_1_0 = (RuleCall)cMassAssignment_4_1.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cInertiaKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cInertiaAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cInertiaInertiaParserRuleCall_5_1_0 = (RuleCall)cInertiaAssignment_5_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//Inertial returns urdf::Inertial:
		//    {urdf::Inertial}
		//    'Inertial'
		//    '{'
		//        ('origin' origin=Pose)?
		//        ('mass' mass=Mass)?
		//        ('inertia' inertia=Inertia)?
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//{urdf::Inertial}
		//'Inertial'
		//'{'
		//    ('origin' origin=Pose)?
		//    ('mass' mass=Mass)?
		//    ('inertia' inertia=Inertia)?
		//'}'
		public Group getGroup() { return cGroup; }
		
		//{urdf::Inertial}
		public Action getInertialAction_0() { return cInertialAction_0; }
		
		//'Inertial'
		public Keyword getInertialKeyword_1() { return cInertialKeyword_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//('origin' origin=Pose)?
		public Group getGroup_3() { return cGroup_3; }
		
		//'origin'
		public Keyword getOriginKeyword_3_0() { return cOriginKeyword_3_0; }
		
		//origin=Pose
		public Assignment getOriginAssignment_3_1() { return cOriginAssignment_3_1; }
		
		//Pose
		public RuleCall getOriginPoseParserRuleCall_3_1_0() { return cOriginPoseParserRuleCall_3_1_0; }
		
		//('mass' mass=Mass)?
		public Group getGroup_4() { return cGroup_4; }
		
		//'mass'
		public Keyword getMassKeyword_4_0() { return cMassKeyword_4_0; }
		
		//mass=Mass
		public Assignment getMassAssignment_4_1() { return cMassAssignment_4_1; }
		
		//Mass
		public RuleCall getMassMassParserRuleCall_4_1_0() { return cMassMassParserRuleCall_4_1_0; }
		
		//('inertia' inertia=Inertia)?
		public Group getGroup_5() { return cGroup_5; }
		
		//'inertia'
		public Keyword getInertiaKeyword_5_0() { return cInertiaKeyword_5_0; }
		
		//inertia=Inertia
		public Assignment getInertiaAssignment_5_1() { return cInertiaAssignment_5_1; }
		
		//Inertia
		public RuleCall getInertiaInertiaParserRuleCall_5_1_0() { return cInertiaInertiaParserRuleCall_5_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_6() { return cRightCurlyBracketKeyword_6; }
	}
	public class VisualElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.fraunhofer.ipa.kinematics.xacro.Xacro.Visual");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cVisualKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cOriginKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cOriginAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cOriginPoseParserRuleCall_2_1_0 = (RuleCall)cOriginAssignment_2_1.eContents().get(0);
		private final Keyword cGeometryKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cGeometryAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cGeometryGeometryParserRuleCall_4_0 = (RuleCall)cGeometryAssignment_4.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cMaterialKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cMaterialAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cMaterialMaterialParserRuleCall_5_1_0 = (RuleCall)cMaterialAssignment_5_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//Visual returns urdf::Visual:
		//    'Visual'
		//    '{'
		//        ('origin' origin=Pose)?
		//        'geometry' geometry=Geometry
		//        ('material' material=Material)?
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//'Visual'
		//'{'
		//    ('origin' origin=Pose)?
		//    'geometry' geometry=Geometry
		//    ('material' material=Material)?
		//'}'
		public Group getGroup() { return cGroup; }
		
		//'Visual'
		public Keyword getVisualKeyword_0() { return cVisualKeyword_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }
		
		//('origin' origin=Pose)?
		public Group getGroup_2() { return cGroup_2; }
		
		//'origin'
		public Keyword getOriginKeyword_2_0() { return cOriginKeyword_2_0; }
		
		//origin=Pose
		public Assignment getOriginAssignment_2_1() { return cOriginAssignment_2_1; }
		
		//Pose
		public RuleCall getOriginPoseParserRuleCall_2_1_0() { return cOriginPoseParserRuleCall_2_1_0; }
		
		//'geometry'
		public Keyword getGeometryKeyword_3() { return cGeometryKeyword_3; }
		
		//geometry=Geometry
		public Assignment getGeometryAssignment_4() { return cGeometryAssignment_4; }
		
		//Geometry
		public RuleCall getGeometryGeometryParserRuleCall_4_0() { return cGeometryGeometryParserRuleCall_4_0; }
		
		//('material' material=Material)?
		public Group getGroup_5() { return cGroup_5; }
		
		//'material'
		public Keyword getMaterialKeyword_5_0() { return cMaterialKeyword_5_0; }
		
		//material=Material
		public Assignment getMaterialAssignment_5_1() { return cMaterialAssignment_5_1; }
		
		//Material
		public RuleCall getMaterialMaterialParserRuleCall_5_1_0() { return cMaterialMaterialParserRuleCall_5_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_6() { return cRightCurlyBracketKeyword_6; }
	}
	public class CollisionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.fraunhofer.ipa.kinematics.xacro.Xacro.Collision");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cCollisionKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cNameKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cNameAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cNameEStringParserRuleCall_2_1_0 = (RuleCall)cNameAssignment_2_1.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cOriginKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cOriginAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cOriginPoseParserRuleCall_3_1_0 = (RuleCall)cOriginAssignment_3_1.eContents().get(0);
		private final Keyword cGeometryKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cGeometryAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cGeometryGeometryParserRuleCall_5_0 = (RuleCall)cGeometryAssignment_5.eContents().get(0);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cVerboseKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Assignment cVerboseAssignment_6_1 = (Assignment)cGroup_6.eContents().get(1);
		private final RuleCall cVerboseVerboseParserRuleCall_6_1_0 = (RuleCall)cVerboseAssignment_6_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_7 = (Keyword)cGroup.eContents().get(7);
		
		//Collision returns urdf::Collision:
		//    'Collision'
		//    '{'
		//        ('name' name=EString)?
		//        ('origin' origin=Pose)?
		//        'geometry' geometry=Geometry
		//        ('verbose' verbose=Verbose)?
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//'Collision'
		//'{'
		//    ('name' name=EString)?
		//    ('origin' origin=Pose)?
		//    'geometry' geometry=Geometry
		//    ('verbose' verbose=Verbose)?
		//'}'
		public Group getGroup() { return cGroup; }
		
		//'Collision'
		public Keyword getCollisionKeyword_0() { return cCollisionKeyword_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }
		
		//('name' name=EString)?
		public Group getGroup_2() { return cGroup_2; }
		
		//'name'
		public Keyword getNameKeyword_2_0() { return cNameKeyword_2_0; }
		
		//name=EString
		public Assignment getNameAssignment_2_1() { return cNameAssignment_2_1; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_2_1_0() { return cNameEStringParserRuleCall_2_1_0; }
		
		//('origin' origin=Pose)?
		public Group getGroup_3() { return cGroup_3; }
		
		//'origin'
		public Keyword getOriginKeyword_3_0() { return cOriginKeyword_3_0; }
		
		//origin=Pose
		public Assignment getOriginAssignment_3_1() { return cOriginAssignment_3_1; }
		
		//Pose
		public RuleCall getOriginPoseParserRuleCall_3_1_0() { return cOriginPoseParserRuleCall_3_1_0; }
		
		//'geometry'
		public Keyword getGeometryKeyword_4() { return cGeometryKeyword_4; }
		
		//geometry=Geometry
		public Assignment getGeometryAssignment_5() { return cGeometryAssignment_5; }
		
		//Geometry
		public RuleCall getGeometryGeometryParserRuleCall_5_0() { return cGeometryGeometryParserRuleCall_5_0; }
		
		//('verbose' verbose=Verbose)?
		public Group getGroup_6() { return cGroup_6; }
		
		//'verbose'
		public Keyword getVerboseKeyword_6_0() { return cVerboseKeyword_6_0; }
		
		//verbose=Verbose
		public Assignment getVerboseAssignment_6_1() { return cVerboseAssignment_6_1; }
		
		//Verbose
		public RuleCall getVerboseVerboseParserRuleCall_6_1_0() { return cVerboseVerboseParserRuleCall_6_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_7() { return cRightCurlyBracketKeyword_7; }
	}
	public class MassElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.fraunhofer.ipa.kinematics.xacro.Xacro.Mass");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cMassAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cMassKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cValueKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cValueAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cValueDouble0ParserRuleCall_3_1_0 = (RuleCall)cValueAssignment_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//Mass returns urdf::Mass:
		//    {urdf::Mass}
		//    'Mass'
		//    '{'
		//        ('value' value=Double0)?
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//{urdf::Mass}
		//'Mass'
		//'{'
		//    ('value' value=Double0)?
		//'}'
		public Group getGroup() { return cGroup; }
		
		//{urdf::Mass}
		public Action getMassAction_0() { return cMassAction_0; }
		
		//'Mass'
		public Keyword getMassKeyword_1() { return cMassKeyword_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//('value' value=Double0)?
		public Group getGroup_3() { return cGroup_3; }
		
		//'value'
		public Keyword getValueKeyword_3_0() { return cValueKeyword_3_0; }
		
		//value=Double0
		public Assignment getValueAssignment_3_1() { return cValueAssignment_3_1; }
		
		//Double0
		public RuleCall getValueDouble0ParserRuleCall_3_1_0() { return cValueDouble0ParserRuleCall_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}
	public class InertiaElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.fraunhofer.ipa.kinematics.xacro.Xacro.Inertia");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cInertiaAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cInertiaKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cIxxKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cIxxAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cIxxDouble0ParserRuleCall_3_1_0 = (RuleCall)cIxxAssignment_3_1.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cIxyKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cIxyAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cIxyDouble0ParserRuleCall_4_1_0 = (RuleCall)cIxyAssignment_4_1.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cIxzKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cIxzAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cIxzDouble0ParserRuleCall_5_1_0 = (RuleCall)cIxzAssignment_5_1.eContents().get(0);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cIyyKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Assignment cIyyAssignment_6_1 = (Assignment)cGroup_6.eContents().get(1);
		private final RuleCall cIyyDouble0ParserRuleCall_6_1_0 = (RuleCall)cIyyAssignment_6_1.eContents().get(0);
		private final Group cGroup_7 = (Group)cGroup.eContents().get(7);
		private final Keyword cIyzKeyword_7_0 = (Keyword)cGroup_7.eContents().get(0);
		private final Assignment cIyzAssignment_7_1 = (Assignment)cGroup_7.eContents().get(1);
		private final RuleCall cIyzDouble0ParserRuleCall_7_1_0 = (RuleCall)cIyzAssignment_7_1.eContents().get(0);
		private final Group cGroup_8 = (Group)cGroup.eContents().get(8);
		private final Keyword cIzzKeyword_8_0 = (Keyword)cGroup_8.eContents().get(0);
		private final Assignment cIzzAssignment_8_1 = (Assignment)cGroup_8.eContents().get(1);
		private final RuleCall cIzzDouble0ParserRuleCall_8_1_0 = (RuleCall)cIzzAssignment_8_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_9 = (Keyword)cGroup.eContents().get(9);
		
		//Inertia returns urdf::Inertia:
		//    {urdf::Inertia}
		//    'Inertia'
		//    '{'
		//        ('ixx' ixx=Double0)?
		//        ('ixy' ixy=Double0)?
		//        ('ixz' ixz=Double0)?
		//        ('iyy' iyy=Double0)?
		//        ('iyz' iyz=Double0)?
		//        ('izz' izz=Double0)?
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//{urdf::Inertia}
		//'Inertia'
		//'{'
		//    ('ixx' ixx=Double0)?
		//    ('ixy' ixy=Double0)?
		//    ('ixz' ixz=Double0)?
		//    ('iyy' iyy=Double0)?
		//    ('iyz' iyz=Double0)?
		//    ('izz' izz=Double0)?
		//'}'
		public Group getGroup() { return cGroup; }
		
		//{urdf::Inertia}
		public Action getInertiaAction_0() { return cInertiaAction_0; }
		
		//'Inertia'
		public Keyword getInertiaKeyword_1() { return cInertiaKeyword_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//('ixx' ixx=Double0)?
		public Group getGroup_3() { return cGroup_3; }
		
		//'ixx'
		public Keyword getIxxKeyword_3_0() { return cIxxKeyword_3_0; }
		
		//ixx=Double0
		public Assignment getIxxAssignment_3_1() { return cIxxAssignment_3_1; }
		
		//Double0
		public RuleCall getIxxDouble0ParserRuleCall_3_1_0() { return cIxxDouble0ParserRuleCall_3_1_0; }
		
		//('ixy' ixy=Double0)?
		public Group getGroup_4() { return cGroup_4; }
		
		//'ixy'
		public Keyword getIxyKeyword_4_0() { return cIxyKeyword_4_0; }
		
		//ixy=Double0
		public Assignment getIxyAssignment_4_1() { return cIxyAssignment_4_1; }
		
		//Double0
		public RuleCall getIxyDouble0ParserRuleCall_4_1_0() { return cIxyDouble0ParserRuleCall_4_1_0; }
		
		//('ixz' ixz=Double0)?
		public Group getGroup_5() { return cGroup_5; }
		
		//'ixz'
		public Keyword getIxzKeyword_5_0() { return cIxzKeyword_5_0; }
		
		//ixz=Double0
		public Assignment getIxzAssignment_5_1() { return cIxzAssignment_5_1; }
		
		//Double0
		public RuleCall getIxzDouble0ParserRuleCall_5_1_0() { return cIxzDouble0ParserRuleCall_5_1_0; }
		
		//('iyy' iyy=Double0)?
		public Group getGroup_6() { return cGroup_6; }
		
		//'iyy'
		public Keyword getIyyKeyword_6_0() { return cIyyKeyword_6_0; }
		
		//iyy=Double0
		public Assignment getIyyAssignment_6_1() { return cIyyAssignment_6_1; }
		
		//Double0
		public RuleCall getIyyDouble0ParserRuleCall_6_1_0() { return cIyyDouble0ParserRuleCall_6_1_0; }
		
		//('iyz' iyz=Double0)?
		public Group getGroup_7() { return cGroup_7; }
		
		//'iyz'
		public Keyword getIyzKeyword_7_0() { return cIyzKeyword_7_0; }
		
		//iyz=Double0
		public Assignment getIyzAssignment_7_1() { return cIyzAssignment_7_1; }
		
		//Double0
		public RuleCall getIyzDouble0ParserRuleCall_7_1_0() { return cIyzDouble0ParserRuleCall_7_1_0; }
		
		//('izz' izz=Double0)?
		public Group getGroup_8() { return cGroup_8; }
		
		//'izz'
		public Keyword getIzzKeyword_8_0() { return cIzzKeyword_8_0; }
		
		//izz=Double0
		public Assignment getIzzAssignment_8_1() { return cIzzAssignment_8_1; }
		
		//Double0
		public RuleCall getIzzDouble0ParserRuleCall_8_1_0() { return cIzzDouble0ParserRuleCall_8_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_9() { return cRightCurlyBracketKeyword_9; }
	}
	public class GeometryElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.fraunhofer.ipa.kinematics.xacro.Xacro.Geometry");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cGeometryAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cGeometryKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cBoxKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cBoxAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cBoxBoxParserRuleCall_3_1_0 = (RuleCall)cBoxAssignment_3_1.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cCylinderKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cCylinderAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cCylinderCylinderParserRuleCall_4_1_0 = (RuleCall)cCylinderAssignment_4_1.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cSphereKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cSphereAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cSphereSphereParserRuleCall_5_1_0 = (RuleCall)cSphereAssignment_5_1.eContents().get(0);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cMeshKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Assignment cMeshAssignment_6_1 = (Assignment)cGroup_6.eContents().get(1);
		private final RuleCall cMeshMeshParserRuleCall_6_1_0 = (RuleCall)cMeshAssignment_6_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_7 = (Keyword)cGroup.eContents().get(7);
		
		//Geometry returns urdf::Geometry:
		//    {urdf::Geometry}
		//    'Geometry'
		//    '{'
		//        ('box' box=Box)?
		//        ('cylinder' cylinder=Cylinder)?
		//        ('sphere' sphere=Sphere)?
		//        ('mesh' mesh=Mesh)?
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//{urdf::Geometry}
		//'Geometry'
		//'{'
		//    ('box' box=Box)?
		//    ('cylinder' cylinder=Cylinder)?
		//    ('sphere' sphere=Sphere)?
		//    ('mesh' mesh=Mesh)?
		//'}'
		public Group getGroup() { return cGroup; }
		
		//{urdf::Geometry}
		public Action getGeometryAction_0() { return cGeometryAction_0; }
		
		//'Geometry'
		public Keyword getGeometryKeyword_1() { return cGeometryKeyword_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//('box' box=Box)?
		public Group getGroup_3() { return cGroup_3; }
		
		//'box'
		public Keyword getBoxKeyword_3_0() { return cBoxKeyword_3_0; }
		
		//box=Box
		public Assignment getBoxAssignment_3_1() { return cBoxAssignment_3_1; }
		
		//Box
		public RuleCall getBoxBoxParserRuleCall_3_1_0() { return cBoxBoxParserRuleCall_3_1_0; }
		
		//('cylinder' cylinder=Cylinder)?
		public Group getGroup_4() { return cGroup_4; }
		
		//'cylinder'
		public Keyword getCylinderKeyword_4_0() { return cCylinderKeyword_4_0; }
		
		//cylinder=Cylinder
		public Assignment getCylinderAssignment_4_1() { return cCylinderAssignment_4_1; }
		
		//Cylinder
		public RuleCall getCylinderCylinderParserRuleCall_4_1_0() { return cCylinderCylinderParserRuleCall_4_1_0; }
		
		//('sphere' sphere=Sphere)?
		public Group getGroup_5() { return cGroup_5; }
		
		//'sphere'
		public Keyword getSphereKeyword_5_0() { return cSphereKeyword_5_0; }
		
		//sphere=Sphere
		public Assignment getSphereAssignment_5_1() { return cSphereAssignment_5_1; }
		
		//Sphere
		public RuleCall getSphereSphereParserRuleCall_5_1_0() { return cSphereSphereParserRuleCall_5_1_0; }
		
		//('mesh' mesh=Mesh)?
		public Group getGroup_6() { return cGroup_6; }
		
		//'mesh'
		public Keyword getMeshKeyword_6_0() { return cMeshKeyword_6_0; }
		
		//mesh=Mesh
		public Assignment getMeshAssignment_6_1() { return cMeshAssignment_6_1; }
		
		//Mesh
		public RuleCall getMeshMeshParserRuleCall_6_1_0() { return cMeshMeshParserRuleCall_6_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_7() { return cRightCurlyBracketKeyword_7; }
	}
	public class MaterialElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.fraunhofer.ipa.kinematics.xacro.Xacro.Material");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cMaterialAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cMaterialKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cNameKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cNameAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cNameEStringParserRuleCall_3_1_0 = (RuleCall)cNameAssignment_3_1.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cColorKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cColorAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cColorColorParserRuleCall_4_1_0 = (RuleCall)cColorAssignment_4_1.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cTextureKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cTextureAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cTextureTextureParserRuleCall_5_1_0 = (RuleCall)cTextureAssignment_5_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//Material returns urdf::Material:
		//    {urdf::Material}
		//    'Material'
		//    '{'
		//        ('name' name=EString)?
		//        ('color' color=Color)?
		//        ('texture' texture=Texture)?
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//{urdf::Material}
		//'Material'
		//'{'
		//    ('name' name=EString)?
		//    ('color' color=Color)?
		//    ('texture' texture=Texture)?
		//'}'
		public Group getGroup() { return cGroup; }
		
		//{urdf::Material}
		public Action getMaterialAction_0() { return cMaterialAction_0; }
		
		//'Material'
		public Keyword getMaterialKeyword_1() { return cMaterialKeyword_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//('name' name=EString)?
		public Group getGroup_3() { return cGroup_3; }
		
		//'name'
		public Keyword getNameKeyword_3_0() { return cNameKeyword_3_0; }
		
		//name=EString
		public Assignment getNameAssignment_3_1() { return cNameAssignment_3_1; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_3_1_0() { return cNameEStringParserRuleCall_3_1_0; }
		
		//('color' color=Color)?
		public Group getGroup_4() { return cGroup_4; }
		
		//'color'
		public Keyword getColorKeyword_4_0() { return cColorKeyword_4_0; }
		
		//color=Color
		public Assignment getColorAssignment_4_1() { return cColorAssignment_4_1; }
		
		//Color
		public RuleCall getColorColorParserRuleCall_4_1_0() { return cColorColorParserRuleCall_4_1_0; }
		
		//('texture' texture=Texture)?
		public Group getGroup_5() { return cGroup_5; }
		
		//'texture'
		public Keyword getTextureKeyword_5_0() { return cTextureKeyword_5_0; }
		
		//texture=Texture
		public Assignment getTextureAssignment_5_1() { return cTextureAssignment_5_1; }
		
		//Texture
		public RuleCall getTextureTextureParserRuleCall_5_1_0() { return cTextureTextureParserRuleCall_5_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_6() { return cRightCurlyBracketKeyword_6; }
	}
	public class BoxElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.fraunhofer.ipa.kinematics.xacro.Xacro.Box");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cBoxAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cBoxKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cSizeKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cSizeAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cSizeEStringParserRuleCall_3_1_0 = (RuleCall)cSizeAssignment_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//Box returns urdf::Box:
		//    {urdf::Box}
		//    'Box'
		//    '{'
		//        ('size' size=EString)?
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//{urdf::Box}
		//'Box'
		//'{'
		//    ('size' size=EString)?
		//'}'
		public Group getGroup() { return cGroup; }
		
		//{urdf::Box}
		public Action getBoxAction_0() { return cBoxAction_0; }
		
		//'Box'
		public Keyword getBoxKeyword_1() { return cBoxKeyword_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//('size' size=EString)?
		public Group getGroup_3() { return cGroup_3; }
		
		//'size'
		public Keyword getSizeKeyword_3_0() { return cSizeKeyword_3_0; }
		
		//size=EString
		public Assignment getSizeAssignment_3_1() { return cSizeAssignment_3_1; }
		
		//EString
		public RuleCall getSizeEStringParserRuleCall_3_1_0() { return cSizeEStringParserRuleCall_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}
	public class CylinderElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.fraunhofer.ipa.kinematics.xacro.Xacro.Cylinder");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cCylinderKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLengthKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cLengthAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cLengthDouble0ParserRuleCall_3_0 = (RuleCall)cLengthAssignment_3.eContents().get(0);
		private final Keyword cRadiusKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cRadiusAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cRadiusDouble0ParserRuleCall_5_0 = (RuleCall)cRadiusAssignment_5.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//Cylinder returns urdf::Cylinder:
		//    'Cylinder'
		//    '{'
		//        'length' length=Double0
		//        'radius' radius=Double0
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//'Cylinder'
		//'{'
		//    'length' length=Double0
		//    'radius' radius=Double0
		//'}'
		public Group getGroup() { return cGroup; }
		
		//'Cylinder'
		public Keyword getCylinderKeyword_0() { return cCylinderKeyword_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }
		
		//'length'
		public Keyword getLengthKeyword_2() { return cLengthKeyword_2; }
		
		//length=Double0
		public Assignment getLengthAssignment_3() { return cLengthAssignment_3; }
		
		//Double0
		public RuleCall getLengthDouble0ParserRuleCall_3_0() { return cLengthDouble0ParserRuleCall_3_0; }
		
		//'radius'
		public Keyword getRadiusKeyword_4() { return cRadiusKeyword_4; }
		
		//radius=Double0
		public Assignment getRadiusAssignment_5() { return cRadiusAssignment_5; }
		
		//Double0
		public RuleCall getRadiusDouble0ParserRuleCall_5_0() { return cRadiusDouble0ParserRuleCall_5_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_6() { return cRightCurlyBracketKeyword_6; }
	}
	public class SphereElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.fraunhofer.ipa.kinematics.xacro.Xacro.Sphere");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cSphereKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cRadiusKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cRadiusAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cRadiusDouble0ParserRuleCall_3_0 = (RuleCall)cRadiusAssignment_3.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//Sphere returns urdf::Sphere:
		//    'Sphere'
		//    '{'
		//        'radius' radius=Double0
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//'Sphere'
		//'{'
		//    'radius' radius=Double0
		//'}'
		public Group getGroup() { return cGroup; }
		
		//'Sphere'
		public Keyword getSphereKeyword_0() { return cSphereKeyword_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }
		
		//'radius'
		public Keyword getRadiusKeyword_2() { return cRadiusKeyword_2; }
		
		//radius=Double0
		public Assignment getRadiusAssignment_3() { return cRadiusAssignment_3; }
		
		//Double0
		public RuleCall getRadiusDouble0ParserRuleCall_3_0() { return cRadiusDouble0ParserRuleCall_3_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}
	public class MeshElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.fraunhofer.ipa.kinematics.xacro.Xacro.Mesh");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cMeshKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cFilenameKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cFilenameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cFilenameEStringParserRuleCall_3_0 = (RuleCall)cFilenameAssignment_3.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cScaleKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cScaleAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cScaleEStringParserRuleCall_4_1_0 = (RuleCall)cScaleAssignment_4_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//Mesh returns urdf::Mesh:
		//    'Mesh'
		//    '{'
		//        'filename' filename=EString
		//        ('scale' scale=EString)?
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//'Mesh'
		//'{'
		//    'filename' filename=EString
		//    ('scale' scale=EString)?
		//'}'
		public Group getGroup() { return cGroup; }
		
		//'Mesh'
		public Keyword getMeshKeyword_0() { return cMeshKeyword_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }
		
		//'filename'
		public Keyword getFilenameKeyword_2() { return cFilenameKeyword_2; }
		
		//filename=EString
		public Assignment getFilenameAssignment_3() { return cFilenameAssignment_3; }
		
		//EString
		public RuleCall getFilenameEStringParserRuleCall_3_0() { return cFilenameEStringParserRuleCall_3_0; }
		
		//('scale' scale=EString)?
		public Group getGroup_4() { return cGroup_4; }
		
		//'scale'
		public Keyword getScaleKeyword_4_0() { return cScaleKeyword_4_0; }
		
		//scale=EString
		public Assignment getScaleAssignment_4_1() { return cScaleAssignment_4_1; }
		
		//EString
		public RuleCall getScaleEStringParserRuleCall_4_1_0() { return cScaleEStringParserRuleCall_4_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}
	public class AnyURIElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.fraunhofer.ipa.kinematics.xacro.Xacro.AnyURI");
		private final Keyword cAnyURIKeyword = (Keyword)rule.eContents().get(1);
		
		//AnyURI returns type::AnyURI:
		//    'AnyURI' /* TODO: implement this rule and an appropriate IValueConverter */;
		@Override public ParserRule getRule() { return rule; }
		
		//'AnyURI'
		public Keyword getAnyURIKeyword() { return cAnyURIKeyword; }
	}
	public class ColorElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.fraunhofer.ipa.kinematics.xacro.Xacro.Color");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cColorAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cColorKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cRgbaKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cRgbaAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cRgbaEStringParserRuleCall_3_1_0 = (RuleCall)cRgbaAssignment_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//Color returns urdf::Color:
		//    {urdf::Color}
		//    'Color'
		//    '{'
		//        ('rgba' rgba=EString)?
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//{urdf::Color}
		//'Color'
		//'{'
		//    ('rgba' rgba=EString)?
		//'}'
		public Group getGroup() { return cGroup; }
		
		//{urdf::Color}
		public Action getColorAction_0() { return cColorAction_0; }
		
		//'Color'
		public Keyword getColorKeyword_1() { return cColorKeyword_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//('rgba' rgba=EString)?
		public Group getGroup_3() { return cGroup_3; }
		
		//'rgba'
		public Keyword getRgbaKeyword_3_0() { return cRgbaKeyword_3_0; }
		
		//rgba=EString
		public Assignment getRgbaAssignment_3_1() { return cRgbaAssignment_3_1; }
		
		//EString
		public RuleCall getRgbaEStringParserRuleCall_3_1_0() { return cRgbaEStringParserRuleCall_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}
	public class TextureElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.fraunhofer.ipa.kinematics.xacro.Xacro.Texture");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cTextureAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cTextureKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cFilenameKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cFilenameAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cFilenameAnyURIParserRuleCall_3_1_0 = (RuleCall)cFilenameAssignment_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//Texture returns urdf::Texture:
		//    {urdf::Texture}
		//    'Texture'
		//    '{'
		//        ('filename' filename=AnyURI)?
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//{urdf::Texture}
		//'Texture'
		//'{'
		//    ('filename' filename=AnyURI)?
		//'}'
		public Group getGroup() { return cGroup; }
		
		//{urdf::Texture}
		public Action getTextureAction_0() { return cTextureAction_0; }
		
		//'Texture'
		public Keyword getTextureKeyword_1() { return cTextureKeyword_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//('filename' filename=AnyURI)?
		public Group getGroup_3() { return cGroup_3; }
		
		//'filename'
		public Keyword getFilenameKeyword_3_0() { return cFilenameKeyword_3_0; }
		
		//filename=AnyURI
		public Assignment getFilenameAssignment_3_1() { return cFilenameAssignment_3_1; }
		
		//AnyURI
		public RuleCall getFilenameAnyURIParserRuleCall_3_1_0() { return cFilenameAnyURIParserRuleCall_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}
	public class VerboseElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.fraunhofer.ipa.kinematics.xacro.Xacro.Verbose");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cVerboseAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cVerboseKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cValueKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cValueAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cValueEStringParserRuleCall_3_1_0 = (RuleCall)cValueAssignment_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//Verbose returns urdf::Verbose:
		//    {urdf::Verbose}
		//    'Verbose'
		//    '{'
		//        ('value' value=EString)?
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//{urdf::Verbose}
		//'Verbose'
		//'{'
		//    ('value' value=EString)?
		//'}'
		public Group getGroup() { return cGroup; }
		
		//{urdf::Verbose}
		public Action getVerboseAction_0() { return cVerboseAction_0; }
		
		//'Verbose'
		public Keyword getVerboseKeyword_1() { return cVerboseKeyword_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//('value' value=EString)?
		public Group getGroup_3() { return cGroup_3; }
		
		//'value'
		public Keyword getValueKeyword_3_0() { return cValueKeyword_3_0; }
		
		//value=EString
		public Assignment getValueAssignment_3_1() { return cValueAssignment_3_1; }
		
		//EString
		public RuleCall getValueEStringParserRuleCall_3_1_0() { return cValueEStringParserRuleCall_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}
	public class ActuatorTransmissionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.fraunhofer.ipa.kinematics.xacro.Xacro.ActuatorTransmission");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cActuatorTransmissionKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cMechanicalReductionKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cMechanicalReductionAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cMechanicalReductionDouble0ParserRuleCall_3_0 = (RuleCall)cMechanicalReductionAssignment_3.eContents().get(0);
		private final Keyword cNameKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cNameAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cNameEStringParserRuleCall_5_0 = (RuleCall)cNameAssignment_5.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//ActuatorTransmission returns urdf::ActuatorTransmission:
		//    'ActuatorTransmission'
		//    '{'
		//        'mechanicalReduction' mechanicalReduction=Double0
		//        'name' name=EString
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//'ActuatorTransmission'
		//'{'
		//    'mechanicalReduction' mechanicalReduction=Double0
		//    'name' name=EString
		//'}'
		public Group getGroup() { return cGroup; }
		
		//'ActuatorTransmission'
		public Keyword getActuatorTransmissionKeyword_0() { return cActuatorTransmissionKeyword_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }
		
		//'mechanicalReduction'
		public Keyword getMechanicalReductionKeyword_2() { return cMechanicalReductionKeyword_2; }
		
		//mechanicalReduction=Double0
		public Assignment getMechanicalReductionAssignment_3() { return cMechanicalReductionAssignment_3; }
		
		//Double0
		public RuleCall getMechanicalReductionDouble0ParserRuleCall_3_0() { return cMechanicalReductionDouble0ParserRuleCall_3_0; }
		
		//'name'
		public Keyword getNameKeyword_4() { return cNameKeyword_4; }
		
		//name=EString
		public Assignment getNameAssignment_5() { return cNameAssignment_5; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_5_0() { return cNameEStringParserRuleCall_5_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_6() { return cRightCurlyBracketKeyword_6; }
	}
	public class GapJointTransmissionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.fraunhofer.ipa.kinematics.xacro.Xacro.GapJointTransmission");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cGapJointTransmissionKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cAKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cAAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cADouble0ParserRuleCall_3_0 = (RuleCall)cAAssignment_3.eContents().get(0);
		private final Keyword cBKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cBAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cBDouble0ParserRuleCall_5_0 = (RuleCall)cBAssignment_5.eContents().get(0);
		private final Keyword cGearRatioKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Assignment cGearRatioAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cGearRatioDouble0ParserRuleCall_7_0 = (RuleCall)cGearRatioAssignment_7.eContents().get(0);
		private final Keyword cHKeyword_8 = (Keyword)cGroup.eContents().get(8);
		private final Assignment cHAssignment_9 = (Assignment)cGroup.eContents().get(9);
		private final RuleCall cHDouble0ParserRuleCall_9_0 = (RuleCall)cHAssignment_9.eContents().get(0);
		private final Keyword cL0Keyword_10 = (Keyword)cGroup.eContents().get(10);
		private final Assignment cL0Assignment_11 = (Assignment)cGroup.eContents().get(11);
		private final RuleCall cL0Double0ParserRuleCall_11_0 = (RuleCall)cL0Assignment_11.eContents().get(0);
		private final Keyword cMechanicalReductionKeyword_12 = (Keyword)cGroup.eContents().get(12);
		private final Assignment cMechanicalReductionAssignment_13 = (Assignment)cGroup.eContents().get(13);
		private final RuleCall cMechanicalReductionDouble0ParserRuleCall_13_0 = (RuleCall)cMechanicalReductionAssignment_13.eContents().get(0);
		private final Keyword cNameKeyword_14 = (Keyword)cGroup.eContents().get(14);
		private final Assignment cNameAssignment_15 = (Assignment)cGroup.eContents().get(15);
		private final RuleCall cNameEStringParserRuleCall_15_0 = (RuleCall)cNameAssignment_15.eContents().get(0);
		private final Keyword cPhi0Keyword_16 = (Keyword)cGroup.eContents().get(16);
		private final Assignment cPhi0Assignment_17 = (Assignment)cGroup.eContents().get(17);
		private final RuleCall cPhi0Double0ParserRuleCall_17_0 = (RuleCall)cPhi0Assignment_17.eContents().get(0);
		private final Keyword cRKeyword_18 = (Keyword)cGroup.eContents().get(18);
		private final Assignment cRAssignment_19 = (Assignment)cGroup.eContents().get(19);
		private final RuleCall cRDouble0ParserRuleCall_19_0 = (RuleCall)cRAssignment_19.eContents().get(0);
		private final Keyword cScrewReductionKeyword_20 = (Keyword)cGroup.eContents().get(20);
		private final Assignment cScrewReductionAssignment_21 = (Assignment)cGroup.eContents().get(21);
		private final RuleCall cScrewReductionDouble0ParserRuleCall_21_0 = (RuleCall)cScrewReductionAssignment_21.eContents().get(0);
		private final Keyword cT0Keyword_22 = (Keyword)cGroup.eContents().get(22);
		private final Assignment cT0Assignment_23 = (Assignment)cGroup.eContents().get(23);
		private final RuleCall cT0Double0ParserRuleCall_23_0 = (RuleCall)cT0Assignment_23.eContents().get(0);
		private final Keyword cTheta0Keyword_24 = (Keyword)cGroup.eContents().get(24);
		private final Assignment cTheta0Assignment_25 = (Assignment)cGroup.eContents().get(25);
		private final RuleCall cTheta0Double0ParserRuleCall_25_0 = (RuleCall)cTheta0Assignment_25.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_26 = (Keyword)cGroup.eContents().get(26);
		
		//GapJointTransmission returns urdf::GapJointTransmission:
		//    'GapJointTransmission'
		//    '{'
		//        'a' a=Double0
		//        'b' b=Double0
		//        'gearRatio' gearRatio=Double0
		//        'h' h=Double0
		//        'l0' l0=Double0
		//        'mechanicalReduction' mechanicalReduction=Double0
		//        'name' name=EString
		//        'phi0' phi0=Double0
		//        'r' r=Double0
		//        'screwReduction' screwReduction=Double0
		//        't0' t0=Double0
		//        'theta0' theta0=Double0
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//'GapJointTransmission'
		//'{'
		//    'a' a=Double0
		//    'b' b=Double0
		//    'gearRatio' gearRatio=Double0
		//    'h' h=Double0
		//    'l0' l0=Double0
		//    'mechanicalReduction' mechanicalReduction=Double0
		//    'name' name=EString
		//    'phi0' phi0=Double0
		//    'r' r=Double0
		//    'screwReduction' screwReduction=Double0
		//    't0' t0=Double0
		//    'theta0' theta0=Double0
		//'}'
		public Group getGroup() { return cGroup; }
		
		//'GapJointTransmission'
		public Keyword getGapJointTransmissionKeyword_0() { return cGapJointTransmissionKeyword_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }
		
		//'a'
		public Keyword getAKeyword_2() { return cAKeyword_2; }
		
		//a=Double0
		public Assignment getAAssignment_3() { return cAAssignment_3; }
		
		//Double0
		public RuleCall getADouble0ParserRuleCall_3_0() { return cADouble0ParserRuleCall_3_0; }
		
		//'b'
		public Keyword getBKeyword_4() { return cBKeyword_4; }
		
		//b=Double0
		public Assignment getBAssignment_5() { return cBAssignment_5; }
		
		//Double0
		public RuleCall getBDouble0ParserRuleCall_5_0() { return cBDouble0ParserRuleCall_5_0; }
		
		//'gearRatio'
		public Keyword getGearRatioKeyword_6() { return cGearRatioKeyword_6; }
		
		//gearRatio=Double0
		public Assignment getGearRatioAssignment_7() { return cGearRatioAssignment_7; }
		
		//Double0
		public RuleCall getGearRatioDouble0ParserRuleCall_7_0() { return cGearRatioDouble0ParserRuleCall_7_0; }
		
		//'h'
		public Keyword getHKeyword_8() { return cHKeyword_8; }
		
		//h=Double0
		public Assignment getHAssignment_9() { return cHAssignment_9; }
		
		//Double0
		public RuleCall getHDouble0ParserRuleCall_9_0() { return cHDouble0ParserRuleCall_9_0; }
		
		//'l0'
		public Keyword getL0Keyword_10() { return cL0Keyword_10; }
		
		//l0=Double0
		public Assignment getL0Assignment_11() { return cL0Assignment_11; }
		
		//Double0
		public RuleCall getL0Double0ParserRuleCall_11_0() { return cL0Double0ParserRuleCall_11_0; }
		
		//'mechanicalReduction'
		public Keyword getMechanicalReductionKeyword_12() { return cMechanicalReductionKeyword_12; }
		
		//mechanicalReduction=Double0
		public Assignment getMechanicalReductionAssignment_13() { return cMechanicalReductionAssignment_13; }
		
		//Double0
		public RuleCall getMechanicalReductionDouble0ParserRuleCall_13_0() { return cMechanicalReductionDouble0ParserRuleCall_13_0; }
		
		//'name'
		public Keyword getNameKeyword_14() { return cNameKeyword_14; }
		
		//name=EString
		public Assignment getNameAssignment_15() { return cNameAssignment_15; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_15_0() { return cNameEStringParserRuleCall_15_0; }
		
		//'phi0'
		public Keyword getPhi0Keyword_16() { return cPhi0Keyword_16; }
		
		//phi0=Double0
		public Assignment getPhi0Assignment_17() { return cPhi0Assignment_17; }
		
		//Double0
		public RuleCall getPhi0Double0ParserRuleCall_17_0() { return cPhi0Double0ParserRuleCall_17_0; }
		
		//'r'
		public Keyword getRKeyword_18() { return cRKeyword_18; }
		
		//r=Double0
		public Assignment getRAssignment_19() { return cRAssignment_19; }
		
		//Double0
		public RuleCall getRDouble0ParserRuleCall_19_0() { return cRDouble0ParserRuleCall_19_0; }
		
		//'screwReduction'
		public Keyword getScrewReductionKeyword_20() { return cScrewReductionKeyword_20; }
		
		//screwReduction=Double0
		public Assignment getScrewReductionAssignment_21() { return cScrewReductionAssignment_21; }
		
		//Double0
		public RuleCall getScrewReductionDouble0ParserRuleCall_21_0() { return cScrewReductionDouble0ParserRuleCall_21_0; }
		
		//'t0'
		public Keyword getT0Keyword_22() { return cT0Keyword_22; }
		
		//t0=Double0
		public Assignment getT0Assignment_23() { return cT0Assignment_23; }
		
		//Double0
		public RuleCall getT0Double0ParserRuleCall_23_0() { return cT0Double0ParserRuleCall_23_0; }
		
		//'theta0'
		public Keyword getTheta0Keyword_24() { return cTheta0Keyword_24; }
		
		//theta0=Double0
		public Assignment getTheta0Assignment_25() { return cTheta0Assignment_25; }
		
		//Double0
		public RuleCall getTheta0Double0ParserRuleCall_25_0() { return cTheta0Double0ParserRuleCall_25_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_26() { return cRightCurlyBracketKeyword_26; }
	}
	public class PassiveJointTransmissionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.fraunhofer.ipa.kinematics.xacro.Xacro.PassiveJointTransmission");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cPassiveJointTransmissionKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cNameKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cNameEStringParserRuleCall_3_0 = (RuleCall)cNameAssignment_3.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//PassiveJointTransmission returns urdf::PassiveJointTransmission:
		//    'PassiveJointTransmission'
		//    '{'
		//        'name' name=EString
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//'PassiveJointTransmission'
		//'{'
		//    'name' name=EString
		//'}'
		public Group getGroup() { return cGroup; }
		
		//'PassiveJointTransmission'
		public Keyword getPassiveJointTransmissionKeyword_0() { return cPassiveJointTransmissionKeyword_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }
		
		//'name'
		public Keyword getNameKeyword_2() { return cNameKeyword_2; }
		
		//name=EString
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_3_0() { return cNameEStringParserRuleCall_3_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}
	public class UseSimulatedGripperJointTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.fraunhofer.ipa.kinematics.xacro.Xacro.UseSimulatedGripperJointType");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cUseSimulatedGripperJointTypeAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cUseSimulatedGripperJointTypeKeyword_1 = (Keyword)cGroup.eContents().get(1);
		
		//UseSimulatedGripperJointType returns urdf::UseSimulatedGripperJointType:
		//    {urdf::UseSimulatedGripperJointType}
		//    'UseSimulatedGripperJointType'
		//    ;
		@Override public ParserRule getRule() { return rule; }
		
		//{urdf::UseSimulatedGripperJointType}
		//'UseSimulatedGripperJointType'
		public Group getGroup() { return cGroup; }
		
		//{urdf::UseSimulatedGripperJointType}
		public Action getUseSimulatedGripperJointTypeAction_0() { return cUseSimulatedGripperJointTypeAction_0; }
		
		//'UseSimulatedGripperJointType'
		public Keyword getUseSimulatedGripperJointTypeKeyword_1() { return cUseSimulatedGripperJointTypeKeyword_1; }
	}
	public class NameElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.fraunhofer.ipa.kinematics.xacro.Xacro.Name");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cNameAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cNameKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cNameKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cNameAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cNameEStringParserRuleCall_3_1_0 = (RuleCall)cNameAssignment_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//Name returns urdf::Name:
		//    {urdf::Name}
		//    'Name'
		//    '{'
		//        ('name' name=EString)?
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//{urdf::Name}
		//'Name'
		//'{'
		//    ('name' name=EString)?
		//'}'
		public Group getGroup() { return cGroup; }
		
		//{urdf::Name}
		public Action getNameAction_0() { return cNameAction_0; }
		
		//'Name'
		public Keyword getNameKeyword_1() { return cNameKeyword_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//('name' name=EString)?
		public Group getGroup_3() { return cGroup_3; }
		
		//'name'
		public Keyword getNameKeyword_3_0() { return cNameKeyword_3_0; }
		
		//name=EString
		public Assignment getNameAssignment_3_1() { return cNameAssignment_3_1; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_3_1_0() { return cNameEStringParserRuleCall_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}
	public class Double0Elements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.fraunhofer.ipa.kinematics.xacro.Xacro.Double0");
		private final RuleCall cDOUBLETerminalRuleCall = (RuleCall)rule.eContents().get(1);
		
		//Double0 returns type::Double:
		//    DOUBLE;
		@Override public ParserRule getRule() { return rule; }
		
		//DOUBLE
		public RuleCall getDOUBLETerminalRuleCall() { return cDOUBLETerminalRuleCall; }
	}
	public class Integer0Elements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.fraunhofer.ipa.kinematics.xacro.Xacro.Integer0");
		private final RuleCall cDECINTTerminalRuleCall = (RuleCall)rule.eContents().get(1);
		
		//Integer0 returns type::Int:
		//    DECINT;
		@Override public ParserRule getRule() { return rule; }
		
		//DECINT
		public RuleCall getDECINTTerminalRuleCall() { return cDECINTTerminalRuleCall; }
	}
	
	
	private final RobotElements pRobot;
	private final EStringElements pEString;
	private final MacroElements pMacro;
	private final ParameterElements pParameter;
	private final BodyElements pBody;
	private final JointElements pJoint;
	private final LinkElements pLink;
	private final MaterialGlobalElements pMaterialGlobal;
	private final TransmissionElements pTransmission;
	private final PoseElements pPose;
	private final AxisElements pAxis;
	private final CalibrationElements pCalibration;
	private final DynamicsElements pDynamics;
	private final LimitElements pLimit;
	private final SafetyControllerElements pSafetyController;
	private final MimicElements pMimic;
	private final InertialElements pInertial;
	private final VisualElements pVisual;
	private final CollisionElements pCollision;
	private final MassElements pMass;
	private final InertiaElements pInertia;
	private final GeometryElements pGeometry;
	private final MaterialElements pMaterial;
	private final BoxElements pBox;
	private final CylinderElements pCylinder;
	private final SphereElements pSphere;
	private final MeshElements pMesh;
	private final AnyURIElements pAnyURI;
	private final ColorElements pColor;
	private final TextureElements pTexture;
	private final VerboseElements pVerbose;
	private final ActuatorTransmissionElements pActuatorTransmission;
	private final GapJointTransmissionElements pGapJointTransmission;
	private final PassiveJointTransmissionElements pPassiveJointTransmission;
	private final UseSimulatedGripperJointTypeElements pUseSimulatedGripperJointType;
	private final NameElements pName;
	private final TerminalRule tDIGIT;
	private final TerminalRule tBOOLEAN;
	private final TerminalRule tDOUBLE;
	private final TerminalRule tDECINT;
	private final Double0Elements pDouble0;
	private final Integer0Elements pInteger0;
	
	private final Grammar grammar;
	
	private final TerminalsGrammarAccess gaTerminals;

	@Inject
	public XacroGrammarAccess(GrammarProvider grammarProvider,
			TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
		this.pRobot = new RobotElements();
		this.pEString = new EStringElements();
		this.pMacro = new MacroElements();
		this.pParameter = new ParameterElements();
		this.pBody = new BodyElements();
		this.pJoint = new JointElements();
		this.pLink = new LinkElements();
		this.pMaterialGlobal = new MaterialGlobalElements();
		this.pTransmission = new TransmissionElements();
		this.pPose = new PoseElements();
		this.pAxis = new AxisElements();
		this.pCalibration = new CalibrationElements();
		this.pDynamics = new DynamicsElements();
		this.pLimit = new LimitElements();
		this.pSafetyController = new SafetyControllerElements();
		this.pMimic = new MimicElements();
		this.pInertial = new InertialElements();
		this.pVisual = new VisualElements();
		this.pCollision = new CollisionElements();
		this.pMass = new MassElements();
		this.pInertia = new InertiaElements();
		this.pGeometry = new GeometryElements();
		this.pMaterial = new MaterialElements();
		this.pBox = new BoxElements();
		this.pCylinder = new CylinderElements();
		this.pSphere = new SphereElements();
		this.pMesh = new MeshElements();
		this.pAnyURI = new AnyURIElements();
		this.pColor = new ColorElements();
		this.pTexture = new TextureElements();
		this.pVerbose = new VerboseElements();
		this.pActuatorTransmission = new ActuatorTransmissionElements();
		this.pGapJointTransmission = new GapJointTransmissionElements();
		this.pPassiveJointTransmission = new PassiveJointTransmissionElements();
		this.pUseSimulatedGripperJointType = new UseSimulatedGripperJointTypeElements();
		this.pName = new NameElements();
		this.tDIGIT = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "de.fraunhofer.ipa.kinematics.xacro.Xacro.DIGIT");
		this.tBOOLEAN = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "de.fraunhofer.ipa.kinematics.xacro.Xacro.BOOLEAN");
		this.tDOUBLE = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "de.fraunhofer.ipa.kinematics.xacro.Xacro.DOUBLE");
		this.tDECINT = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "de.fraunhofer.ipa.kinematics.xacro.Xacro.DECINT");
		this.pDouble0 = new Double0Elements();
		this.pInteger0 = new Integer0Elements();
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("de.fraunhofer.ipa.kinematics.xacro.Xacro".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	@Override
	public Grammar getGrammar() {
		return grammar;
	}
	
	
	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//Robot returns Robot:
	//    {Robot}
	//    'Robot'
	//    '{'
	//        'name' name=EString
	//        ('version' version=EString)?
	//        ('macro' '{' macro+=Macro ( "," macro+=Macro)* '}' )?
	//        ('body' body=Body)?
	//    '}';
	public RobotElements getRobotAccess() {
		return pRobot;
	}
	
	public ParserRule getRobotRule() {
		return getRobotAccess().getRule();
	}
	
	//EString returns ecore::EString:
	//    STRING | ID;
	public EStringElements getEStringAccess() {
		return pEString;
	}
	
	public ParserRule getEStringRule() {
		return getEStringAccess().getRule();
	}
	
	//Macro returns Macro:
	//    'Macro'
	//    '{'
	//        'name' name=EString
	//        ('parameter' '{' parameter+=Parameter ( "," parameter+=Parameter)* '}' )?
	//        ('body' body=Body)?
	//    '}';
	public MacroElements getMacroAccess() {
		return pMacro;
	}
	
	public ParserRule getMacroRule() {
		return getMacroAccess().getRule();
	}
	
	//Parameter returns Parameter:
	//    {Parameter}
	//    'Parameter'
	//    name=EString
	//    '{'
	//        ('default' default=EString)?
	//        ('value' value=EString)?
	//    '}';
	public ParameterElements getParameterAccess() {
		return pParameter;
	}
	
	public ParserRule getParameterRule() {
		return getParameterAccess().getRule();
	}
	
	//Body returns Body:
	//    {Body}
	//    'Body'
	//    '{'
	//        ('link' '{' link+=Link ( "," link+=Link)* '}' )?
	//        ('joint' '{' joint+=Joint ( "," joint+=Joint)* '}' )?
	//        ('material' '{' material+=MaterialGlobal ( "," material+=MaterialGlobal)* '}' )?
	//        ('transmission' '{' transmission+=Transmission ( "," transmission+=Transmission)* '}' )?
	//    '}';
	public BodyElements getBodyAccess() {
		return pBody;
	}
	
	public ParserRule getBodyRule() {
		return getBodyAccess().getRule();
	}
	
	//Joint returns urdf::Joint:
	//    'Joint'
	//    '{'
	//        'name' name=EString
	//        'type' type=EString
	//        'parent' parent=[urdf::Link|EString]
	//        'child' child=[urdf::Link|EString]
	//        ('origin' origin=Pose)?
	//        ('axis' axis=Axis)?
	//        ('calibration' calibration=Calibration)?
	//        ('dynamics' dynamics=Dynamics)?
	//        ('limit' limit=Limit)?
	//        ('safetyController' safetyController=SafetyController)?
	//        ('mimic' mimic=Mimic)?
	//    '}';
	public JointElements getJointAccess() {
		return pJoint;
	}
	
	public ParserRule getJointRule() {
		return getJointAccess().getRule();
	}
	
	//Link returns urdf::Link:
	//    'Link'
	//    '{'
	//        'name' name=EString
	//        ('type' type=EString)?
	//        ('inertial' inertial=Inertial)?
	//        ('visual' visual=Visual)?
	//        ('collision' collision=Collision)?
	//    '}';
	public LinkElements getLinkAccess() {
		return pLink;
	}
	
	public ParserRule getLinkRule() {
		return getLinkAccess().getRule();
	}
	
	//MaterialGlobal returns urdf::MaterialGlobal:
	//    'MaterialGlobal'
	//    '{'
	//        'name' name=EString
	//        ('color' color=Color)?
	//        ('texture' texture=Texture)?
	//    '}';
	public MaterialGlobalElements getMaterialGlobalAccess() {
		return pMaterialGlobal;
	}
	
	public ParserRule getMaterialGlobalRule() {
		return getMaterialGlobalAccess().getRule();
	}
	
	//Transmission returns urdf::Transmission:
	//    'Transmission'
	//    '{'
	//        ('mechanicalReduction' '{' mechanicalReduction+=Double0 ( "," mechanicalReduction+=Double0)* '}' )?
	//        'name' name=EString
	//        'type' type=EString
	//        ('leftActuator' '{' leftActuator+=ActuatorTransmission ( "," leftActuator+=ActuatorTransmission)* '}' )?
	//        ('rightActuator' '{' rightActuator+=ActuatorTransmission ( "," rightActuator+=ActuatorTransmission)* '}' )?
	//        ('flexJoint' '{' flexJoint+=ActuatorTransmission ( "," flexJoint+=ActuatorTransmission)* '}' )?
	//        ('rollJoint' '{' rollJoint+=ActuatorTransmission ( "," rollJoint+=ActuatorTransmission)* '}' )?
	//        ('gapJoint' '{' gapJoint+=GapJointTransmission ( "," gapJoint+=GapJointTransmission)* '}' )?
	//        ('passiveJoint' '{' passiveJoint+=PassiveJointTransmission ( "," passiveJoint+=PassiveJointTransmission)* '}' )?
	//        ('useSimulatedGripperJoint' '{' useSimulatedGripperJoint+=UseSimulatedGripperJointType ( "," useSimulatedGripperJoint+=UseSimulatedGripperJointType)* '}' )?
	//        ('actuator' '{' actuator+=Name ( "," actuator+=Name)* '}' )?
	//        ('joint' '{' joint+=Name ( "," joint+=Name)* '}' )?
	//    '}';
	public TransmissionElements getTransmissionAccess() {
		return pTransmission;
	}
	
	public ParserRule getTransmissionRule() {
		return getTransmissionAccess().getRule();
	}
	
	//Pose returns urdf::Pose:
	//    {urdf::Pose}
	//    'Pose'
	//    '{'
	//        ('rpy' rpy=EString)?
	//        ('xyz' xyz=EString)?
	//    '}';
	public PoseElements getPoseAccess() {
		return pPose;
	}
	
	public ParserRule getPoseRule() {
		return getPoseAccess().getRule();
	}
	
	//Axis returns urdf::Axis:
	//    {urdf::Axis}
	//    'Axis'
	//    '{'
	//        ('xyz' xyz=EString)?
	//    '}';
	public AxisElements getAxisAccess() {
		return pAxis;
	}
	
	public ParserRule getAxisRule() {
		return getAxisAccess().getRule();
	}
	
	//Calibration returns urdf::Calibration:
	//    {urdf::Calibration}
	//    'Calibration'
	//    '{'
	//        ('falling' falling=Double0)?
	//        ('referencePosition' referencePosition=Double0)?
	//        ('rising' rising=Double0)?
	//    '}';
	public CalibrationElements getCalibrationAccess() {
		return pCalibration;
	}
	
	public ParserRule getCalibrationRule() {
		return getCalibrationAccess().getRule();
	}
	
	//Dynamics returns urdf::Dynamics:
	//    {urdf::Dynamics}
	//    'Dynamics'
	//    '{'
	//        ('damping' damping=Double0)?
	//        ('friction' friction=Double0)?
	//    '}';
	public DynamicsElements getDynamicsAccess() {
		return pDynamics;
	}
	
	public ParserRule getDynamicsRule() {
		return getDynamicsAccess().getRule();
	}
	
	//Limit returns urdf::Limit:
	//    {urdf::Limit}
	//    'Limit'
	//    '{'
	//        ('effort' effort=Double0)?
	//        ('lower' lower=Double0)?
	//        ('upper' upper=Double0)?
	//        ('velocity' velocity=Double0)?
	//    '}';
	public LimitElements getLimitAccess() {
		return pLimit;
	}
	
	public ParserRule getLimitRule() {
		return getLimitAccess().getRule();
	}
	
	//SafetyController returns urdf::SafetyController:
	//    'SafetyController'
	//    '{'
	//        ('kPosition' kPosition=Double0)?
	//        'kVelocity' kVelocity=Double0
	//        ('softLowerLimit' softLowerLimit=Double0)?
	//        ('softUpperLimit' softUpperLimit=Double0)?
	//    '}';
	public SafetyControllerElements getSafetyControllerAccess() {
		return pSafetyController;
	}
	
	public ParserRule getSafetyControllerRule() {
		return getSafetyControllerAccess().getRule();
	}
	
	//Mimic returns urdf::Mimic:
	//    'Mimic'
	//    '{'
	//        'joint' joint=EString
	//        ('multiplier' multiplier=Double0)?
	//        ('offset' offset=Double0)?
	//    '}';
	public MimicElements getMimicAccess() {
		return pMimic;
	}
	
	public ParserRule getMimicRule() {
		return getMimicAccess().getRule();
	}
	
	//Inertial returns urdf::Inertial:
	//    {urdf::Inertial}
	//    'Inertial'
	//    '{'
	//        ('origin' origin=Pose)?
	//        ('mass' mass=Mass)?
	//        ('inertia' inertia=Inertia)?
	//    '}';
	public InertialElements getInertialAccess() {
		return pInertial;
	}
	
	public ParserRule getInertialRule() {
		return getInertialAccess().getRule();
	}
	
	//Visual returns urdf::Visual:
	//    'Visual'
	//    '{'
	//        ('origin' origin=Pose)?
	//        'geometry' geometry=Geometry
	//        ('material' material=Material)?
	//    '}';
	public VisualElements getVisualAccess() {
		return pVisual;
	}
	
	public ParserRule getVisualRule() {
		return getVisualAccess().getRule();
	}
	
	//Collision returns urdf::Collision:
	//    'Collision'
	//    '{'
	//        ('name' name=EString)?
	//        ('origin' origin=Pose)?
	//        'geometry' geometry=Geometry
	//        ('verbose' verbose=Verbose)?
	//    '}';
	public CollisionElements getCollisionAccess() {
		return pCollision;
	}
	
	public ParserRule getCollisionRule() {
		return getCollisionAccess().getRule();
	}
	
	//Mass returns urdf::Mass:
	//    {urdf::Mass}
	//    'Mass'
	//    '{'
	//        ('value' value=Double0)?
	//    '}';
	public MassElements getMassAccess() {
		return pMass;
	}
	
	public ParserRule getMassRule() {
		return getMassAccess().getRule();
	}
	
	//Inertia returns urdf::Inertia:
	//    {urdf::Inertia}
	//    'Inertia'
	//    '{'
	//        ('ixx' ixx=Double0)?
	//        ('ixy' ixy=Double0)?
	//        ('ixz' ixz=Double0)?
	//        ('iyy' iyy=Double0)?
	//        ('iyz' iyz=Double0)?
	//        ('izz' izz=Double0)?
	//    '}';
	public InertiaElements getInertiaAccess() {
		return pInertia;
	}
	
	public ParserRule getInertiaRule() {
		return getInertiaAccess().getRule();
	}
	
	//Geometry returns urdf::Geometry:
	//    {urdf::Geometry}
	//    'Geometry'
	//    '{'
	//        ('box' box=Box)?
	//        ('cylinder' cylinder=Cylinder)?
	//        ('sphere' sphere=Sphere)?
	//        ('mesh' mesh=Mesh)?
	//    '}';
	public GeometryElements getGeometryAccess() {
		return pGeometry;
	}
	
	public ParserRule getGeometryRule() {
		return getGeometryAccess().getRule();
	}
	
	//Material returns urdf::Material:
	//    {urdf::Material}
	//    'Material'
	//    '{'
	//        ('name' name=EString)?
	//        ('color' color=Color)?
	//        ('texture' texture=Texture)?
	//    '}';
	public MaterialElements getMaterialAccess() {
		return pMaterial;
	}
	
	public ParserRule getMaterialRule() {
		return getMaterialAccess().getRule();
	}
	
	//Box returns urdf::Box:
	//    {urdf::Box}
	//    'Box'
	//    '{'
	//        ('size' size=EString)?
	//    '}';
	public BoxElements getBoxAccess() {
		return pBox;
	}
	
	public ParserRule getBoxRule() {
		return getBoxAccess().getRule();
	}
	
	//Cylinder returns urdf::Cylinder:
	//    'Cylinder'
	//    '{'
	//        'length' length=Double0
	//        'radius' radius=Double0
	//    '}';
	public CylinderElements getCylinderAccess() {
		return pCylinder;
	}
	
	public ParserRule getCylinderRule() {
		return getCylinderAccess().getRule();
	}
	
	//Sphere returns urdf::Sphere:
	//    'Sphere'
	//    '{'
	//        'radius' radius=Double0
	//    '}';
	public SphereElements getSphereAccess() {
		return pSphere;
	}
	
	public ParserRule getSphereRule() {
		return getSphereAccess().getRule();
	}
	
	//Mesh returns urdf::Mesh:
	//    'Mesh'
	//    '{'
	//        'filename' filename=EString
	//        ('scale' scale=EString)?
	//    '}';
	public MeshElements getMeshAccess() {
		return pMesh;
	}
	
	public ParserRule getMeshRule() {
		return getMeshAccess().getRule();
	}
	
	//AnyURI returns type::AnyURI:
	//    'AnyURI' /* TODO: implement this rule and an appropriate IValueConverter */;
	public AnyURIElements getAnyURIAccess() {
		return pAnyURI;
	}
	
	public ParserRule getAnyURIRule() {
		return getAnyURIAccess().getRule();
	}
	
	//Color returns urdf::Color:
	//    {urdf::Color}
	//    'Color'
	//    '{'
	//        ('rgba' rgba=EString)?
	//    '}';
	public ColorElements getColorAccess() {
		return pColor;
	}
	
	public ParserRule getColorRule() {
		return getColorAccess().getRule();
	}
	
	//Texture returns urdf::Texture:
	//    {urdf::Texture}
	//    'Texture'
	//    '{'
	//        ('filename' filename=AnyURI)?
	//    '}';
	public TextureElements getTextureAccess() {
		return pTexture;
	}
	
	public ParserRule getTextureRule() {
		return getTextureAccess().getRule();
	}
	
	//Verbose returns urdf::Verbose:
	//    {urdf::Verbose}
	//    'Verbose'
	//    '{'
	//        ('value' value=EString)?
	//    '}';
	public VerboseElements getVerboseAccess() {
		return pVerbose;
	}
	
	public ParserRule getVerboseRule() {
		return getVerboseAccess().getRule();
	}
	
	//ActuatorTransmission returns urdf::ActuatorTransmission:
	//    'ActuatorTransmission'
	//    '{'
	//        'mechanicalReduction' mechanicalReduction=Double0
	//        'name' name=EString
	//    '}';
	public ActuatorTransmissionElements getActuatorTransmissionAccess() {
		return pActuatorTransmission;
	}
	
	public ParserRule getActuatorTransmissionRule() {
		return getActuatorTransmissionAccess().getRule();
	}
	
	//GapJointTransmission returns urdf::GapJointTransmission:
	//    'GapJointTransmission'
	//    '{'
	//        'a' a=Double0
	//        'b' b=Double0
	//        'gearRatio' gearRatio=Double0
	//        'h' h=Double0
	//        'l0' l0=Double0
	//        'mechanicalReduction' mechanicalReduction=Double0
	//        'name' name=EString
	//        'phi0' phi0=Double0
	//        'r' r=Double0
	//        'screwReduction' screwReduction=Double0
	//        't0' t0=Double0
	//        'theta0' theta0=Double0
	//    '}';
	public GapJointTransmissionElements getGapJointTransmissionAccess() {
		return pGapJointTransmission;
	}
	
	public ParserRule getGapJointTransmissionRule() {
		return getGapJointTransmissionAccess().getRule();
	}
	
	//PassiveJointTransmission returns urdf::PassiveJointTransmission:
	//    'PassiveJointTransmission'
	//    '{'
	//        'name' name=EString
	//    '}';
	public PassiveJointTransmissionElements getPassiveJointTransmissionAccess() {
		return pPassiveJointTransmission;
	}
	
	public ParserRule getPassiveJointTransmissionRule() {
		return getPassiveJointTransmissionAccess().getRule();
	}
	
	//UseSimulatedGripperJointType returns urdf::UseSimulatedGripperJointType:
	//    {urdf::UseSimulatedGripperJointType}
	//    'UseSimulatedGripperJointType'
	//    ;
	public UseSimulatedGripperJointTypeElements getUseSimulatedGripperJointTypeAccess() {
		return pUseSimulatedGripperJointType;
	}
	
	public ParserRule getUseSimulatedGripperJointTypeRule() {
		return getUseSimulatedGripperJointTypeAccess().getRule();
	}
	
	//Name returns urdf::Name:
	//    {urdf::Name}
	//    'Name'
	//    '{'
	//        ('name' name=EString)?
	//    '}';
	public NameElements getNameAccess() {
		return pName;
	}
	
	public ParserRule getNameRule() {
		return getNameAccess().getRule();
	}
	
	//// from https://github.com/ipa320/ros-model/blob/e9279c9eab1c5d2554f239e80150f2df1bbb5ab3/plugins/de.fraunhofer.ipa.rossystem.xtext/src/de/fraunhofer/ipa/rossystem/RosSystem.xtext#L283-L307
	//terminal fragment DIGIT: '0'..'9';
	public TerminalRule getDIGITRule() {
		return tDIGIT;
	}
	
	//terminal BOOLEAN: 'true'|'false';
	public TerminalRule getBOOLEANRule() {
		return tBOOLEAN;
	}
	
	//terminal DOUBLE returns ecore::EDouble: DECINT (('.' DIGIT*) | (('.' DIGIT*)? ('E'|'e') ('-'|'+')? DECINT));
	public TerminalRule getDOUBLERule() {
		return tDOUBLE;
	}
	
	//  // Use terminal to avoid 'e' turning into a keyword
	//terminal DECINT: '0' | ('1'..'9' DIGIT*) | ('-''0'..'9' DIGIT*) ;
	public TerminalRule getDECINTRule() {
		return tDECINT;
	}
	
	//Double0 returns type::Double:
	//    DOUBLE;
	public Double0Elements getDouble0Access() {
		return pDouble0;
	}
	
	public ParserRule getDouble0Rule() {
		return getDouble0Access().getRule();
	}
	
	//Integer0 returns type::Int:
	//    DECINT;
	public Integer0Elements getInteger0Access() {
		return pInteger0;
	}
	
	public ParserRule getInteger0Rule() {
		return getInteger0Access().getRule();
	}
	
	//terminal ID: '^'?('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	}
	
	//terminal INT returns ecore::EInt: ('0'..'9')+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	}
	
	//terminal STRING:
	//            '"' ( '\\' . /* 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' */ | !('\\'|'"') )* '"' |
	//            "'" ( '\\' . /* 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' */ | !('\\'|"'") )* "'"
	//        ;
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	}
	
	//terminal ML_COMMENT : '/*' -> '*/';
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	}
	
	//terminal SL_COMMENT : '//' !('\n'|'\r')* ('\r'? '\n')?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	}
	
	//terminal WS         : (' '|'\t'|'\r'|'\n')+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	}
	
	//terminal ANY_OTHER: .;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	}
}
