/*
 * generated by Xtext 2.25.0
 */
grammar InternalXacro;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package de.fraunhofer.ipa.kinematics.xacro.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package de.fraunhofer.ipa.kinematics.xacro.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import de.fraunhofer.ipa.kinematics.xacro.services.XacroGrammarAccess;

}

@parser::members {

 	private XacroGrammarAccess grammarAccess;

    public InternalXacroParser(TokenStream input, XacroGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "Robot";
   	}

   	@Override
   	protected XacroGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleRobot
entryRuleRobot returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRobotRule()); }
	iv_ruleRobot=ruleRobot
	{ $current=$iv_ruleRobot.current; }
	EOF;

// Rule Robot
ruleRobot returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getRobotAccess().getRobotAction_0(),
					$current);
			}
		)
		otherlv_1='Robot'
		{
			newLeafNode(otherlv_1, grammarAccess.getRobotAccess().getRobotKeyword_1());
		}
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getRobotAccess().getLeftCurlyBracketKeyword_2());
		}
		otherlv_3='name'
		{
			newLeafNode(otherlv_3, grammarAccess.getRobotAccess().getNameKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getRobotAccess().getNameEStringParserRuleCall_4_0());
				}
				lv_name_4_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRobotRule());
					}
					set(
						$current,
						"name",
						lv_name_4_0,
						"de.fraunhofer.ipa.kinematics.xacro.Xacro.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_5='macro'
			{
				newLeafNode(otherlv_5, grammarAccess.getRobotAccess().getMacroKeyword_5_0());
			}
			otherlv_6='{'
			{
				newLeafNode(otherlv_6, grammarAccess.getRobotAccess().getLeftCurlyBracketKeyword_5_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getRobotAccess().getMacroMacroParserRuleCall_5_2_0());
					}
					lv_macro_7_0=ruleMacro
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getRobotRule());
						}
						add(
							$current,
							"macro",
							lv_macro_7_0,
							"de.fraunhofer.ipa.kinematics.xacro.Xacro.Macro");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_8=','
				{
					newLeafNode(otherlv_8, grammarAccess.getRobotAccess().getCommaKeyword_5_3_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getRobotAccess().getMacroMacroParserRuleCall_5_3_1_0());
						}
						lv_macro_9_0=ruleMacro
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getRobotRule());
							}
							add(
								$current,
								"macro",
								lv_macro_9_0,
								"de.fraunhofer.ipa.kinematics.xacro.Xacro.Macro");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_10='}'
			{
				newLeafNode(otherlv_10, grammarAccess.getRobotAccess().getRightCurlyBracketKeyword_5_4());
			}
		)?
		otherlv_11='}'
		{
			newLeafNode(otherlv_11, grammarAccess.getRobotAccess().getRightCurlyBracketKeyword_6());
		}
	)
;

// Entry rule entryRuleEString
entryRuleEString returns [String current=null]:
	{ newCompositeNode(grammarAccess.getEStringRule()); }
	iv_ruleEString=ruleEString
	{ $current=$iv_ruleEString.current.getText(); }
	EOF;

// Rule EString
ruleEString returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_STRING_0=RULE_STRING
		{
			$current.merge(this_STRING_0);
		}
		{
			newLeafNode(this_STRING_0, grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0());
		}
		    |
		this_ID_1=RULE_ID
		{
			$current.merge(this_ID_1);
		}
		{
			newLeafNode(this_ID_1, grammarAccess.getEStringAccess().getIDTerminalRuleCall_1());
		}
	)
;

// Entry rule entryRuleMacro
entryRuleMacro returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMacroRule()); }
	iv_ruleMacro=ruleMacro
	{ $current=$iv_ruleMacro.current; }
	EOF;

// Rule Macro
ruleMacro returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Macro'
		{
			newLeafNode(otherlv_0, grammarAccess.getMacroAccess().getMacroKeyword_0());
		}
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getMacroAccess().getLeftCurlyBracketKeyword_1());
		}
		otherlv_2='name'
		{
			newLeafNode(otherlv_2, grammarAccess.getMacroAccess().getNameKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getMacroAccess().getNameEStringParserRuleCall_3_0());
				}
				lv_name_3_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMacroRule());
					}
					set(
						$current,
						"name",
						lv_name_3_0,
						"de.fraunhofer.ipa.kinematics.xacro.Xacro.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_4='parameter'
			{
				newLeafNode(otherlv_4, grammarAccess.getMacroAccess().getParameterKeyword_4_0());
			}
			otherlv_5='{'
			{
				newLeafNode(otherlv_5, grammarAccess.getMacroAccess().getLeftCurlyBracketKeyword_4_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getMacroAccess().getParameterParameterParserRuleCall_4_2_0());
					}
					lv_parameter_6_0=ruleParameter
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getMacroRule());
						}
						add(
							$current,
							"parameter",
							lv_parameter_6_0,
							"de.fraunhofer.ipa.kinematics.xacro.Xacro.Parameter");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_7=','
				{
					newLeafNode(otherlv_7, grammarAccess.getMacroAccess().getCommaKeyword_4_3_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getMacroAccess().getParameterParameterParserRuleCall_4_3_1_0());
						}
						lv_parameter_8_0=ruleParameter
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getMacroRule());
							}
							add(
								$current,
								"parameter",
								lv_parameter_8_0,
								"de.fraunhofer.ipa.kinematics.xacro.Xacro.Parameter");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_9='}'
			{
				newLeafNode(otherlv_9, grammarAccess.getMacroAccess().getRightCurlyBracketKeyword_4_4());
			}
		)?
		(
			otherlv_10='body'
			{
				newLeafNode(otherlv_10, grammarAccess.getMacroAccess().getBodyKeyword_5_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getMacroAccess().getBodyBodyParserRuleCall_5_1_0());
					}
					lv_body_11_0=ruleBody
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getMacroRule());
						}
						set(
							$current,
							"body",
							lv_body_11_0,
							"de.fraunhofer.ipa.kinematics.xacro.Xacro.Body");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_12='}'
		{
			newLeafNode(otherlv_12, grammarAccess.getMacroAccess().getRightCurlyBracketKeyword_6());
		}
	)
;

// Entry rule entryRuleParameter
entryRuleParameter returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getParameterRule()); }
	iv_ruleParameter=ruleParameter
	{ $current=$iv_ruleParameter.current; }
	EOF;

// Rule Parameter
ruleParameter returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getParameterAccess().getParameterAction_0(),
					$current);
			}
		)
		otherlv_1='Parameter'
		{
			newLeafNode(otherlv_1, grammarAccess.getParameterAccess().getParameterKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getParameterAccess().getNameEStringParserRuleCall_2_0());
				}
				lv_name_2_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getParameterRule());
					}
					set(
						$current,
						"name",
						lv_name_2_0,
						"de.fraunhofer.ipa.kinematics.xacro.Xacro.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3='{'
		{
			newLeafNode(otherlv_3, grammarAccess.getParameterAccess().getLeftCurlyBracketKeyword_3());
		}
		(
			otherlv_4='default'
			{
				newLeafNode(otherlv_4, grammarAccess.getParameterAccess().getDefaultKeyword_4_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getParameterAccess().getDefaultEStringParserRuleCall_4_1_0());
					}
					lv_default_5_0=ruleEString
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getParameterRule());
						}
						set(
							$current,
							"default",
							lv_default_5_0,
							"de.fraunhofer.ipa.kinematics.xacro.Xacro.EString");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_6='value'
			{
				newLeafNode(otherlv_6, grammarAccess.getParameterAccess().getValueKeyword_5_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getParameterAccess().getValueEStringParserRuleCall_5_1_0());
					}
					lv_value_7_0=ruleEString
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getParameterRule());
						}
						set(
							$current,
							"value",
							lv_value_7_0,
							"de.fraunhofer.ipa.kinematics.xacro.Xacro.EString");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_8='}'
		{
			newLeafNode(otherlv_8, grammarAccess.getParameterAccess().getRightCurlyBracketKeyword_6());
		}
	)
;

// Entry rule entryRuleBody
entryRuleBody returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBodyRule()); }
	iv_ruleBody=ruleBody
	{ $current=$iv_ruleBody.current; }
	EOF;

// Rule Body
ruleBody returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getBodyAccess().getBodyAction_0(),
					$current);
			}
		)
		otherlv_1='Body'
		{
			newLeafNode(otherlv_1, grammarAccess.getBodyAccess().getBodyKeyword_1());
		}
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getBodyAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			otherlv_3='link'
			{
				newLeafNode(otherlv_3, grammarAccess.getBodyAccess().getLinkKeyword_3_0());
			}
			otherlv_4='{'
			{
				newLeafNode(otherlv_4, grammarAccess.getBodyAccess().getLeftCurlyBracketKeyword_3_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getBodyAccess().getLinkLinkParserRuleCall_3_2_0());
					}
					lv_link_5_0=ruleLink
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getBodyRule());
						}
						add(
							$current,
							"link",
							lv_link_5_0,
							"de.fraunhofer.ipa.kinematics.xacro.Xacro.Link");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_6=','
				{
					newLeafNode(otherlv_6, grammarAccess.getBodyAccess().getCommaKeyword_3_3_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getBodyAccess().getLinkLinkParserRuleCall_3_3_1_0());
						}
						lv_link_7_0=ruleLink
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getBodyRule());
							}
							add(
								$current,
								"link",
								lv_link_7_0,
								"de.fraunhofer.ipa.kinematics.xacro.Xacro.Link");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_8='}'
			{
				newLeafNode(otherlv_8, grammarAccess.getBodyAccess().getRightCurlyBracketKeyword_3_4());
			}
		)?
		(
			otherlv_9='joint'
			{
				newLeafNode(otherlv_9, grammarAccess.getBodyAccess().getJointKeyword_4_0());
			}
			otherlv_10='{'
			{
				newLeafNode(otherlv_10, grammarAccess.getBodyAccess().getLeftCurlyBracketKeyword_4_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getBodyAccess().getJointJointParserRuleCall_4_2_0());
					}
					lv_joint_11_0=ruleJoint
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getBodyRule());
						}
						add(
							$current,
							"joint",
							lv_joint_11_0,
							"de.fraunhofer.ipa.kinematics.xacro.Xacro.Joint");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_12=','
				{
					newLeafNode(otherlv_12, grammarAccess.getBodyAccess().getCommaKeyword_4_3_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getBodyAccess().getJointJointParserRuleCall_4_3_1_0());
						}
						lv_joint_13_0=ruleJoint
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getBodyRule());
							}
							add(
								$current,
								"joint",
								lv_joint_13_0,
								"de.fraunhofer.ipa.kinematics.xacro.Xacro.Joint");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_14='}'
			{
				newLeafNode(otherlv_14, grammarAccess.getBodyAccess().getRightCurlyBracketKeyword_4_4());
			}
		)?
		(
			otherlv_15='material'
			{
				newLeafNode(otherlv_15, grammarAccess.getBodyAccess().getMaterialKeyword_5_0());
			}
			otherlv_16='{'
			{
				newLeafNode(otherlv_16, grammarAccess.getBodyAccess().getLeftCurlyBracketKeyword_5_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getBodyAccess().getMaterialMaterialGlobalParserRuleCall_5_2_0());
					}
					lv_material_17_0=ruleMaterialGlobal
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getBodyRule());
						}
						add(
							$current,
							"material",
							lv_material_17_0,
							"de.fraunhofer.ipa.kinematics.xacro.Xacro.MaterialGlobal");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_18=','
				{
					newLeafNode(otherlv_18, grammarAccess.getBodyAccess().getCommaKeyword_5_3_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getBodyAccess().getMaterialMaterialGlobalParserRuleCall_5_3_1_0());
						}
						lv_material_19_0=ruleMaterialGlobal
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getBodyRule());
							}
							add(
								$current,
								"material",
								lv_material_19_0,
								"de.fraunhofer.ipa.kinematics.xacro.Xacro.MaterialGlobal");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_20='}'
			{
				newLeafNode(otherlv_20, grammarAccess.getBodyAccess().getRightCurlyBracketKeyword_5_4());
			}
		)?
		otherlv_21='}'
		{
			newLeafNode(otherlv_21, grammarAccess.getBodyAccess().getRightCurlyBracketKeyword_6());
		}
	)
;

// Entry rule entryRuleJoint
entryRuleJoint returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getJointRule()); }
	iv_ruleJoint=ruleJoint
	{ $current=$iv_ruleJoint.current; }
	EOF;

// Rule Joint
ruleJoint returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Joint'
		{
			newLeafNode(otherlv_0, grammarAccess.getJointAccess().getJointKeyword_0());
		}
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getJointAccess().getLeftCurlyBracketKeyword_1());
		}
		otherlv_2='name'
		{
			newLeafNode(otherlv_2, grammarAccess.getJointAccess().getNameKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getJointAccess().getNameEStringParserRuleCall_3_0());
				}
				lv_name_3_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getJointRule());
					}
					set(
						$current,
						"name",
						lv_name_3_0,
						"de.fraunhofer.ipa.kinematics.xacro.Xacro.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4='type'
		{
			newLeafNode(otherlv_4, grammarAccess.getJointAccess().getTypeKeyword_4());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getJointAccess().getTypeEStringParserRuleCall_5_0());
				}
				lv_type_5_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getJointRule());
					}
					set(
						$current,
						"type",
						lv_type_5_0,
						"de.fraunhofer.ipa.kinematics.xacro.Xacro.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_6='parent'
		{
			newLeafNode(otherlv_6, grammarAccess.getJointAccess().getParentKeyword_6());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getJointRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getJointAccess().getParentLinkCrossReference_7_0());
				}
				ruleEString
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_8='child'
		{
			newLeafNode(otherlv_8, grammarAccess.getJointAccess().getChildKeyword_8());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getJointRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getJointAccess().getChildLinkCrossReference_9_0());
				}
				ruleEString
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_10='origin'
			{
				newLeafNode(otherlv_10, grammarAccess.getJointAccess().getOriginKeyword_10_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getJointAccess().getOriginPoseParserRuleCall_10_1_0());
					}
					lv_origin_11_0=rulePose
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getJointRule());
						}
						set(
							$current,
							"origin",
							lv_origin_11_0,
							"de.fraunhofer.ipa.kinematics.xacro.Xacro.Pose");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_12='axis'
			{
				newLeafNode(otherlv_12, grammarAccess.getJointAccess().getAxisKeyword_11_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getJointAccess().getAxisAxisParserRuleCall_11_1_0());
					}
					lv_axis_13_0=ruleAxis
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getJointRule());
						}
						set(
							$current,
							"axis",
							lv_axis_13_0,
							"de.fraunhofer.ipa.kinematics.xacro.Xacro.Axis");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_14='calibration'
			{
				newLeafNode(otherlv_14, grammarAccess.getJointAccess().getCalibrationKeyword_12_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getJointAccess().getCalibrationCalibrationParserRuleCall_12_1_0());
					}
					lv_calibration_15_0=ruleCalibration
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getJointRule());
						}
						set(
							$current,
							"calibration",
							lv_calibration_15_0,
							"de.fraunhofer.ipa.kinematics.xacro.Xacro.Calibration");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_16='dynamics'
			{
				newLeafNode(otherlv_16, grammarAccess.getJointAccess().getDynamicsKeyword_13_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getJointAccess().getDynamicsDynamicsParserRuleCall_13_1_0());
					}
					lv_dynamics_17_0=ruleDynamics
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getJointRule());
						}
						set(
							$current,
							"dynamics",
							lv_dynamics_17_0,
							"de.fraunhofer.ipa.kinematics.xacro.Xacro.Dynamics");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_18='limit'
			{
				newLeafNode(otherlv_18, grammarAccess.getJointAccess().getLimitKeyword_14_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getJointAccess().getLimitLimitParserRuleCall_14_1_0());
					}
					lv_limit_19_0=ruleLimit
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getJointRule());
						}
						set(
							$current,
							"limit",
							lv_limit_19_0,
							"de.fraunhofer.ipa.kinematics.xacro.Xacro.Limit");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_20='safetyController'
			{
				newLeafNode(otherlv_20, grammarAccess.getJointAccess().getSafetyControllerKeyword_15_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getJointAccess().getSafetyControllerSafetyControllerParserRuleCall_15_1_0());
					}
					lv_safetyController_21_0=ruleSafetyController
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getJointRule());
						}
						set(
							$current,
							"safetyController",
							lv_safetyController_21_0,
							"de.fraunhofer.ipa.kinematics.xacro.Xacro.SafetyController");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_22='mimic'
			{
				newLeafNode(otherlv_22, grammarAccess.getJointAccess().getMimicKeyword_16_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getJointAccess().getMimicMimicParserRuleCall_16_1_0());
					}
					lv_mimic_23_0=ruleMimic
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getJointRule());
						}
						set(
							$current,
							"mimic",
							lv_mimic_23_0,
							"de.fraunhofer.ipa.kinematics.xacro.Xacro.Mimic");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_24='}'
		{
			newLeafNode(otherlv_24, grammarAccess.getJointAccess().getRightCurlyBracketKeyword_17());
		}
	)
;

// Entry rule entryRuleLink
entryRuleLink returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLinkRule()); }
	iv_ruleLink=ruleLink
	{ $current=$iv_ruleLink.current; }
	EOF;

// Rule Link
ruleLink returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Link'
		{
			newLeafNode(otherlv_0, grammarAccess.getLinkAccess().getLinkKeyword_0());
		}
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getLinkAccess().getLeftCurlyBracketKeyword_1());
		}
		otherlv_2='name'
		{
			newLeafNode(otherlv_2, grammarAccess.getLinkAccess().getNameKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getLinkAccess().getNameEStringParserRuleCall_3_0());
				}
				lv_name_3_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLinkRule());
					}
					set(
						$current,
						"name",
						lv_name_3_0,
						"de.fraunhofer.ipa.kinematics.xacro.Xacro.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_4='type'
			{
				newLeafNode(otherlv_4, grammarAccess.getLinkAccess().getTypeKeyword_4_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getLinkAccess().getTypeEStringParserRuleCall_4_1_0());
					}
					lv_type_5_0=ruleEString
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getLinkRule());
						}
						set(
							$current,
							"type",
							lv_type_5_0,
							"de.fraunhofer.ipa.kinematics.xacro.Xacro.EString");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_6='inertial'
			{
				newLeafNode(otherlv_6, grammarAccess.getLinkAccess().getInertialKeyword_5_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getLinkAccess().getInertialInertialParserRuleCall_5_1_0());
					}
					lv_inertial_7_0=ruleInertial
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getLinkRule());
						}
						set(
							$current,
							"inertial",
							lv_inertial_7_0,
							"de.fraunhofer.ipa.kinematics.xacro.Xacro.Inertial");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_8='visual'
			{
				newLeafNode(otherlv_8, grammarAccess.getLinkAccess().getVisualKeyword_6_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getLinkAccess().getVisualVisualParserRuleCall_6_1_0());
					}
					lv_visual_9_0=ruleVisual
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getLinkRule());
						}
						set(
							$current,
							"visual",
							lv_visual_9_0,
							"de.fraunhofer.ipa.kinematics.xacro.Xacro.Visual");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_10='collision'
			{
				newLeafNode(otherlv_10, grammarAccess.getLinkAccess().getCollisionKeyword_7_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getLinkAccess().getCollisionCollisionParserRuleCall_7_1_0());
					}
					lv_collision_11_0=ruleCollision
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getLinkRule());
						}
						set(
							$current,
							"collision",
							lv_collision_11_0,
							"de.fraunhofer.ipa.kinematics.xacro.Xacro.Collision");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_12='}'
		{
			newLeafNode(otherlv_12, grammarAccess.getLinkAccess().getRightCurlyBracketKeyword_8());
		}
	)
;

// Entry rule entryRuleMaterialGlobal
entryRuleMaterialGlobal returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMaterialGlobalRule()); }
	iv_ruleMaterialGlobal=ruleMaterialGlobal
	{ $current=$iv_ruleMaterialGlobal.current; }
	EOF;

// Rule MaterialGlobal
ruleMaterialGlobal returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='MaterialGlobal'
		{
			newLeafNode(otherlv_0, grammarAccess.getMaterialGlobalAccess().getMaterialGlobalKeyword_0());
		}
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getMaterialGlobalAccess().getLeftCurlyBracketKeyword_1());
		}
		otherlv_2='name'
		{
			newLeafNode(otherlv_2, grammarAccess.getMaterialGlobalAccess().getNameKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getMaterialGlobalAccess().getNameEStringParserRuleCall_3_0());
				}
				lv_name_3_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMaterialGlobalRule());
					}
					set(
						$current,
						"name",
						lv_name_3_0,
						"de.fraunhofer.ipa.kinematics.xacro.Xacro.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_4='color'
			{
				newLeafNode(otherlv_4, grammarAccess.getMaterialGlobalAccess().getColorKeyword_4_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getMaterialGlobalAccess().getColorColorParserRuleCall_4_1_0());
					}
					lv_color_5_0=ruleColor
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getMaterialGlobalRule());
						}
						set(
							$current,
							"color",
							lv_color_5_0,
							"de.fraunhofer.ipa.kinematics.xacro.Xacro.Color");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_6='texture'
			{
				newLeafNode(otherlv_6, grammarAccess.getMaterialGlobalAccess().getTextureKeyword_5_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getMaterialGlobalAccess().getTextureTextureParserRuleCall_5_1_0());
					}
					lv_texture_7_0=ruleTexture
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getMaterialGlobalRule());
						}
						set(
							$current,
							"texture",
							lv_texture_7_0,
							"de.fraunhofer.ipa.kinematics.xacro.Xacro.Texture");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_8='}'
		{
			newLeafNode(otherlv_8, grammarAccess.getMaterialGlobalAccess().getRightCurlyBracketKeyword_6());
		}
	)
;

// Entry rule entryRulePose
entryRulePose returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPoseRule()); }
	iv_rulePose=rulePose
	{ $current=$iv_rulePose.current; }
	EOF;

// Rule Pose
rulePose returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getPoseAccess().getPoseAction_0(),
					$current);
			}
		)
		otherlv_1='Pose'
		{
			newLeafNode(otherlv_1, grammarAccess.getPoseAccess().getPoseKeyword_1());
		}
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getPoseAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			otherlv_3='rpy'
			{
				newLeafNode(otherlv_3, grammarAccess.getPoseAccess().getRpyKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getPoseAccess().getRpyEStringParserRuleCall_3_1_0());
					}
					lv_rpy_4_0=ruleEString
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPoseRule());
						}
						set(
							$current,
							"rpy",
							lv_rpy_4_0,
							"de.fraunhofer.ipa.kinematics.xacro.Xacro.EString");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_5='xyz'
			{
				newLeafNode(otherlv_5, grammarAccess.getPoseAccess().getXyzKeyword_4_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getPoseAccess().getXyzEStringParserRuleCall_4_1_0());
					}
					lv_xyz_6_0=ruleEString
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPoseRule());
						}
						set(
							$current,
							"xyz",
							lv_xyz_6_0,
							"de.fraunhofer.ipa.kinematics.xacro.Xacro.EString");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_7='}'
		{
			newLeafNode(otherlv_7, grammarAccess.getPoseAccess().getRightCurlyBracketKeyword_5());
		}
	)
;

// Entry rule entryRuleAxis
entryRuleAxis returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAxisRule()); }
	iv_ruleAxis=ruleAxis
	{ $current=$iv_ruleAxis.current; }
	EOF;

// Rule Axis
ruleAxis returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getAxisAccess().getAxisAction_0(),
					$current);
			}
		)
		otherlv_1='Axis'
		{
			newLeafNode(otherlv_1, grammarAccess.getAxisAccess().getAxisKeyword_1());
		}
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getAxisAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			otherlv_3='xyz'
			{
				newLeafNode(otherlv_3, grammarAccess.getAxisAccess().getXyzKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getAxisAccess().getXyzEStringParserRuleCall_3_1_0());
					}
					lv_xyz_4_0=ruleEString
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAxisRule());
						}
						set(
							$current,
							"xyz",
							lv_xyz_4_0,
							"de.fraunhofer.ipa.kinematics.xacro.Xacro.EString");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_5='}'
		{
			newLeafNode(otherlv_5, grammarAccess.getAxisAccess().getRightCurlyBracketKeyword_4());
		}
	)
;

// Entry rule entryRuleCalibration
entryRuleCalibration returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCalibrationRule()); }
	iv_ruleCalibration=ruleCalibration
	{ $current=$iv_ruleCalibration.current; }
	EOF;

// Rule Calibration
ruleCalibration returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getCalibrationAccess().getCalibrationAction_0(),
					$current);
			}
		)
		otherlv_1='Calibration'
		{
			newLeafNode(otherlv_1, grammarAccess.getCalibrationAccess().getCalibrationKeyword_1());
		}
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getCalibrationAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			otherlv_3='falling'
			{
				newLeafNode(otherlv_3, grammarAccess.getCalibrationAccess().getFallingKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getCalibrationAccess().getFallingDouble0ParserRuleCall_3_1_0());
					}
					lv_falling_4_0=ruleDouble0
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getCalibrationRule());
						}
						set(
							$current,
							"falling",
							lv_falling_4_0,
							"de.fraunhofer.ipa.kinematics.xacro.Xacro.Double0");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_5='referencePosition'
			{
				newLeafNode(otherlv_5, grammarAccess.getCalibrationAccess().getReferencePositionKeyword_4_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getCalibrationAccess().getReferencePositionDouble0ParserRuleCall_4_1_0());
					}
					lv_referencePosition_6_0=ruleDouble0
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getCalibrationRule());
						}
						set(
							$current,
							"referencePosition",
							lv_referencePosition_6_0,
							"de.fraunhofer.ipa.kinematics.xacro.Xacro.Double0");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_7='rising'
			{
				newLeafNode(otherlv_7, grammarAccess.getCalibrationAccess().getRisingKeyword_5_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getCalibrationAccess().getRisingDouble0ParserRuleCall_5_1_0());
					}
					lv_rising_8_0=ruleDouble0
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getCalibrationRule());
						}
						set(
							$current,
							"rising",
							lv_rising_8_0,
							"de.fraunhofer.ipa.kinematics.xacro.Xacro.Double0");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_9='}'
		{
			newLeafNode(otherlv_9, grammarAccess.getCalibrationAccess().getRightCurlyBracketKeyword_6());
		}
	)
;

// Entry rule entryRuleDynamics
entryRuleDynamics returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDynamicsRule()); }
	iv_ruleDynamics=ruleDynamics
	{ $current=$iv_ruleDynamics.current; }
	EOF;

// Rule Dynamics
ruleDynamics returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getDynamicsAccess().getDynamicsAction_0(),
					$current);
			}
		)
		otherlv_1='Dynamics'
		{
			newLeafNode(otherlv_1, grammarAccess.getDynamicsAccess().getDynamicsKeyword_1());
		}
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getDynamicsAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			otherlv_3='damping'
			{
				newLeafNode(otherlv_3, grammarAccess.getDynamicsAccess().getDampingKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getDynamicsAccess().getDampingDouble0ParserRuleCall_3_1_0());
					}
					lv_damping_4_0=ruleDouble0
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getDynamicsRule());
						}
						set(
							$current,
							"damping",
							lv_damping_4_0,
							"de.fraunhofer.ipa.kinematics.xacro.Xacro.Double0");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_5='friction'
			{
				newLeafNode(otherlv_5, grammarAccess.getDynamicsAccess().getFrictionKeyword_4_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getDynamicsAccess().getFrictionDouble0ParserRuleCall_4_1_0());
					}
					lv_friction_6_0=ruleDouble0
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getDynamicsRule());
						}
						set(
							$current,
							"friction",
							lv_friction_6_0,
							"de.fraunhofer.ipa.kinematics.xacro.Xacro.Double0");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_7='}'
		{
			newLeafNode(otherlv_7, grammarAccess.getDynamicsAccess().getRightCurlyBracketKeyword_5());
		}
	)
;

// Entry rule entryRuleLimit
entryRuleLimit returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLimitRule()); }
	iv_ruleLimit=ruleLimit
	{ $current=$iv_ruleLimit.current; }
	EOF;

// Rule Limit
ruleLimit returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getLimitAccess().getLimitAction_0(),
					$current);
			}
		)
		otherlv_1='Limit'
		{
			newLeafNode(otherlv_1, grammarAccess.getLimitAccess().getLimitKeyword_1());
		}
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getLimitAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			otherlv_3='effort'
			{
				newLeafNode(otherlv_3, grammarAccess.getLimitAccess().getEffortKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getLimitAccess().getEffortDouble0ParserRuleCall_3_1_0());
					}
					lv_effort_4_0=ruleDouble0
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getLimitRule());
						}
						set(
							$current,
							"effort",
							lv_effort_4_0,
							"de.fraunhofer.ipa.kinematics.xacro.Xacro.Double0");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_5='lower'
			{
				newLeafNode(otherlv_5, grammarAccess.getLimitAccess().getLowerKeyword_4_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getLimitAccess().getLowerDouble0ParserRuleCall_4_1_0());
					}
					lv_lower_6_0=ruleDouble0
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getLimitRule());
						}
						set(
							$current,
							"lower",
							lv_lower_6_0,
							"de.fraunhofer.ipa.kinematics.xacro.Xacro.Double0");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_7='upper'
			{
				newLeafNode(otherlv_7, grammarAccess.getLimitAccess().getUpperKeyword_5_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getLimitAccess().getUpperDouble0ParserRuleCall_5_1_0());
					}
					lv_upper_8_0=ruleDouble0
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getLimitRule());
						}
						set(
							$current,
							"upper",
							lv_upper_8_0,
							"de.fraunhofer.ipa.kinematics.xacro.Xacro.Double0");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_9='velocity'
			{
				newLeafNode(otherlv_9, grammarAccess.getLimitAccess().getVelocityKeyword_6_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getLimitAccess().getVelocityDouble0ParserRuleCall_6_1_0());
					}
					lv_velocity_10_0=ruleDouble0
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getLimitRule());
						}
						set(
							$current,
							"velocity",
							lv_velocity_10_0,
							"de.fraunhofer.ipa.kinematics.xacro.Xacro.Double0");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_11='}'
		{
			newLeafNode(otherlv_11, grammarAccess.getLimitAccess().getRightCurlyBracketKeyword_7());
		}
	)
;

// Entry rule entryRuleSafetyController
entryRuleSafetyController returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSafetyControllerRule()); }
	iv_ruleSafetyController=ruleSafetyController
	{ $current=$iv_ruleSafetyController.current; }
	EOF;

// Rule SafetyController
ruleSafetyController returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='SafetyController'
		{
			newLeafNode(otherlv_0, grammarAccess.getSafetyControllerAccess().getSafetyControllerKeyword_0());
		}
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getSafetyControllerAccess().getLeftCurlyBracketKeyword_1());
		}
		(
			otherlv_2='kPosition'
			{
				newLeafNode(otherlv_2, grammarAccess.getSafetyControllerAccess().getKPositionKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getSafetyControllerAccess().getKPositionDouble0ParserRuleCall_2_1_0());
					}
					lv_kPosition_3_0=ruleDouble0
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSafetyControllerRule());
						}
						set(
							$current,
							"kPosition",
							lv_kPosition_3_0,
							"de.fraunhofer.ipa.kinematics.xacro.Xacro.Double0");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_4='kVelocity'
		{
			newLeafNode(otherlv_4, grammarAccess.getSafetyControllerAccess().getKVelocityKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getSafetyControllerAccess().getKVelocityDouble0ParserRuleCall_4_0());
				}
				lv_kVelocity_5_0=ruleDouble0
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSafetyControllerRule());
					}
					set(
						$current,
						"kVelocity",
						lv_kVelocity_5_0,
						"de.fraunhofer.ipa.kinematics.xacro.Xacro.Double0");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_6='softLowerLimit'
			{
				newLeafNode(otherlv_6, grammarAccess.getSafetyControllerAccess().getSoftLowerLimitKeyword_5_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getSafetyControllerAccess().getSoftLowerLimitDouble0ParserRuleCall_5_1_0());
					}
					lv_softLowerLimit_7_0=ruleDouble0
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSafetyControllerRule());
						}
						set(
							$current,
							"softLowerLimit",
							lv_softLowerLimit_7_0,
							"de.fraunhofer.ipa.kinematics.xacro.Xacro.Double0");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_8='softUpperLimit'
			{
				newLeafNode(otherlv_8, grammarAccess.getSafetyControllerAccess().getSoftUpperLimitKeyword_6_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getSafetyControllerAccess().getSoftUpperLimitDouble0ParserRuleCall_6_1_0());
					}
					lv_softUpperLimit_9_0=ruleDouble0
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSafetyControllerRule());
						}
						set(
							$current,
							"softUpperLimit",
							lv_softUpperLimit_9_0,
							"de.fraunhofer.ipa.kinematics.xacro.Xacro.Double0");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_10='}'
		{
			newLeafNode(otherlv_10, grammarAccess.getSafetyControllerAccess().getRightCurlyBracketKeyword_7());
		}
	)
;

// Entry rule entryRuleMimic
entryRuleMimic returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMimicRule()); }
	iv_ruleMimic=ruleMimic
	{ $current=$iv_ruleMimic.current; }
	EOF;

// Rule Mimic
ruleMimic returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Mimic'
		{
			newLeafNode(otherlv_0, grammarAccess.getMimicAccess().getMimicKeyword_0());
		}
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getMimicAccess().getLeftCurlyBracketKeyword_1());
		}
		otherlv_2='joint'
		{
			newLeafNode(otherlv_2, grammarAccess.getMimicAccess().getJointKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getMimicAccess().getJointEStringParserRuleCall_3_0());
				}
				lv_joint_3_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMimicRule());
					}
					set(
						$current,
						"joint",
						lv_joint_3_0,
						"de.fraunhofer.ipa.kinematics.xacro.Xacro.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_4='multiplier'
			{
				newLeafNode(otherlv_4, grammarAccess.getMimicAccess().getMultiplierKeyword_4_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getMimicAccess().getMultiplierDouble0ParserRuleCall_4_1_0());
					}
					lv_multiplier_5_0=ruleDouble0
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getMimicRule());
						}
						set(
							$current,
							"multiplier",
							lv_multiplier_5_0,
							"de.fraunhofer.ipa.kinematics.xacro.Xacro.Double0");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_6='offset'
			{
				newLeafNode(otherlv_6, grammarAccess.getMimicAccess().getOffsetKeyword_5_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getMimicAccess().getOffsetDouble0ParserRuleCall_5_1_0());
					}
					lv_offset_7_0=ruleDouble0
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getMimicRule());
						}
						set(
							$current,
							"offset",
							lv_offset_7_0,
							"de.fraunhofer.ipa.kinematics.xacro.Xacro.Double0");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_8='}'
		{
			newLeafNode(otherlv_8, grammarAccess.getMimicAccess().getRightCurlyBracketKeyword_6());
		}
	)
;

// Entry rule entryRuleInertial
entryRuleInertial returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getInertialRule()); }
	iv_ruleInertial=ruleInertial
	{ $current=$iv_ruleInertial.current; }
	EOF;

// Rule Inertial
ruleInertial returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getInertialAccess().getInertialAction_0(),
					$current);
			}
		)
		otherlv_1='Inertial'
		{
			newLeafNode(otherlv_1, grammarAccess.getInertialAccess().getInertialKeyword_1());
		}
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getInertialAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			otherlv_3='origin'
			{
				newLeafNode(otherlv_3, grammarAccess.getInertialAccess().getOriginKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getInertialAccess().getOriginPoseParserRuleCall_3_1_0());
					}
					lv_origin_4_0=rulePose
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getInertialRule());
						}
						set(
							$current,
							"origin",
							lv_origin_4_0,
							"de.fraunhofer.ipa.kinematics.xacro.Xacro.Pose");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_5='mass'
			{
				newLeafNode(otherlv_5, grammarAccess.getInertialAccess().getMassKeyword_4_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getInertialAccess().getMassMassParserRuleCall_4_1_0());
					}
					lv_mass_6_0=ruleMass
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getInertialRule());
						}
						set(
							$current,
							"mass",
							lv_mass_6_0,
							"de.fraunhofer.ipa.kinematics.xacro.Xacro.Mass");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_7='inertia'
			{
				newLeafNode(otherlv_7, grammarAccess.getInertialAccess().getInertiaKeyword_5_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getInertialAccess().getInertiaInertiaParserRuleCall_5_1_0());
					}
					lv_inertia_8_0=ruleInertia
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getInertialRule());
						}
						set(
							$current,
							"inertia",
							lv_inertia_8_0,
							"de.fraunhofer.ipa.kinematics.xacro.Xacro.Inertia");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_9='}'
		{
			newLeafNode(otherlv_9, grammarAccess.getInertialAccess().getRightCurlyBracketKeyword_6());
		}
	)
;

// Entry rule entryRuleVisual
entryRuleVisual returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getVisualRule()); }
	iv_ruleVisual=ruleVisual
	{ $current=$iv_ruleVisual.current; }
	EOF;

// Rule Visual
ruleVisual returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Visual'
		{
			newLeafNode(otherlv_0, grammarAccess.getVisualAccess().getVisualKeyword_0());
		}
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getVisualAccess().getLeftCurlyBracketKeyword_1());
		}
		(
			otherlv_2='origin'
			{
				newLeafNode(otherlv_2, grammarAccess.getVisualAccess().getOriginKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getVisualAccess().getOriginPoseParserRuleCall_2_1_0());
					}
					lv_origin_3_0=rulePose
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getVisualRule());
						}
						set(
							$current,
							"origin",
							lv_origin_3_0,
							"de.fraunhofer.ipa.kinematics.xacro.Xacro.Pose");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_4='geometry'
		{
			newLeafNode(otherlv_4, grammarAccess.getVisualAccess().getGeometryKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getVisualAccess().getGeometryGeometryParserRuleCall_4_0());
				}
				lv_geometry_5_0=ruleGeometry
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getVisualRule());
					}
					set(
						$current,
						"geometry",
						lv_geometry_5_0,
						"de.fraunhofer.ipa.kinematics.xacro.Xacro.Geometry");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_6='material'
			{
				newLeafNode(otherlv_6, grammarAccess.getVisualAccess().getMaterialKeyword_5_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getVisualAccess().getMaterialMaterialParserRuleCall_5_1_0());
					}
					lv_material_7_0=ruleMaterial
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getVisualRule());
						}
						set(
							$current,
							"material",
							lv_material_7_0,
							"de.fraunhofer.ipa.kinematics.xacro.Xacro.Material");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_8='}'
		{
			newLeafNode(otherlv_8, grammarAccess.getVisualAccess().getRightCurlyBracketKeyword_6());
		}
	)
;

// Entry rule entryRuleCollision
entryRuleCollision returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCollisionRule()); }
	iv_ruleCollision=ruleCollision
	{ $current=$iv_ruleCollision.current; }
	EOF;

// Rule Collision
ruleCollision returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Collision'
		{
			newLeafNode(otherlv_0, grammarAccess.getCollisionAccess().getCollisionKeyword_0());
		}
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getCollisionAccess().getLeftCurlyBracketKeyword_1());
		}
		(
			otherlv_2='name'
			{
				newLeafNode(otherlv_2, grammarAccess.getCollisionAccess().getNameKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getCollisionAccess().getNameEStringParserRuleCall_2_1_0());
					}
					lv_name_3_0=ruleEString
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getCollisionRule());
						}
						set(
							$current,
							"name",
							lv_name_3_0,
							"de.fraunhofer.ipa.kinematics.xacro.Xacro.EString");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_4='origin'
			{
				newLeafNode(otherlv_4, grammarAccess.getCollisionAccess().getOriginKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getCollisionAccess().getOriginPoseParserRuleCall_3_1_0());
					}
					lv_origin_5_0=rulePose
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getCollisionRule());
						}
						set(
							$current,
							"origin",
							lv_origin_5_0,
							"de.fraunhofer.ipa.kinematics.xacro.Xacro.Pose");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_6='geometry'
		{
			newLeafNode(otherlv_6, grammarAccess.getCollisionAccess().getGeometryKeyword_4());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getCollisionAccess().getGeometryGeometryParserRuleCall_5_0());
				}
				lv_geometry_7_0=ruleGeometry
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCollisionRule());
					}
					set(
						$current,
						"geometry",
						lv_geometry_7_0,
						"de.fraunhofer.ipa.kinematics.xacro.Xacro.Geometry");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_8='verbose'
			{
				newLeafNode(otherlv_8, grammarAccess.getCollisionAccess().getVerboseKeyword_6_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getCollisionAccess().getVerboseVerboseParserRuleCall_6_1_0());
					}
					lv_verbose_9_0=ruleVerbose
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getCollisionRule());
						}
						set(
							$current,
							"verbose",
							lv_verbose_9_0,
							"de.fraunhofer.ipa.kinematics.xacro.Xacro.Verbose");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_10='}'
		{
			newLeafNode(otherlv_10, grammarAccess.getCollisionAccess().getRightCurlyBracketKeyword_7());
		}
	)
;

// Entry rule entryRuleMass
entryRuleMass returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMassRule()); }
	iv_ruleMass=ruleMass
	{ $current=$iv_ruleMass.current; }
	EOF;

// Rule Mass
ruleMass returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getMassAccess().getMassAction_0(),
					$current);
			}
		)
		otherlv_1='Mass'
		{
			newLeafNode(otherlv_1, grammarAccess.getMassAccess().getMassKeyword_1());
		}
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getMassAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			otherlv_3='value'
			{
				newLeafNode(otherlv_3, grammarAccess.getMassAccess().getValueKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getMassAccess().getValueDouble0ParserRuleCall_3_1_0());
					}
					lv_value_4_0=ruleDouble0
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getMassRule());
						}
						set(
							$current,
							"value",
							lv_value_4_0,
							"de.fraunhofer.ipa.kinematics.xacro.Xacro.Double0");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_5='}'
		{
			newLeafNode(otherlv_5, grammarAccess.getMassAccess().getRightCurlyBracketKeyword_4());
		}
	)
;

// Entry rule entryRuleInertia
entryRuleInertia returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getInertiaRule()); }
	iv_ruleInertia=ruleInertia
	{ $current=$iv_ruleInertia.current; }
	EOF;

// Rule Inertia
ruleInertia returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getInertiaAccess().getInertiaAction_0(),
					$current);
			}
		)
		otherlv_1='Inertia'
		{
			newLeafNode(otherlv_1, grammarAccess.getInertiaAccess().getInertiaKeyword_1());
		}
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getInertiaAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			otherlv_3='ixx'
			{
				newLeafNode(otherlv_3, grammarAccess.getInertiaAccess().getIxxKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getInertiaAccess().getIxxDouble0ParserRuleCall_3_1_0());
					}
					lv_ixx_4_0=ruleDouble0
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getInertiaRule());
						}
						set(
							$current,
							"ixx",
							lv_ixx_4_0,
							"de.fraunhofer.ipa.kinematics.xacro.Xacro.Double0");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_5='ixy'
			{
				newLeafNode(otherlv_5, grammarAccess.getInertiaAccess().getIxyKeyword_4_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getInertiaAccess().getIxyDouble0ParserRuleCall_4_1_0());
					}
					lv_ixy_6_0=ruleDouble0
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getInertiaRule());
						}
						set(
							$current,
							"ixy",
							lv_ixy_6_0,
							"de.fraunhofer.ipa.kinematics.xacro.Xacro.Double0");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_7='ixz'
			{
				newLeafNode(otherlv_7, grammarAccess.getInertiaAccess().getIxzKeyword_5_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getInertiaAccess().getIxzDouble0ParserRuleCall_5_1_0());
					}
					lv_ixz_8_0=ruleDouble0
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getInertiaRule());
						}
						set(
							$current,
							"ixz",
							lv_ixz_8_0,
							"de.fraunhofer.ipa.kinematics.xacro.Xacro.Double0");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_9='iyy'
			{
				newLeafNode(otherlv_9, grammarAccess.getInertiaAccess().getIyyKeyword_6_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getInertiaAccess().getIyyDouble0ParserRuleCall_6_1_0());
					}
					lv_iyy_10_0=ruleDouble0
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getInertiaRule());
						}
						set(
							$current,
							"iyy",
							lv_iyy_10_0,
							"de.fraunhofer.ipa.kinematics.xacro.Xacro.Double0");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_11='iyz'
			{
				newLeafNode(otherlv_11, grammarAccess.getInertiaAccess().getIyzKeyword_7_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getInertiaAccess().getIyzDouble0ParserRuleCall_7_1_0());
					}
					lv_iyz_12_0=ruleDouble0
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getInertiaRule());
						}
						set(
							$current,
							"iyz",
							lv_iyz_12_0,
							"de.fraunhofer.ipa.kinematics.xacro.Xacro.Double0");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_13='izz'
			{
				newLeafNode(otherlv_13, grammarAccess.getInertiaAccess().getIzzKeyword_8_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getInertiaAccess().getIzzDouble0ParserRuleCall_8_1_0());
					}
					lv_izz_14_0=ruleDouble0
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getInertiaRule());
						}
						set(
							$current,
							"izz",
							lv_izz_14_0,
							"de.fraunhofer.ipa.kinematics.xacro.Xacro.Double0");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_15='}'
		{
			newLeafNode(otherlv_15, grammarAccess.getInertiaAccess().getRightCurlyBracketKeyword_9());
		}
	)
;

// Entry rule entryRuleGeometry
entryRuleGeometry returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getGeometryRule()); }
	iv_ruleGeometry=ruleGeometry
	{ $current=$iv_ruleGeometry.current; }
	EOF;

// Rule Geometry
ruleGeometry returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getGeometryAccess().getGeometryAction_0(),
					$current);
			}
		)
		otherlv_1='Geometry'
		{
			newLeafNode(otherlv_1, grammarAccess.getGeometryAccess().getGeometryKeyword_1());
		}
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getGeometryAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			otherlv_3='box'
			{
				newLeafNode(otherlv_3, grammarAccess.getGeometryAccess().getBoxKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getGeometryAccess().getBoxBoxParserRuleCall_3_1_0());
					}
					lv_box_4_0=ruleBox
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getGeometryRule());
						}
						set(
							$current,
							"box",
							lv_box_4_0,
							"de.fraunhofer.ipa.kinematics.xacro.Xacro.Box");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_5='cylinder'
			{
				newLeafNode(otherlv_5, grammarAccess.getGeometryAccess().getCylinderKeyword_4_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getGeometryAccess().getCylinderCylinderParserRuleCall_4_1_0());
					}
					lv_cylinder_6_0=ruleCylinder
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getGeometryRule());
						}
						set(
							$current,
							"cylinder",
							lv_cylinder_6_0,
							"de.fraunhofer.ipa.kinematics.xacro.Xacro.Cylinder");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_7='sphere'
			{
				newLeafNode(otherlv_7, grammarAccess.getGeometryAccess().getSphereKeyword_5_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getGeometryAccess().getSphereSphereParserRuleCall_5_1_0());
					}
					lv_sphere_8_0=ruleSphere
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getGeometryRule());
						}
						set(
							$current,
							"sphere",
							lv_sphere_8_0,
							"de.fraunhofer.ipa.kinematics.xacro.Xacro.Sphere");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_9='mesh'
			{
				newLeafNode(otherlv_9, grammarAccess.getGeometryAccess().getMeshKeyword_6_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getGeometryAccess().getMeshMeshParserRuleCall_6_1_0());
					}
					lv_mesh_10_0=ruleMesh
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getGeometryRule());
						}
						set(
							$current,
							"mesh",
							lv_mesh_10_0,
							"de.fraunhofer.ipa.kinematics.xacro.Xacro.Mesh");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_11='}'
		{
			newLeafNode(otherlv_11, grammarAccess.getGeometryAccess().getRightCurlyBracketKeyword_7());
		}
	)
;

// Entry rule entryRuleMaterial
entryRuleMaterial returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMaterialRule()); }
	iv_ruleMaterial=ruleMaterial
	{ $current=$iv_ruleMaterial.current; }
	EOF;

// Rule Material
ruleMaterial returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getMaterialAccess().getMaterialAction_0(),
					$current);
			}
		)
		otherlv_1='Material'
		{
			newLeafNode(otherlv_1, grammarAccess.getMaterialAccess().getMaterialKeyword_1());
		}
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getMaterialAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			otherlv_3='name'
			{
				newLeafNode(otherlv_3, grammarAccess.getMaterialAccess().getNameKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getMaterialAccess().getNameEStringParserRuleCall_3_1_0());
					}
					lv_name_4_0=ruleEString
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getMaterialRule());
						}
						set(
							$current,
							"name",
							lv_name_4_0,
							"de.fraunhofer.ipa.kinematics.xacro.Xacro.EString");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_5='color'
			{
				newLeafNode(otherlv_5, grammarAccess.getMaterialAccess().getColorKeyword_4_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getMaterialAccess().getColorColorParserRuleCall_4_1_0());
					}
					lv_color_6_0=ruleColor
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getMaterialRule());
						}
						set(
							$current,
							"color",
							lv_color_6_0,
							"de.fraunhofer.ipa.kinematics.xacro.Xacro.Color");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_7='texture'
			{
				newLeafNode(otherlv_7, grammarAccess.getMaterialAccess().getTextureKeyword_5_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getMaterialAccess().getTextureTextureParserRuleCall_5_1_0());
					}
					lv_texture_8_0=ruleTexture
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getMaterialRule());
						}
						set(
							$current,
							"texture",
							lv_texture_8_0,
							"de.fraunhofer.ipa.kinematics.xacro.Xacro.Texture");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_9='}'
		{
			newLeafNode(otherlv_9, grammarAccess.getMaterialAccess().getRightCurlyBracketKeyword_6());
		}
	)
;

// Entry rule entryRuleBox
entryRuleBox returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBoxRule()); }
	iv_ruleBox=ruleBox
	{ $current=$iv_ruleBox.current; }
	EOF;

// Rule Box
ruleBox returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getBoxAccess().getBoxAction_0(),
					$current);
			}
		)
		otherlv_1='Box'
		{
			newLeafNode(otherlv_1, grammarAccess.getBoxAccess().getBoxKeyword_1());
		}
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getBoxAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			otherlv_3='size'
			{
				newLeafNode(otherlv_3, grammarAccess.getBoxAccess().getSizeKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getBoxAccess().getSizeEStringParserRuleCall_3_1_0());
					}
					lv_size_4_0=ruleEString
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getBoxRule());
						}
						set(
							$current,
							"size",
							lv_size_4_0,
							"de.fraunhofer.ipa.kinematics.xacro.Xacro.EString");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_5='}'
		{
			newLeafNode(otherlv_5, grammarAccess.getBoxAccess().getRightCurlyBracketKeyword_4());
		}
	)
;

// Entry rule entryRuleCylinder
entryRuleCylinder returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCylinderRule()); }
	iv_ruleCylinder=ruleCylinder
	{ $current=$iv_ruleCylinder.current; }
	EOF;

// Rule Cylinder
ruleCylinder returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Cylinder'
		{
			newLeafNode(otherlv_0, grammarAccess.getCylinderAccess().getCylinderKeyword_0());
		}
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getCylinderAccess().getLeftCurlyBracketKeyword_1());
		}
		otherlv_2='length'
		{
			newLeafNode(otherlv_2, grammarAccess.getCylinderAccess().getLengthKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getCylinderAccess().getLengthDouble0ParserRuleCall_3_0());
				}
				lv_length_3_0=ruleDouble0
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCylinderRule());
					}
					set(
						$current,
						"length",
						lv_length_3_0,
						"de.fraunhofer.ipa.kinematics.xacro.Xacro.Double0");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4='radius'
		{
			newLeafNode(otherlv_4, grammarAccess.getCylinderAccess().getRadiusKeyword_4());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getCylinderAccess().getRadiusDouble0ParserRuleCall_5_0());
				}
				lv_radius_5_0=ruleDouble0
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCylinderRule());
					}
					set(
						$current,
						"radius",
						lv_radius_5_0,
						"de.fraunhofer.ipa.kinematics.xacro.Xacro.Double0");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_6='}'
		{
			newLeafNode(otherlv_6, grammarAccess.getCylinderAccess().getRightCurlyBracketKeyword_6());
		}
	)
;

// Entry rule entryRuleSphere
entryRuleSphere returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSphereRule()); }
	iv_ruleSphere=ruleSphere
	{ $current=$iv_ruleSphere.current; }
	EOF;

// Rule Sphere
ruleSphere returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Sphere'
		{
			newLeafNode(otherlv_0, grammarAccess.getSphereAccess().getSphereKeyword_0());
		}
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getSphereAccess().getLeftCurlyBracketKeyword_1());
		}
		otherlv_2='radius'
		{
			newLeafNode(otherlv_2, grammarAccess.getSphereAccess().getRadiusKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getSphereAccess().getRadiusDouble0ParserRuleCall_3_0());
				}
				lv_radius_3_0=ruleDouble0
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSphereRule());
					}
					set(
						$current,
						"radius",
						lv_radius_3_0,
						"de.fraunhofer.ipa.kinematics.xacro.Xacro.Double0");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4='}'
		{
			newLeafNode(otherlv_4, grammarAccess.getSphereAccess().getRightCurlyBracketKeyword_4());
		}
	)
;

// Entry rule entryRuleMesh
entryRuleMesh returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMeshRule()); }
	iv_ruleMesh=ruleMesh
	{ $current=$iv_ruleMesh.current; }
	EOF;

// Rule Mesh
ruleMesh returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Mesh'
		{
			newLeafNode(otherlv_0, grammarAccess.getMeshAccess().getMeshKeyword_0());
		}
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getMeshAccess().getLeftCurlyBracketKeyword_1());
		}
		otherlv_2='filename'
		{
			newLeafNode(otherlv_2, grammarAccess.getMeshAccess().getFilenameKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getMeshAccess().getFilenameAnyURIParserRuleCall_3_0());
				}
				lv_filename_3_0=ruleAnyURI
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMeshRule());
					}
					set(
						$current,
						"filename",
						lv_filename_3_0,
						"de.fraunhofer.ipa.kinematics.xacro.Xacro.AnyURI");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_4='scale'
			{
				newLeafNode(otherlv_4, grammarAccess.getMeshAccess().getScaleKeyword_4_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getMeshAccess().getScaleEStringParserRuleCall_4_1_0());
					}
					lv_scale_5_0=ruleEString
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getMeshRule());
						}
						set(
							$current,
							"scale",
							lv_scale_5_0,
							"de.fraunhofer.ipa.kinematics.xacro.Xacro.EString");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_6='}'
		{
			newLeafNode(otherlv_6, grammarAccess.getMeshAccess().getRightCurlyBracketKeyword_5());
		}
	)
;

// Entry rule entryRuleAnyURI
entryRuleAnyURI returns [String current=null]:
	{ newCompositeNode(grammarAccess.getAnyURIRule()); }
	iv_ruleAnyURI=ruleAnyURI
	{ $current=$iv_ruleAnyURI.current.getText(); }
	EOF;

// Rule AnyURI
ruleAnyURI returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	kw='AnyURI'
	{
		$current.merge(kw);
		newLeafNode(kw, grammarAccess.getAnyURIAccess().getAnyURIKeyword());
	}
;

// Entry rule entryRuleColor
entryRuleColor returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getColorRule()); }
	iv_ruleColor=ruleColor
	{ $current=$iv_ruleColor.current; }
	EOF;

// Rule Color
ruleColor returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getColorAccess().getColorAction_0(),
					$current);
			}
		)
		otherlv_1='Color'
		{
			newLeafNode(otherlv_1, grammarAccess.getColorAccess().getColorKeyword_1());
		}
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getColorAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			otherlv_3='rgba'
			{
				newLeafNode(otherlv_3, grammarAccess.getColorAccess().getRgbaKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getColorAccess().getRgbaEStringParserRuleCall_3_1_0());
					}
					lv_rgba_4_0=ruleEString
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getColorRule());
						}
						set(
							$current,
							"rgba",
							lv_rgba_4_0,
							"de.fraunhofer.ipa.kinematics.xacro.Xacro.EString");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_5='}'
		{
			newLeafNode(otherlv_5, grammarAccess.getColorAccess().getRightCurlyBracketKeyword_4());
		}
	)
;

// Entry rule entryRuleTexture
entryRuleTexture returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTextureRule()); }
	iv_ruleTexture=ruleTexture
	{ $current=$iv_ruleTexture.current; }
	EOF;

// Rule Texture
ruleTexture returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getTextureAccess().getTextureAction_0(),
					$current);
			}
		)
		otherlv_1='Texture'
		{
			newLeafNode(otherlv_1, grammarAccess.getTextureAccess().getTextureKeyword_1());
		}
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getTextureAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			otherlv_3='filename'
			{
				newLeafNode(otherlv_3, grammarAccess.getTextureAccess().getFilenameKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getTextureAccess().getFilenameAnyURIParserRuleCall_3_1_0());
					}
					lv_filename_4_0=ruleAnyURI
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTextureRule());
						}
						set(
							$current,
							"filename",
							lv_filename_4_0,
							"de.fraunhofer.ipa.kinematics.xacro.Xacro.AnyURI");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_5='}'
		{
			newLeafNode(otherlv_5, grammarAccess.getTextureAccess().getRightCurlyBracketKeyword_4());
		}
	)
;

// Entry rule entryRuleVerbose
entryRuleVerbose returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getVerboseRule()); }
	iv_ruleVerbose=ruleVerbose
	{ $current=$iv_ruleVerbose.current; }
	EOF;

// Rule Verbose
ruleVerbose returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getVerboseAccess().getVerboseAction_0(),
					$current);
			}
		)
		otherlv_1='Verbose'
		{
			newLeafNode(otherlv_1, grammarAccess.getVerboseAccess().getVerboseKeyword_1());
		}
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getVerboseAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			otherlv_3='value'
			{
				newLeafNode(otherlv_3, grammarAccess.getVerboseAccess().getValueKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getVerboseAccess().getValueEStringParserRuleCall_3_1_0());
					}
					lv_value_4_0=ruleEString
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getVerboseRule());
						}
						set(
							$current,
							"value",
							lv_value_4_0,
							"de.fraunhofer.ipa.kinematics.xacro.Xacro.EString");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_5='}'
		{
			newLeafNode(otherlv_5, grammarAccess.getVerboseAccess().getRightCurlyBracketKeyword_4());
		}
	)
;

// Entry rule entryRuleDouble0
entryRuleDouble0 returns [String current=null]:
	{ newCompositeNode(grammarAccess.getDouble0Rule()); }
	iv_ruleDouble0=ruleDouble0
	{ $current=$iv_ruleDouble0.current.getText(); }
	EOF;

// Rule Double0
ruleDouble0 returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	this_DOUBLE_0=RULE_DOUBLE
	{
		$current.merge(this_DOUBLE_0);
	}
	{
		newLeafNode(this_DOUBLE_0, grammarAccess.getDouble0Access().getDOUBLETerminalRuleCall());
	}
;

fragment RULE_DIGIT : '0'..'9';

RULE_BOOLEAN : ('true'|'false');

RULE_DOUBLE : RULE_DECINT ('.' RULE_DIGIT*|('.' RULE_DIGIT*)? ('E'|'e') ('-'|'+')? RULE_DECINT);

RULE_DECINT : ('0'|'1'..'9' RULE_DIGIT*|'-' '0'..'9' RULE_DIGIT*);

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
